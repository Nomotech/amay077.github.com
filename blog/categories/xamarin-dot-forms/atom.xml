<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: xamarin.forms | Experiments Never Fail]]></title>
  <link href="http://blog.amay077.net/blog/categories/xamarin-dot-forms/atom.xml" rel="self"/>
  <link href="http://blog.amay077.net/"/>
  <updated>2016-06-11T14:48:55+09:00</updated>
  <id>http://blog.amay077.net/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms の画面(Page)のライフサイクルイベントについて]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles/"/>
    <updated>2016-06-08T00:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles</id>
    <content type="html"><![CDATA[<p>ちょっと誤解してた＆情報がなかったのでまとめてみました。</p>

<!--more-->


<h2>モバイルアプリでの「画面」の基本的なライフサイクルイベント</h2>

<p>まあ Android と iOS についてですが。</p>

<p>画面が表示される時のイベント（コールバック）は、簡潔には以下のようになります。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume|</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause|</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy|</td>
</tr>
</tbody>
</table>


<p>厳密にはもっと細かく、〜される前と後が iOS と Android で微妙に異なるのでだいたいこんな感じという程度と思って下さい。</p>

<p>もう少し細かいイベントは以前調べた以下を参考にしてみてください。</p>

<ul>
<li><a href="http://qiita.com/amay077/items/52a0b0da97fe455abc08">iOS と Android で画面表示時のコールバックを比較する &ndash; Qiita</a></li>
</ul>


<h2>Xamarin.Forms での画面のライフサイクルイベント</h2>

<p>Xamarin.Forms では、上表のライフサイクルイベントは、アプリケーション
(Application) と、画面(Page) のイベントに分かれています。</p>

<p>表に、Xamarin.Forms を追加してみました。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
<th>Xamarin.Forms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnAppearing(">Page.OnAppearing</a>/)|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnResume(">Application.OnResume</a>/) <strong>※要注意</strong> |</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnSleep(">Application.OnSleep</a>/)</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnDisappearing(">Page.OnDisappearing</a>/)|</td>
</tr>
</tbody>
</table>


<p>画面のロード時（<code>viewDidLoad/onCreate</code>）に相当するのは、Xamarin.Forms では <code>OnAppearing</code>、逆にアンロード時は <code>OnDisAppearing</code> です（名称が <code>viewDidAppear</code> に似てるので、画面の表示時かと勘違いしてました）。</p>

<p>画面の表示／非表示時のイベントは、画面でなく Application クラスの <code>OnResume</code>, <code>OnSleep</code> で提供されます。</p>

<p>要注意なのは <code>OnResume</code> です。これ、画面が表示される <strong>初回はイベントが発生しません</strong>。
一度、アプリを背面に退避し、再度前面に持ってきたときに初めて <code>OnResume</code> が呼び出されます。iOS や Android の <code>viewDidAppear / OnResume</code> と同じだと思ってつかうとハマります。</p>

<p>基本的には、 <code>OnAppearing</code> でリソースの確保を、 <code>OnDisAppearing</code> で解放をすればよさそうです。</p>

<p>GPS など、電池消費の激しいリソースを使う場合は、アプリが背面へ隠れたら直ちにそのリソースを解放した方がよいです。その場合は <code>OnResume-OnSleep</code> を使いますが、前述の通り、画面初回表示時は <code>OnResume</code> が走らないので、少し工夫が必要です。</p>

<h2>画面が回転された時</h2>

<p>端末を横向きに回転すると、Android では Activity が破棄されて再度生成される事が知られています。</p>

<p>Xamarin.Forms では Android でもそのような事はなく、 <code>Page.OnSizeAllocated</code> が呼び出されるだけです(iOS も当然同じ)。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/working-with/app-lifecycle/">Working with the App Lifecycle &ndash; Xamarin</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
