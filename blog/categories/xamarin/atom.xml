<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: xamarin | Experiments Never Fail]]></title>
  <link href="http://blog.amay077.net/blog/categories/xamarin/atom.xml" rel="self"/>
  <link href="http://blog.amay077.net/"/>
  <updated>2016-07-08T02:34:42+09:00</updated>
  <id>http://blog.amay077.net/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms のバージョンを 1.2 から 2.3 に上げた時のエラー対処法]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/06/version-up-xamarin-forms-project-from-1-2-to-2-3/"/>
    <updated>2016-07-06T23:59:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/06/version-up-xamarin-forms-project-from-1-2-to-2-3</id>
    <content type="html"><![CDATA[<p>プロジェクトで使ってる Xamarin.Forms のバージョンを「1.2.3.6257」から「2.3.0.107」に上げたら、ビルドでエラーが発生するようになった。</p>

<!--more-->


<p>ググッてみると、「Xamarin Studio を再起動」とか「ソリューションを開き直せ」とか書いてある。
ホンマかいな？と思いながら実施すると、確かになんか変化が。</p>

<p>エラーメッセージが変わっただけだけど。</p>

<blockquote><p>Error initializing task XamlG: Not registered task XamlG.</p></blockquote>

<p>とか、</p>

<blockquote><p>Error initializing task FixedCreateCSharpManifestResourceName: Not registered task FixedCreateCSharpManifestResourceName.</p></blockquote>

<p>調べたときに見た情報の中には .csproj ファイルがどーのこーの書いてあったので、開いてみると、何やら以前のバージョンが残ってた。</p>

<p>ので、その行を削除してソリューションを開き直し、ビルドしたらエラーはなくなった。</p>

<p><code>xml xxx.csproj
   &lt;Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" /&gt;
これ削除→  &lt;Import Project="..\packages\Xamarin.Forms.1.2.3.6257\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets" Condition="Exists('..\packages\Xamarin.Forms.1.2.3.6257\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets')" /&gt;
   &lt;Import Project="..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets" Condition="Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" /&gt;
   &lt;Import Project="..\packages\Xamarin.Forms.2.3.0.107\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets" Condition="Exists('..\packages\Xamarin.Forms.2.3.0.107\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets')" /&gt;
</code></p>

<p>エラーは、ね。</p>

<h2>参考</h2>

<ul>
<li><a href="https://rksoftware.wordpress.com/2016/04/24/001-16/">Xamarin Studio がビルドエラーでビルドできなくなった話 | rksoftware</a></li>
<li><a href="http://stackoverflow.com/questions/27873185/error-error-initializing-task-xamlg-not-registered-task-xamlg">xamarin &ndash; error : Error initializing task XamlG: Not registered task XamlG &ndash; Stack Overflow</a></li>
<li><a href="http://stackoverflow.com/questions/34501301/error-compiling-xamarin-forms-new-project">Error compiling Xamarin Forms new project &ndash; Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms 向けの地図ライブラリ「Xamarin.Forms.GoogleMaps」をリリースしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps/"/>
    <updated>2016-06-27T23:59:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms で使える地図ライブラリは、公式が出している</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/">Xamarin.Forms.Maps</a> &ndash; Maps models and renderers for Xamarin.Forms</li>
</ul>


<p>があるのですが、非常に機能が少ないです（ピンがおけるだけで、図形の描画すらできません）。</p>

<!--more-->


<p>なので、別な選択肢としての「Xamarin.Forms向け地図ライブラリ」を開発し始めました。</p>

<p>それがこちら</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.GoogleMaps/">Xamarin.Forms.GoogleMaps</a> &ndash; Yet another Maps library for Xamarin.Forms that optimized for Google maps.</li>
</ul>


<p>です。</p>

<p>iOS では MapKit に代わり <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS</a> を使用し、 Android/iOS 共に Google Maps に特化することで、API の共通化を容易にし、恐らくAPI共通化の足枷になっているであろう UWP(Bing maps) のサポートは最小限に留めています。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_01.png" alt="screenshot1" /></p>

<h2>現在の機能</h2>

<p>現在のバージョンは 1.1.0 。
公式の Xamarin.Forms.Maps に比べて、ライン・ポリゴン・円を追加できるようになりました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_02.png" alt="screenshot2" /></p>

<p>詳しい比較は</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/wiki/Xamarin.Forms.Maps-%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83">Xamarin.Forms.Maps との比較 &ndash; Xamarin.Forms.GoogleMaps Wiki</a></li>
</ul>


<p>にあります。</p>

<h2>サンプルプログラム</h2>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/tree/master/XFGoogleMapSample">Xamarin.Forms.GoogleMaps/XFGoogleMapSample &ndash; github</a></li>
</ul>


<p>にあります。</p>

<p>Google Maps の APIキーを Android / iOS それぞれで取得する必要があります。</p>

<ul>
<li>Android &ndash;  <a href="http://www.buildinsider.net/mobile/xamarintips/0020">Xamarin.Androidで地図を表示するには？（Google Maps使用） &ndash; Build Insider</a></li>
<li>iOS &ndash; <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS  |  Google Developers</a> の「クイック スタート ステップ」
をそれぞれ参照してください。</li>
</ul>


<h2>オープンソース</h2>

<p><a href="http://open.xamarin.com/">Xamarin Open Source SDK</a> により、 Xamarin.Forms のソースコードもオープンソースになったので、 <a href="https://github.com/xamarin/Xamarin.Forms/tree/master/Xamarin.Forms.Maps">Xamarin.Forms/Xamarin.Forms.Maps &ndash; github</a> などを Fork して作りました。</p>

<p>このライブラリ自体もオープンソースであり、</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Xamarin.Forms.GoogleMaps: Map library for Xamarin.Forms using Google maps API</a></li>
</ul>


<p>で開発しています。（スターを付けてもらえると作者がよろこびます）</p>

<p><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues">要望、コメントなど</a>もらえると嬉しいです。よろしくおねがいします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms の画面(Page)のライフサイクルイベントについて]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles/"/>
    <updated>2016-06-08T00:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles</id>
    <content type="html"><![CDATA[<p>ちょっと誤解してた＆情報がなかったのでまとめてみました。</p>

<!--more-->


<h2>モバイルアプリでの「画面」の基本的なライフサイクルイベント</h2>

<p>まあ Android と iOS についてですが。</p>

<p>画面が表示される時のイベント（コールバック）は、簡潔には以下のようになります。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume|</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause|</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy|</td>
</tr>
</tbody>
</table>


<p>厳密にはもっと細かく、〜される前と後が iOS と Android で微妙に異なるのでだいたいこんな感じという程度と思って下さい。</p>

<p>もう少し細かいイベントは以前調べた以下を参考にしてみてください。</p>

<ul>
<li><a href="http://qiita.com/amay077/items/52a0b0da97fe455abc08">iOS と Android で画面表示時のコールバックを比較する &ndash; Qiita</a></li>
</ul>


<h2>Xamarin.Forms での画面のライフサイクルイベント</h2>

<p>Xamarin.Forms では、上表のライフサイクルイベントは、アプリケーション
(Application) と、画面(Page) のイベントに分かれています。</p>

<p>表に、Xamarin.Forms を追加してみました。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
<th>Xamarin.Forms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnAppearing(">Page.OnAppearing</a>/)|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnResume(">Application.OnResume</a>/) <strong>※要注意</strong> |</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnSleep(">Application.OnSleep</a>/)</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnDisappearing(">Page.OnDisappearing</a>/)|</td>
</tr>
</tbody>
</table>


<p>画面のロード時（<code>viewDidLoad/onCreate</code>）に相当するのは、Xamarin.Forms では <code>OnAppearing</code>、逆にアンロード時は <code>OnDisAppearing</code> です（名称が <code>viewDidAppear</code> に似てるので、画面の表示時かと勘違いしてました）。</p>

<p>画面の表示／非表示時のイベントは、画面でなく Application クラスの <code>OnResume</code>, <code>OnSleep</code> で提供されます。</p>

<p>要注意なのは <code>OnResume</code> です。これ、画面が表示される <strong>初回はイベントが発生しません</strong>。
一度、アプリを背面に退避し、再度前面に持ってきたときに初めて <code>OnResume</code> が呼び出されます。iOS や Android の <code>viewDidAppear / OnResume</code> と同じだと思ってつかうとハマります。</p>

<p>基本的には、 <code>OnAppearing</code> でリソースの確保を、 <code>OnDisAppearing</code> で解放をすればよさそうです。</p>

<p>GPS など、電池消費の激しいリソースを使う場合は、アプリが背面へ隠れたら直ちにそのリソースを解放した方がよいです。その場合は <code>OnResume-OnSleep</code> を使いますが、前述の通り、画面初回表示時は <code>OnResume</code> が走らないので、少し工夫が必要です。</p>

<h2>画面が回転された時</h2>

<p>端末を横向きに回転すると、Android では Activity が破棄されて再度生成される事が知られています。</p>

<p>Xamarin.Forms では Android でもそのような事はなく、 <code>Page.OnSizeAllocated</code> が呼び出されるだけです(iOS も当然同じ)。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/working-with/app-lifecycle/">Working with the App Lifecycle &ndash; Xamarin</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[de:code 2016 に参加した感想]]></title>
    <link href="http://blog.amay077.net/blog/2016/05/27/impression-of-decode16/"/>
    <updated>2016-05-27T00:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/05/27/impression-of-decode16</id>
    <content type="html"><![CDATA[<p>Microsoft の開発者向けイベント <a href="https://www.microsoft.com/ja-jp/events/decode/2016/">de:code 2016</a> に参加させてもらいましたので感想を書きます。</p>

<!--more-->


<p>Microsoft のカンファレンスに参加するのは何年ぶりでしょう、パシフィコ横浜でやってた Tech・ED とか Tech・Days 以来です。</p>

<p>ここ数年 Android や iOS もモバイルアプリ開発ばかりやってきて、 Xamarin で C# に戻ってきて〜って感じだったので、 「Xamarin 以外の Microsoft テクノロジーを広く浅く知る」 という目的で参加しました。</p>

<h1>セッションの感想</h1>

<h2>Day1</h2>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/keynote.aspx">Keynote</a></h3>

<p>なんかこういう全体像まとめるの苦手、というか何番煎じなので、他の人のまとめをみてくれい（爆</p>

<p>とりあえず、
<strong>「りんな が想像以上に自然すぎて、LINE で会話してるのをカミさんに見られたら、完全に誤解されそう」</strong>
です。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-013">DEV-013 まだまだ進化が止まらない！開発者のための Microsoft Azure 最新機能</a></h3>

<p>Azure の現在の提供機能を知りたくて。</p>

<p>Scale Sets、Batch Service、Container Service、Service Fabric、Azure Function など、だいたい AWS を後追いして遜色ない感じになってるのかなー、と。</p>

<p>Region は AWS や Google より多い（日本にも２つある）のは初めて知った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#CLT-006">CLT-006 HoloLens 概要 〜未来を見る新しい方法〜</a></h3>

<p>期待値の高い HoloLens の概要を知った。
AR や VR との対比で MR(複合現実：Mixed Reality)という。
Google Glass(AR)、 Oculus Rift(VR) は体験したことがあるので、HoloLens も体験すると、ものすごくオドロキがあるんだろうな。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">HoloLens でスプラトゥーンやりたい <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/734998372906471424">2016年5月24日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とツイートしたが、その時は VR(仮想現実) の文脈で言ってたことにあとで気づいた。
MR:複合現実で考えると、目の前にある現実のもの（机とか家の壁とか）にインクで色が塗れる、「でもそれどうやって多人数対戦型ゲームになるんだ？」とかまだまだ発想力が乏しい。</p>

<p>（例のおさわり会、２周目やってほしいです。。。）</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-020">DEV-020 Bot Framework &amp; Cognitive Services 〜自動応答ソリューション開発に挑戦〜</a></h3>

<p>Bot Framework と Cognitive Services を使ってBOTを作る様子を見た。
まだ理解できていない感じ、どこまでプログラムしないといけないのか、とか。</p>

<h2>Day2</h2>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#ARC-003">ARC-003 モダン Web：たった今と、ほんの少し未来のはなし</a></h3>

<p>あんまりWeb界隈に詳しくないけど、Twitterで流れてくる情報はウォッチしてたので、だいたい知ってはいた感じ。
セッション時間足りないよなあと思いつつも、react.js や仮想DOM についての話も聞きたかった。</p>

<p>今後の要素として Web Components, Progressive Web Apps, Native Assembly があったが Safari が軒並み「動作：×」になってて、以前見かけた「将来 Safari が IE のようになる」ってツイート思い出した、そうなんでしょうか？</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-011">DEV-011 TypeScript 〜Any browser, Any host, Any OS. Open Source〜</a></h3>

<p>TypeScript も存在は知りつつ放置してたので最新情報を収集。
Visual Studio Code で C# ライクにコードが書けて、ちょうど今仕事で Javascript を書いてるので、すぐにでも使ってみようと思った。
tsc が出力する Javascript コードを参考にして Javascript を書いてもいいかな、とも思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#SNR-018">SNR-018 Azure と NEST で始める Elastic Stack</a></h3>

<p>全文検索の Elasticsearch 周りのセッション。
仕事で Apache Solr を知って、その後 <a href="http://qiita.com/amay077/items/9fb99ab9e6801033977d">Elasticsearch を知ってためして</a>、<a href="http://qiita.com/amay077/items/ca1ce05ac0d295e7c323">Auto-Rebalancing に感動して</a> 仕事でも採用されて現在に至る。</p>

<p>Azure との関連はこじつけｗに近かったが、 .NET のクライアントライブラリがあるのは知らなかった。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#CHK-005">CHK-005 All about 機械学習！ 〜機械学習は魔法の杖か、単なる Big Data のはけ口か〜</a></h3>

<p>タイトルは釣りｗ
実際は、聴講者が登壇者へ質問を投げつけていくチョークトーク。
スピーカーお二人が R&amp;D と実務としてデータ解析を行われている方だったので、とても説得力があった。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">データマイニングについて。「陳腐化したデータのなかに宝物なんてない」 <a href="https://twitter.com/hashtag/roomH?src=hash">#roomH</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735329131051778048">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>データマイニングとの違いとは？という問いに対して。
「人が」「時間をかけて」「データを解析」し、結果が出てから実装していては遅いし、そういう時代は終わった。だからこその機械学習、解析まで機械同士でやってくれと。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Q:どのくらい勉強しなければならないのか？<br>A:時間軸次第。２～３年先には機械学習もパターン化すると予想。その後にはアルゴリズムを選択する必用もなくなると思う。 <a href="https://twitter.com/hashtag/roomH?src=hash">#roomH</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735333613085020160">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>エンジニアが機械学習についてどこまで学習する必要があるのか？という問いに対して。識者の方々が、割と短い期間の内に、機械学習がコモディティ化すると予想されていて、ちょっと驚きと安心。わかりました勉強しませんｗ いろいろな機械学習のツールやサービスを知って、使うフェーズに入っているんだなーと思った。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Q. 機械学習は人間の役割の置き換えになるのか？<br>人間の経験や感覚は、正しい確率が高いわけではない。測定可能なデータをお元に推測ができる機械学習は、多くの場で有用だろう。（筆者意訳）<a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a> <a href="https://twitter.com/hashtag/RoomH?src=hash">#RoomH</a></p>&mdash; dz づ (@dz_) <a href="https://twitter.com/dz_/status/735337240327524352">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>機械学習によって仕事を奪われる人をどうやって説得する？という問いに対して。
かしこい人ほど &ldquo;カンの妥当性の低さ&rdquo; を自認しているので、ニーズはあるよなー、と思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-002">DEV-002 .NET Core / ASP.NET Core が実現するクロスプラットフォーム .NET の今と未来</a></h3>

<p>「.NET Framework はマルチプラットフォームにできます（やらないけどな）」と言ってた時代がなつかしい、実際に Mac や Linux で「動く」 .NET の話。</p>

<p>Xamarin は Mono を使っているけれど、今後は .NET Core に寄せていく(と思われる)ので、今後も要チェック。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Mac + Xamarin Studio で普通に <a href="https://t.co/KM1FpPjJ4s">https://t.co/KM1FpPjJ4s</a> Webアプリが作れてちょっと感動した。 <a href="https://twitter.com/hashtag/roomB?src=hash">#roomB</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735344072546783232">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>実際のところ、VS より Xamarin Studio の方が機能が少なくて軽量なので、サクッと Webアプリ作るには Xamarin Studio でいいじゃん？とか思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-023">DEV-023 Xamarin Deep Dive &ndash; Xmarin.Forms の可能性</a></h3>

<p>「Xamarin.Forms？まだ早いでしょ」派の人間だけど、「なかなかイケるらしい」という噂を聞いてたので参加した。
りんなセッションに客を取られたもののほぼ満員だった。</p>

<p>(Alpha版だから？)相変わらずイレギュラーな動作はするものの、 Behavior, Effects, Previewer など、だいぶ使えるようになってきた感じ。</p>

<p>DataPages は、カスタマイズできると強そう。Workbooks は良いぞ！</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/RoomF?src=hash">#RoomF</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a><br>Xamarin Workbooks ！<br>「実行できる仕様書」みたいなやつ！<a href="https://t.co/4gkVcVzALR">https://t.co/4gkVcVzALR</a> <a href="https://t.co/SLSfKMYHoE">pic.twitter.com/SLSfKMYHoE</a></p>&mdash; ちょまど@MS入社して2ヶ月 (@chomado) <a href="https://twitter.com/chomado/status/735377175935913984">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p><a href="https://blog.xamarin.com/browse-through-the-evolve-2016-mobile-app-source-code/">Evolve アプリ</a> も Xamarin.Forms を使ってるので、ロックイン覚悟でそろそろ本格的に使ってみますか、という気になった（ただし Mac でな）。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DOO-012">DOO-012 FinTech だけじゃモッタイ無い！ブロックチェーンとクラウドが作る未来</a></h3>

<p>FinTech とか ブロックチェーン などのバズワードを追ってなかったので聴講。
何気に一番の発見だった。
ブロックチェーン と プログラムを動かす事 が関係あるとは思ってなかった。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">ブロックチェーンの今後として契約と履行がある。履行＝プログラムの実行、なので開発者もブロックチェーンについて知っておいた方がよい。 <a href="https://twitter.com/hashtag/roomG?src=hash">#roomG</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735396922966564864">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>知らないワードのオンパレードだったが、開発者としても今後ウォッチしていかないといけない事が分かって、聞いてよかった。</p>

<p>Smart Contract, Ethereum およびこれらの要素を利用したサービス、ビジネスについてウォッチ必須。</p>

<p>とりあえず、 <strong>Smart Contract Conference</strong> というイベントが開催されるそうなので、これは是非行きたい。</p>

<h1>その他の感想</h1>

<h2>Xamarin!Xamarin!Xamarin!</h2>

<p>Xamarin のセッションが４つも！Day2は常にどこかでセッションやってる感じでしたね。
そのどれもが満員だった模様で関心の高さが伺えました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">もう Xamarin だけで 1day イベントやったら感 <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735302315146498048">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>って感じですね（スピーカーワンチャンある？）。</p>

<h2>Google や Apple の開発者向けイベントと比べて</h2>

<p>まず 米国の <a href="https://build.microsoft.com/">//build</a> というイベントの後に、国内でも公式なイベントとして de:code を開催してくれる、これは素直にありがたいです。</p>

<p>「技術者は英語を聞けて読めて米国から発信される最新情報をキャッチアップすべき」という意見には賛同しつつも、全ての人がそうはなれない訳で、そういった方々にもキチンと企業として情報発信していく、それを専門とするエヴァンジェリストが国内にたくさん居るのはマイクロソフトの良いところかなと思います。</p>

<p>エヴァンジェリストの方々の多様性にも驚きました。踊ったり、コスプレしたり、漫画描いたり、プレゼンの神だったり…。その多様な活動が話題になることも含めて、今の Google や Apple にはできない、効果の高いことだと思います。</p>

<p>ただ、開発者向けイベントには、その全てが最先端テクノロジーを利用して行われる事を期待してしまうのですが、</p>

<ol>
<li>公式なイベントアプリがない（<a href="https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched">Google I/O にはある</a>）</li>
<li>参加証を紙で用意しないといけない</li>
<li>アンケートも紙で書かないといけない</li>
</ol>


<p>あたりが残念、今後「変化」を期待したいところです。</p>

<p>特に 1. に関しては、Microsoft が買収した Xamarin の単体のイベント &ldquo;Evolve&rdquo; でも Win/Android/iOS全対応の <a href="https://blog.xamarin.com/download-the-xamarin-evolve-2016-conference-app/">公式アプリ</a> を用意している（Microsoft の技術をふんだんに使って）わけなので、 mobile first をうたうなら、このくらいやって欲しかったなあという印象です（これは build もそうですが）。</p>

<p>大抵のイベントアプリには、</p>

<ul>
<li>聞きたいセッションをお気に入り登録する機能（Azure で管理）</li>
<li>フロアマップ</li>
<li>セッションへのフィードバックを送る機能</li>
</ul>


<p>があります。アプリがあるだけでもイベント運営がいろいろ改善しそうな気がします。</p>

<p>また、技術コミュニティ/関連企業が主催する Android や iOS の国内イベントでは、有志の開発者がコミュニティ主導でイベントアプリを開発しています。</p>

<ul>
<li><a href="http://konifar.hatenablog.com/entry/2016/02/11/031257">オープンソースでDroidKaigiのカンファレンスアプリ作ってる &ndash; Konifar&rsquo;s WIP</a></li>
<li><a href="https://github.com/tryswift/trySwiftApp">tryswift/trySwiftApp: try! Swift Conference App</a></li>
</ul>


<p>こういった動きができるととても良いと思います（そのためにはイベント情報を Microsoft がオープンデータにしてくれる必要があるわけですが）。</p>

<h2>あと感じたことをだらだら書く</h2>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">「○年後は○○だ！」とか明確なビジョンが見えなくても、数年後にはなんとなく思ってたような事やってるし、その為の情報を仕入れにこういうイベントに参加するんだよな。そしてそれは会社ではなく個人の問題。だから来年も来ます。 <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735414344226242561">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>参加者はスーツの人が多かったですね。
高額なイベントだし、業務の一環で参加しているとしたら当然会社へ戻って報告の義務があるのでしょう、スライドをカメラでパシャパシャ撮って、一生懸命メモ取ってる人も居ました（かくいう自分も、会社のカネで参加した Tech・ED はそうでしたね）。
会社のカネで参加した人は感想をブログに書くのは抵抗があるのでしょうね。明確にそれを禁止する会社だとしたら残念な会社だと思います。</p>

<p>幸い私の勤め先はじゃんじゃん情報発信してけ的なスタンスだったので良かったですが、それでもこういうイベントは個人(の目的)として参加しています、好きでエンジニアやってるんで。</p>

<p>あと、明確な目標を持つ・決めるのって苦手で、それより
「目を閉じてなんとなく”匂い”のする方に手探りで歩いていたら、なんとなく望んでいた事になってた気がする」
って感じですかね。”匂いを嗅ぐ”のがこういうイベントで、ストリーミングとかではなかなかできないですね。</p>

<p>最後に、こういうイベントではぼっちな事が多かったんですが、Xamarin について数年前からブログに書いてた関連で、 JXUG というコミュニティの皆さんと仲良くさせてもらい、現地でもあいさつ、お話できました。</p>

<p>これについては KeyNote で伊藤執行役が、</p>

<blockquote><p>「エンジニアがコミュニティに参加することを制限したり、就業時間以外や休日に限定したり、会社名を伏せて参加するといった体質を持っていることにも問題がある。日本のエンジニアが、もっと自由に情報交換をしたり、スキルを磨ける環境を作ることに、日本マイクロソフトとしても支援をしたい」</p></blockquote>

<p>− from   <a href="http://cloud.watch.impress.co.jp/docs/news/20160525_758975.html">「日本のデベロッパーには国境を越えてほしい」～Microsoft・グッゲンハイマーCVP &ndash; クラウド Watch</a></p>

<p>と言われているので、会社のカネかどうかに関係なく、じゃんじゃんアウトプットしていきましょう。</p>

<p>ではまた来年！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin 勉強会 #JXUG 13 で発表してきました]]></title>
    <link href="http://blog.amay077.net/blog/2016/05/08/presentation-in-xamarin-jxug-13/"/>
    <updated>2016-05-08T01:18:43+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/05/08/presentation-in-xamarin-jxug-13</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://jxug.connpass.com/event/29734/">JXUGC #13 東京 緊急開催 Xamarin のすべて！ &ndash; connpass</a></li>
</ul>


<!--more-->


<p>で、 <strong>「DroidKaigi2016 アプリを Xamarin に移植した話」</strong> というタイトルで登壇してきました。</p>

<p>その資料です。</p>

<script async class="speakerdeck-embed" data-id="a005a4a951d047948aa9985497736e0d" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>


<p>動画はこちら</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=9oPwHJ4Zc9I">JXUGC #13 東京その３ &ndash; YouTube</a></li>
</ul>


<h2>補足など</h2>

<p>ライブラリ関係のもう少し細かい話は、</p>

<ul>
<li><a href="http://qiita.com/amay077/items/09b442da6ac22269e8e0">DroidKaigi2016アプリを Xamarin.Android に移植した話 &ndash; Qiita</a></li>
</ul>


<p>に書いてます。</p>

<p>伝えたかったのは、Xamarin でも Androidネイティブ／iOSネイティブアプリ開発 の知識も要るよということなのですが、そのためには、</p>

<ul>
<li>DroidKaigi も try!Swift も参加しようぜ！</li>
<li>難しいならそれに携わっている人たちをフォローしとこうぜ！</li>
<li><a href="http://potatotips.connpass.com/">potatotips</a> っていうiOS/Android開発Tips共有会もあるし東京いいなあ！</li>
</ul>


<p>ってことです。
Android にしても iOS にしても、所詮は他人の土俵なんで、その土俵に入って情報収集・質問しないと欲しい情報は得られないです（<strong>まだ</strong> 日本語情報が少ない、とかそういう問題じゃないと思います）。</p>

<p>慣れないOS・慣れない開発環境とかも、最初はツラいんですが、しばらく使い続けれいれば、その内良いトコ取りできるようになります。そういう選択ができるのも Xamarin だけなんで。</p>

<p>正直、 Java とか Swift を専門でやってきたネイティブアプリ開発の人たちに「C# やろうぜ！」って言っても、彼らの現状にあまりメリットないし、各言語に愛着もあるだろうし難しいと思いますから、こちらから歩み寄っていく感じで！</p>

<h2>その他</h2>

<ul>
<li>資料は <a href="http://www.decksetapp.com/">Deckset</a> という Markdown でプレゼン資料生成するツールで作ってます</li>
<li>Slideshare に PDF アップしたら日本語表示できなかったので Speaker Deck にせざるを得なかった</li>
<li>次なんかやるときは <a href="https://transiru.net/">Transiru</a> 使います</li>
</ul>

]]></content>
  </entry>
  
</feed>
