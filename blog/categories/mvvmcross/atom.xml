<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mvvmcross | Experiments Never Fail]]></title>
  <link href="http://blog.amay077.net/blog/categories/mvvmcross/atom.xml" rel="self"/>
  <link href="http://blog.amay077.net/"/>
  <updated>2014-09-10T23:02:34+09:00</updated>
  <id>http://blog.amay077.net/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xamarin Studio でコードテンプレートを使う]]></title>
    <link href="http://blog.amay077.net/blog/2013/07/24/using-code-template-on-xamarin-studio/"/>
    <updated>2013-07-24T17:48:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2013/07/24/using-code-template-on-xamarin-studio</id>
    <content type="html"><![CDATA[<p>Visual Studio や Eclipse とか、IDE ならだいたい備えているコードテンプレート、呼び名はそれぞれ違いますが、<code>for</code> ってタイプすると <code>for (object o : items) {  }</code> 的なコードのひな形を生成してくれる機能の事です。</p>

<!--more-->


<p>Xamarin Studio にも当然ありまして、その使い方を説明します。</p>

<h2>きっかけ</h2>

<p>MvvmCross っていうフレームワークの Tutorial 動画で Visual Studio を使っているんですが、その中で多用されてるので、真似してみたくなりました。</p>

<p>例えばこれ</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=_DHDMNB_IeY&amp;list=PLR6WI6W1JdeYSXLbm58jwAKYT7RQR31-W&amp;feature=player_detailpage&amp;t=178">N=0 : A first MvvmCross Application (N+1 days of MvvmCross) | N+1 days of MvvmCross</a></li>
</ul>


<h2>手順</h2>

<h3>1. Xamarin Studio の Preference を開く</h3>

<p>システムメニュー → Preference → テキストエディタ → コード テンプレート です。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_code_template_in_xamarin_studio_01.png" alt="img1" /></p>

<h3>2. コードテンプレートを作成する</h3>

<p>追加 で &ldquo;新しいテンプレート&rdquo; の画面を開き、</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_code_template_in_xamarin_studio_02.png" alt="img2" /></p>

<p>のように設定します。</p>

<ul>
<li>ショートカット : pmvx</li>
<li>グループ : C#</li>
<li>説明 : 適当に</li>
<li>Mime : text/x-csharp</li>
<li>[展開されるテンプレート] にチェックを入れる</li>
</ul>


<p>テンプレート テキスト は以下の通り</p>

<p>```c#
private $type$ $property$;
public $type$ $Property$
{</p>

<pre><code>get { return $property$; }
set { $property$ = value; RaisePropertyChanged(() =&gt; $Property$); }
</code></pre>

<p>}
```</p>

<p><code>$type$</code>, <code>$property$</code>, <code>$Property$</code> という3つの変数を使っています。画面右端にあるドロップダウンで、各変数が選択できるので、それぞれ Default で既定値を設定します。</p>

<p>ここでは、以下のようにしました。</p>

<ul>
<li>type : object</li>
<li>property : _property</li>
<li>Property : MyProperty</li>
</ul>


<p>OK を押して保存します。</p>

<h3>3.  使ってみる</h3>

<p>コードエディタで <code>pmvx</code> とタイプすると、</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_code_template_in_xamarin_studio_03.png" alt="img2" /></p>

<p>となり、タブを2回ほど押すと、</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_code_template_in_xamarin_studio_04.png" alt="img2" /></p>

<p>と、テンプレートコードが挿入されます。
あとは、ハイライトされている部分を変更すると、テンプレート内も連動して変更されます。</p>

<p>これでコード入力が楽になりました。</p>

<p>コードテンプレートのインポート／エクスポートや、Visual Studio との互換性なども調べてみたいですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin Studio で MvvmCross を使うための準備]]></title>
    <link href="http://blog.amay077.net/blog/2013/07/22/using-pcl-on-xamarin-studio/"/>
    <updated>2013-07-22T20:46:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2013/07/22/using-pcl-on-xamarin-studio</id>
    <content type="html"><![CDATA[<p>クロスプラットフォーム MVVM フレームワーク「<a href="https://github.com/slodge/MvvmCross">MvvmCross</a>」を Mac の Xamarin Studio で使うための準備についてです。</p>

<!--more-->


<p>基本は、</p>

<ul>
<li><a href="http://stackoverflow.com/questions/17653208/getting-pcl-mvvmcross-nuget-and-xamarin-studio-to-play-nice-on-mac">monotouch &ndash; Getting PCL, Mvvmcross, Nuget and Xamarin Studio to play &ldquo;nice&rdquo; on Mac &ndash; Stack Overflow</a></li>
</ul>


<p>のトレース。主には PCL と Nuget が正しく動くようにする手順です。</p>

<h2>前提条件</h2>

<p>必要な(というか試した)環境は以下の通り。
（Xamarin の PCL サポートがまだ「進行中」なので、将来的には変わる可能性大）</p>

<ul>
<li>Xamarin Studio Version 4.0.10 (beta)</li>
<li>Xamarin.Android Version: 4.8.0 (beta)</li>
<li>Xamarin.iOS Version: 6.3.8.11 (beta)</li>
<li>Xamarin Studio Add-in NuGet Package Management Version 0.5</li>
<li>Mac OS X 10.8.4</li>
</ul>


<h2>手順</h2>

<h3>Xamarin Studio</h3>

<ol>
<li>Mac に Xamarin Studio を入れて、Beta チャンネルに切り替えて更新。</li>
<li>アドインマネージャから NuGet Package Management をインストール。</li>
</ol>


<h3>.NETPortable DLLs を Win機からコピってくる</h3>

<p>Win機の <code>C:¥Program Files (x86)¥Reference Assemblies¥MicrosoftFramework.NETPortable</code> を、Mac の <code>/Library/Frameworks/Mono.framework/External/xbuild-frameworks/.NETPortable/</code> へコピー。</p>

<p>Win機がない場合は、<a href="http://amay077.github.io/blog/2013/07/21/building-testing-environment-for-mac-using-ietestdrive/">これ</a> などで Win仮想環境を作り、<a href="http://www.microsoft.com/visualstudio/jpn/downloads">Visual Studio Ultimate 2012 90日間試用版</a> を入れるとよい(Express 版は上記DLLsがないのでNG)。</p>

<h3>Nuget にパッチをあててビルド</h3>

<p><a href="http://stackoverflow.com/questions/17653208/getting-pcl-mvvmcross-nuget-and-xamarin-studio-to-play-nice-on-mac">ここ</a> の <strong>Patch to Nuget.Core.dll:</strong> にあるテキストを適当なファイルに保存(ここでは <code>patch.diff</code> とする)して、以下のコマンドを実行。</p>

<p>```sh
git clone <a href="https://git01.codeplex.com/nuget">https://git01.codeplex.com/nuget</a>
cd nuget
git checkout -b 2.6 origin/2.6</p>

<p>patch -p1 &lt; patch.diff</p>

<p>cd src/Core
xbuild</p>

<p>cp bin/Debug/NuGet.Core.dll  ~/Library/Application\ Support/XamarinStudio-4.0/LocalInstall/Addins/MonoDevelop.PackageManagement.0.5/NuGet.Core.dll
```</p>

<p>以上で、環境準備は終わり。</p>

<h2>試す</h2>

<ol>
<li>Xamarin Studio で Portable Class Library を作成する</li>
<li>プロジェクト設定を見ると Xamarin.Android、Xamarin.iOS などがあるが、これらを<strong>チェックしてOKしても適用されてない</strong> <img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_pcl_on_xamarin_studio01.png" alt="img1" /></li>
<li>Nuget Manager から mvvmcorss で検索して &ldquo;MvvmCross &ndash; Hot Tuna  Starter Pack&rdquo; を Add してもエラーになる。<img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_pcl_on_xamarin_studio02.png" alt="img1" /></li>
</ol>


<p>うーん、ダメか？</p>

<h2>プロジェクトファイルをちょっと修正する</h2>

<p>ポータブルクラスライブラリのプロジェクトファイル(xxx.csproj) をテキストエディタで開き、<code>&lt;TargetFrameworkProfile&gt;</code> の値を <code>Profile104</code> に書き換える。(修正前は Profile1 になってた。なぜ Profile104 かと言えば、Visual Studio で作った PCL プロジェクトのプロファイルが 104 だったから、という程度の理解レベル)</p>

<p>```xml xxx.csproj
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;utf-8&rdquo;?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup></p>

<pre><code>&lt;Configuration Condition=" '$(Configuration)' == '' "&gt;Debug&lt;/Configuration&gt;
&lt;Platform Condition=" '$(Platform)' == '' "&gt;AnyCPU&lt;/Platform&gt;
&lt;ProductVersion&gt;10.0.0&lt;/ProductVersion&gt;
&lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
&lt;ProjectGuid&gt;{50D8E04F-FDE0-4A65-B388-5698BEFE8DC5}&lt;/ProjectGuid&gt;
&lt;ProjectTypeGuids&gt;{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}&lt;/ProjectTypeGuids&gt;
&lt;OutputType&gt;Library&lt;/OutputType&gt;
&lt;RootNamespace&gt;Portable2&lt;/RootNamespace&gt;
&lt;AssemblyName&gt;Portable2&lt;/AssemblyName&gt;
&lt;TargetFrameworkProfile&gt;Profile104&lt;/TargetFrameworkProfile&gt;    &lt;--Here!!!!!
&lt;TargetFrameworkVersion&gt;v4.0&lt;/TargetFrameworkVersion&gt;
</code></pre>

<p>  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "></p>

<pre><code>&lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;
</code></pre>

<p>```</p>

<h2>再度試す</h2>

<p>もう一度プロジェクトを開いて Nuget から &ldquo;MvvmCross &ndash; Hot Tuna  Starter Pack&rdquo; を Add すると、成功する。プロジェクトツリーを見ると必要なDLLやソースコードが配置されている。</p>

<p>これで Xamarin Studio でも PCL が使えそう。
MvvmCross の Tutorial &ndash; <a href="http://mvvmcross.wordpress.com/">MvvmCross N+1 Table of Context</a> を試せます。</p>
]]></content>
  </entry>
  
</feed>
