<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linq | Experiments Never Fail]]></title>
  <link href="http://amay077.github.io/blog/categories/linq/atom.xml" rel="self"/>
  <link href="http://amay077.github.io/"/>
  <updated>2013-09-30T23:33:52+09:00</updated>
  <id>http://amay077.github.io/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[hxLINQ というのがあったので使ってみた。]]></title>
    <link href="http://amay077.github.io/blog/2012/10/03/how-to-use-hxlinq/"/>
    <updated>2012-10-03T17:17:00+09:00</updated>
    <id>http://amay077.github.io/blog/2012/10/03/how-to-use-hxlinq</id>
    <content type="html"><![CDATA[<p>hxLINQ というのがあったので使ってみた。
JSLinq をベースにして作られたものらしい。
Flash/JS/PHP/Neko/C++ でテスト済だそうです。</p>

<!-- more -->


<h2>導入</h2>

<p>まず、 hxLINQ をインストールします。</p>

<pre><code>haxelib install hxLINQ
</code></pre>

<p>Sublime Text2 と <a href="https://github.com/clemos/haxe-sublime2-bundle">haxe-sublime2-bundle</a> を使っている場合は、<code>shift+ctrl+L</code> で ライブラリの一覧が出るのでそこから選択するだけです。ﾁｮｰｲｰﾈ!</p>

<h2>使い方</h2>

<p>こんな感じで。</p>

<p>```as hxLINQExample.hx
var it = new hxLINQ.LINQ([1,2,3,4,5,6,7,8,9])
.where(function(v:Int, i:Int):Bool {</p>

<pre><code>return v % 2 == 0; // 抽出(偶数のみ)
</code></pre>

<p>})
.select(function(v:Int):Float {</p>

<pre><code>return v / 10.0; // 加工(10で除算)
</code></pre>

<p>})
.iterator();</p>

<p>while(it.hasNext()) {</p>

<pre><code>trace(it.next()); // out:0.2, 0.4, 0.6, 0.8
</code></pre>

<p>}
```</p>

<p>ひと通りの機能は揃ってるので使えそうな感じだけど、Rx の機能まで求めてしまうのは贅沢でしょうか。</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/andyli/hxLINQ">andyli / hxLINQ</a></li>
<li><a href="http://lib.haxe.org/p/hxLINQ">hxLINQ - lib.haxe.org</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
