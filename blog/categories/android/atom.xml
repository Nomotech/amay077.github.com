<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | Experiments Never Fail]]></title>
  <link href="http://blog.amay077.net/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://blog.amay077.net/"/>
  <updated>2016-07-18T17:26:07+09:00</updated>
  <id>http://blog.amay077.net/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[カスタムマーカーに対応した Xamarin.Forms.GoogleMaps v1.4.0 をリリースしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/18/xamarin_forms_googlemaps_v1_4_0_released/"/>
    <updated>2016-07-18T17:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/18/xamarin_forms_googlemaps_v1_4_0_released</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms.GoogleMaps v1.4.0 をリリースしました。</p>

<!--more-->


<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.GoogleMaps/1.4.0">NuGet Gallery | Xamarin.Forms.GoogleMaps 1.4.0</a></li>
</ul>


<p>待望？のカスタムマーカーに対応しました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_001.png" alt="image001" /></p>

<h2>カスタムマーカーの使い方</h2>

<p><code>Pin.Icon</code> に <code>BitmapDescriptorFactory</code> により生成される <code>BitmapDescriptor</code> を設定します。</p>

<p><code>BitmapDescriptorFactory</code> の３つのファクトリメソッドにより、
「デフォルトマーカーの色を変える」「プラットフォーム毎の画像リソースを使用する」「共通の画像リソースを使用する」
の３つが使用できます。</p>

<h3>デフォルトマーカーの色を変える</h3>

<p><a href="https://developers.google.com/maps/documentation/ios-sdk/reference/interface_g_m_s_marker.html?hl=ja#ae320cb082a68c22eb1f37955f8e56228"><code>iOS:GMSMarker.markerImageWithColor</code></a>, <a href="https://developers.google.com/android/reference/com/google/android/gms/maps/model/BitmapDescriptorFactory.html?hl=ja#defaultMarker(float"><code>Android:BitmapDescriptorFactory.defaultMarker</code></a>) に対応する、既定のマーカー形状の色のみを変える機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.DefaultMarker(Color)</code> メソッドを使用します。</p>

<p><code>csharp
pin.Icon = BitmapDescriptorFactory.DefaultMarker(Color.Pink);
</code></p>

<h3>プラットフォーム毎の画像リソースを使用する</h3>

<p><a href="https://developers.google.com/maps/documentation/ios-sdk/marker?hl=ja#_7"><code>iOS:UIImage.imageNamed</code></a>, <a href="https://developers.google.com/android/reference/com/google/android/gms/maps/model/BitmapDescriptorFactory.html?hl=ja#defaultMarker(float"><code>Android:BitmapDescriptorFactory.fromAsset</code></a>) に対応する、プラットフォーム固有の画像リソースを、マーカー画像として使用する機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.FromBundle(string)</code> メソッドを使用します。</p>

<p><code>csharp
pin.Icon = BitmapDescriptorFactory.FromBundle("image01.png");
</code></p>

<p>引数の bundleName は、 <strong>同じ名称で</strong> 、プラットフォーム毎に次のように用意されている必要があります。</p>

<h4>Android の場合</h4>

<p>Android側のプロジェクトの <code>Assets</code> ディレクトリ内に <code>image01.png</code> を追加し、 Build Action を ”Android Asset” に設定します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_002.png" alt="image001" /></p>

<h4>iOS の場合</h4>

<p>iOS側のプロジェクト <code>image01.png</code> を追加し、 Build Action を ”BundleResource” に設定します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_003.png" alt="image001" /></p>

<h3>共通の画像リソースを使用する</h3>

<p>画像を <code>Stream</code> を直接指定できる、機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.DefaultMarker(Color)</code> メソッドを使用します。</p>

<p>```csharp
// PCLプロジェクトに EmbeddedResouece として追加した &ldquo;marker01.png&rdquo; を読み込んで Stream 化
var assembly = typeof(CustomPinsPage).GetTypeInfo().Assembly;
var stream = assembly.GetManifestResourceStream($&ldquo;XFGoogleMapSample.marker01.png&rdquo;);</p>

<p>// Stream をマーカーに設定
pin.Icon = BitmapDescriptorFactory.FromStream(stream);
```</p>

<h2>【注意】プラットフォーム毎のマーカーサイズの違い</h2>

<p>「プラットフォーム毎の画像リソースを使用する」「共通の画像リソースを使用する」で見られる現象なのですが、iOS と Android では <strong>同じサイズの画像を指定しているのに iOS の方が大きく描画されます</strong></p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_004.png" alt="image001" /></p>

<p>なぜこうなるのか分かりませんが、 <a href="https://developers.google.com/maps/documentation/ios-sdk/intro?hl=ja">Google Maps SDK for iOS</a> と <a href="https://developers.google.com/maps/documentation/android-api/intro?hl=ja">Google Maps Android API</a> を直接使用した時もこうなるので、両者の仕様というかプラットフォーム自体の仕様なのかも知れません。</p>

<p>特に <code>BitmapDescriptorFactory.FromStream</code> を使用した時には使い勝手が悪いのですが、「ネイティブの Google Maps SDK の機能を共通APIでラップする」のが第一目標なので、とりあえず画像を何も加工しない実装でリリースしました。</p>

<p>何か原因などについてヒントがある方は</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues/40">Why custom pin icon in iOS bigger than Android? · Issue #40 · amay077/Xamarin.Forms.GoogleMaps</a></li>
</ul>


<p>に書いてもらえると助かります（日本語で大丈夫です）。</p>

<h2>サンプルプログラム</h2>

<p><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/tree/master/XFGoogleMapSample">XFGoogleMapSample</a> の <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/blob/master/XFGoogleMapSample/XFGoogleMapSample/CustomPinsPage.xaml.cs"><code>CustomPinsPage.xaml.cs</code></a> でこれらの機能を使用しています。</p>

<p>是非使ってみてください。よければ <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Github リポジトリ</a> に Star ください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ボタンをタップした時に○○する、を Java と Swift と Xamarin で比較する]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/15/comparison_on_click_with_java_swift_xamarin/"/>
    <updated>2016-07-15T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/15/comparison_on_click_with_java_swift_xamarin</id>
    <content type="html"><![CDATA[<p>たぶん一番書くやつを</p>

<!--more-->


<ul>
<li>Android-Java</li>
<li>Android-Xamarin</li>
<li>iOS-Swift</li>
<li>iOS-Xamarin</li>
</ul>


<p>で比較。</p>

<hr />

<h2>Android-Java</h2>

<p>```java MainActivity.java
button1.setOnClickListener(new View.OnClickListener() {</p>

<pre><code>@Override
public void onClick(View view) {
    label1.setText("pushed!!");        
}
</code></pre>

<p>});</p>

<h2>```</h2>

<h2>Xamarin.Android(C#)</h2>

<p>```csharp MainActivity.cs
buttonOk.Click += (_, e)</p>

<pre><code>=&gt; label1.Text = "pushed!!";
</code></pre>

<h2>```</h2>

<h2>iOS-Swift</h2>

<p>```java ViewController.swift
buttonOK.addTarget(self, action:</p>

<pre><code>#selector(ViewController.onTouch(_:)), 
forControlEvents: .TouchUpInside)
</code></pre>

<p>・・・
func onTouch(sender: AnyObject) {</p>

<pre><code>label1.text = "pushed!!"
</code></pre>

<p>}</p>

<h2>```</h2>

<h2>Xamarin.iOS(C#)</h2>

<p>```csharp ViewColtroller.cs
buttonOk.TouchUpInside += (_, e)</p>

<pre><code>=&gt; label1.Text = "pushed!!";
</code></pre>

<h2>```</h2>

<h2>まとめ</h2>

<p><strong>Xamarin はいいぞ！</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin ハンズオン浜松に参加しました #JXUG #jaghama]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/10/joined_xamarin_hads_on_ad_hamamatsu/"/>
    <updated>2016-07-10T18:32:39+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/10/joined_xamarin_hads_on_ad_hamamatsu</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://jaghama.connpass.com/event/33735/">Xamarinハンズオン浜松 #JXUG #jaghama &ndash; connpass</a></li>
</ul>


<!--more-->


<p>　日本Androidの会 浜松支部の市川(<a href="https://twitter.com/macha1972">@macha1972</a>)さんからのご相談を受けて、JXUG の田淵さんに講師を依頼、 <a href="https://groups.google.com/forum/#!forum/android-hamamatsu">日本Android浜松支部(#jaghama)</a>と <a href="http://jxug.org/">Japan Xamarin Users Group (#jxug)</a> の共催という形で、 Xamarin 勉強会（ハンズオン）を浜松市で開催しました。</p>

<h2>プレイベント「さわやかを食べる会」</h2>

<p>　兼ねてより「さわやかに行きたい！」という声が聞かれていた（僕も食べたかった！）ので、プレイベントとして「さわやかを食べる会」も行いました。</p>

<p>　言い出しっぺだったので、浜松駅からさわやかまでの送迎の為の車を出しました。</p>

<p>久しぶりのさわやかだったので、定番のげんこつを外せず今回は断念した さわやかバーガー のメニュー</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_01.jpg" alt="" /></p>

<p>げんこつハンバーグ第一形態</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_02.jpg" alt="" /></p>

<p>げんこつハンバーグ第二形態</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_03.jpg" alt="" /></p>

<p>久しぶりだった、やっぱり旨かった、肉を喰ってるッ！って感じがした。</p>

<h2>Xamarin ハンズオン</h2>

<p><a href="http://jxug.connpass.com/event/30152/">JXUGC #14 Xamarin ハンズオン 名古屋大会</a> でもサポートスタッフをさせていただいてたので、だいたいの要領は同じ。</p>

<p>当時にくらべて、Xamarin も Visual Studio もバージョンアップしていて、導入時のエラーはだいぶ減ってきたかなあという印象。</p>

<p>それでも、「Android SDK で Android N を入れているとビルドエラーになる」とか、新しいハマりポイントも出てきたので、やっぱり要注意。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">これ、5/30名の確率でハマってる。Frequently Asked Questions にしてよいでしょう？レベル <a href="https://t.co/DXklIE2FBq">https://t.co/DXklIE2FBq</a> <a href="https://twitter.com/hashtag/JXUG?src=hash">#JXUG</a> <a href="https://twitter.com/hashtag/xamarin?src=hash">#xamarin</a> <a href="https://twitter.com/hashtag/jaghama?src=hash">#jaghama</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751653596861566976">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>このへんは、</p>

<ul>
<li><a href="https://github.com/ytabuchi/XamarinHOL/issues">Issues · ytabuchi/XamarinHOL</a></li>
</ul>


<p>に上げておいて、継続的に改良していけるとよいな。</p>

<p><a href="https://github.com/ytabuchi/XamarinHOL">ハンズオン資料</a>が素晴らしいので、躓くのはほとんど最初だけだよねー、ということで、時間の最後らへんは、</p>

<p>田淵さんからT(enpura)ポイントをもらったり、</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/amay077">@amay077</a> さんに public Command(Action execute, Func&lt;bool&gt; canExecute); を教えていただいた！！！！！Tポイント!!! <a href="https://twitter.com/hashtag/JXUG?src=hash">#JXUG</a></p>&mdash; 田淵 義人＠エクセルソフト (@ytabuchi) <a href="https://twitter.com/ytabuchi/status/751682059186216960">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>「そこで Rx ですよ！」とか言っていた。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">田淵さんが「2つのデータのいずれかが変わった時に、画面のとある項目を更新する必要がある」と言われたので、<br>「そこで Rx ですよ」とだけ言っておいた。 <a href="https://twitter.com/hashtag/jxug?src=hash">#jxug</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751691630172712960">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>スパルタだったけど、時間的にも少し余裕があったかな。皆さん完走できていたと思います。</p>

<h2>LT</h2>

<p>先日より開発中の Xamarin.Forms.GoogleMaps を Qiita のスライドモードを使って LT しました。</p>

<ul>
<li><a href="http://qiita.com/amay077/items/feb5353bf8fb8b8c866d">Xamarin.Forms 用の地図ライブラリつくった &ndash; Qiita</a></li>
</ul>


<h2>懇親会、アフターイベント</h2>

<p>終わったら懇親会、やっぱ地方はいいな！なんとなく落ち着くのです（車出したのでお酒は飲んでいません）。</p>

<p>会の途中、流れでアプリ紹介タイムになり、 <a href="https://twitter.com/fxxk_authority">しんす</a> さんの Multi Function Display というアプリがおもしろそうだった（他の方紹介できずごめんなさい）。</p>

<ul>
<li><a href="https://www.microsoft.com/ja-jp/store/apps/multi-function-display/9nblggh6268l">Multi Function Display – Microsoft ストアの Windows アプリ</a></li>
</ul>


<p>夜、車のダッシュボードにおいて、速度とかをフロンドガラスに写り込ませて見られるのだそうで、カッコいい！MADOSMA の使いみちに困っていたので使ってみます！</p>

<p>　懇親会の後、数名の方でラーメンを食べに行くとのこと。お腹もいい感じだったので帰ろうかなと思っていたのですが、 <strong>「三太」</strong> に行くと聞いて手のひら返し、ご一緒させていただきました。浜松来たらほぼ必ず行くんですよ、三太。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">俺の中の浜松のソウルフード「三太のラーメン」の誘惑に負けた <a href="https://twitter.com/hashtag/jxug?src=hash">#jxug</a> <a href="https://twitter.com/hashtag/jaghama?src=hash">#jaghama</a> (@ 三太 モール街店 in 浜松市, 静岡県) <a href="https://t.co/rhxGxhqfyZ">https://t.co/rhxGxhqfyZ</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751746459469541376">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>約30名も集まっていただいて感謝！</p>

<p>学生さん多かった印象、休憩時間に「もしかしてみなさんは昭和生まれなんですか？」とぶっ込まれた時は、場が軽く凍りましたねｗ</p>

<p>東京のどでかい勉強会もいいけど、地方の十数名くらいの勉強会の方がどっちかというと落ち着きます（^ ^）</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">さわやかうまかった。次は 生しらす か 桜エビ を食べたいです。</p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751617505202843648">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Android で音楽の音量を下げてから効果音を再生する]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/09/gain_transient_in_xamarin_android/"/>
    <updated>2016-07-09T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/09/gain_transient_in_xamarin_android</id>
    <content type="html"><![CDATA[<p>カーナビでよくある、音楽流しながらナビしてると、ガイダンス中は音楽のボリュームを一時的に下げて、案内の音声を再生するってやつ。</p>

<!--more-->


<ul>
<li><a href="http://ja.stackoverflow.com/questions/27452/%e3%82%b9%e3%83%9e%e3%83%9b%e3%82%a2%e3%83%97%e3%83%aa%e8%b5%b7%e5%8b%95%e6%99%82ios-android%e3%81%ab%e5%86%8d%e7%94%9f%e4%b8%ad%e3%81%ae%e9%9f%b3%e6%a5%bd%e3%82%92%e5%81%9c%e6%ad%a2%e3%81%95%e3%81%9b%e3%82%8b%e6%96%b9%e6%b3%95/27459#27459">スマホアプリ起動時(iOS/Android)に再生中の音楽を停止させる方法 &ndash; スタック・オーバーフロー</a></li>
</ul>


<p>に回答したので、その関連でやってみた。</p>

<p>```csharp MainActivity.cs
[Activity(Label = &ldquo;AudioFocusSample&rdquo;, MainLauncher = true, Icon = &ldquo;@mipmap/icon&rdquo;)]
public class MainActivity : Activity, AudioManager.IOnAudioFocusChangeListener
{</p>

<pre><code>protected override void OnCreate(Bundle savedInstanceState)
{
    base.OnCreate(savedInstanceState);
    SetContentView(Resource.Layout.Main);

    var audioManager = (AudioManager)GetSystemService(Context.AudioService);

    // 先に効果音を読み込んでおく
    var soundPool = new SoundPool(1, Stream.Music, 0);
    var soundId = soundPool.Load(ApplicationContext, Resource.Raw.cat, 0);
    // SoundPool は再生完了のコールバックがないので、事前に長さを得ておく
    var duration = GetSoundDuration(Resource.Raw.cat);

    FindViewById&lt;Button&gt;(Resource.Id.buttonRequestFocus).Click += async (sender, e) =&gt; 
    {
        // ダッキングを許可する AudioFocus を要求
        var result = audioManager.RequestAudioFocus(this, Stream.Music, AudioFocus.GainTransientMayDuck);
        if (result == AudioFocusRequest.Granted)
        {
            // 効果音を再生する
            soundPool.Play(soundId, 1.0f, 1.0f, 0, 0, 1.0f);
            // 再生完了まで待つ
            await Task.Delay((int)duration);
            // AudioFocus を開放
            audioManager.AbandonAudioFocus(this);
        }
    };
}

// 音声の再生長さを得る
private long GetSoundDuration(int rawId)
{
    using (var player = MediaPlayer.Create(ApplicationContext, rawId))
    {
        return player.Duration;
    }
}

// IOnAudioFocusChangeListener の実装（RequestAudioFocus のために必要）
public void OnAudioFocusChange([GeneratedEnum] AudioFocus focusChange)
{
   // 今回は使用しない
}
</code></pre>

<p>}
```</p>

<p>効果音 <code>Resource.Raw.cat</code> は、 <a href="http://on-jin.com/sound/index.php">On-Jin ～音人～</a> さんのを使わせてもらいました。</p>

<p>音量を小さくする＝絞る＝ダッキング、というのがなかなか連想しづらいので辿りつけない。
Android の音声再生は、他に <code>MediaPlayer</code> とか <code>AudioTrack</code> もあるし、リモコンなど外部からの操作のため？に BroadcastReceiver を使わないといけないし。</p>

<p>サンプルアプリはこちら。</p>

<ul>
<li><a href="https://github.com/amay077/AudioFocusSample">amay077/AudioFocusSample</a></li>
</ul>


<p>次は Xamarin.iOS でやってみる。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.android.com/training/managing-audio/audio-focus.html">Managing Audio Focus | Android Developers</a></li>
<li><a href="http://dev.classmethod.jp/smartphone/android/android-tips-48-soundpool-mediaplayer/">Android Tips #48 BGM や効果音を再生する ｜ Developers.IO</a></li>
<li><a href="http://ameblo.jp/negiiiimo/entry-11488832997.html">Managing Audio Playback part2｜Android開発記録雑記</a></li>
<li><a href="http://qiita.com/KeithYokoma/items/3896f5934478fa560a50">音を制御する &ndash; AudioManager &ndash; Qiita</a></li>
<li><a href="https://developer.amazon.com/public/ja/solutions/devices/fire-tv/docs/managing-audio-focus">Fire TV でのオーディオフォーカスの管理 &ndash; アマゾン アプリ 開発者ポータル</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms 向けの地図ライブラリ「Xamarin.Forms.GoogleMaps」をリリースしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps/"/>
    <updated>2016-06-27T23:59:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms で使える地図ライブラリは、公式が出している</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/">Xamarin.Forms.Maps</a> &ndash; Maps models and renderers for Xamarin.Forms</li>
</ul>


<p>があるのですが、非常に機能が少ないです（ピンがおけるだけで、図形の描画すらできません）。</p>

<!--more-->


<p>なので、別な選択肢としての「Xamarin.Forms向け地図ライブラリ」を開発し始めました。</p>

<p>それがこちら</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.GoogleMaps/">Xamarin.Forms.GoogleMaps</a> &ndash; Yet another Maps library for Xamarin.Forms that optimized for Google maps.</li>
</ul>


<p>です。</p>

<p>iOS では MapKit に代わり <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS</a> を使用し、 Android/iOS 共に Google Maps に特化することで、API の共通化を容易にし、恐らくAPI共通化の足枷になっているであろう UWP(Bing maps) のサポートは最小限に留めています。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_01.png" alt="screenshot1" /></p>

<h2>現在の機能</h2>

<p>現在のバージョンは 1.1.0 。
公式の Xamarin.Forms.Maps に比べて、ライン・ポリゴン・円を追加できるようになりました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_02.png" alt="screenshot2" /></p>

<p>詳しい比較は</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/wiki/Xamarin.Forms.Maps-%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83">Xamarin.Forms.Maps との比較 &ndash; Xamarin.Forms.GoogleMaps Wiki</a></li>
</ul>


<p>にあります。</p>

<h2>サンプルプログラム</h2>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/tree/master/XFGoogleMapSample">Xamarin.Forms.GoogleMaps/XFGoogleMapSample &ndash; github</a></li>
</ul>


<p>にあります。</p>

<p>Google Maps の APIキーを Android / iOS それぞれで取得する必要があります。</p>

<ul>
<li>Android &ndash;  <a href="http://www.buildinsider.net/mobile/xamarintips/0020">Xamarin.Androidで地図を表示するには？（Google Maps使用） &ndash; Build Insider</a></li>
<li>iOS &ndash; <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS  |  Google Developers</a> の「クイック スタート ステップ」
をそれぞれ参照してください。</li>
</ul>


<h2>オープンソース</h2>

<p><a href="http://open.xamarin.com/">Xamarin Open Source SDK</a> により、 Xamarin.Forms のソースコードもオープンソースになったので、 <a href="https://github.com/xamarin/Xamarin.Forms/tree/master/Xamarin.Forms.Maps">Xamarin.Forms/Xamarin.Forms.Maps &ndash; github</a> などを Fork して作りました。</p>

<p>このライブラリ自体もオープンソースであり、</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Xamarin.Forms.GoogleMaps: Map library for Xamarin.Forms using Google maps API</a></li>
</ul>


<p>で開発しています。（スターを付けてもらえると作者がよろこびます）</p>

<p><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues">要望、コメントなど</a>もらえると嬉しいです。よろしくおねがいします。</p>
]]></content>
  </entry>
  
</feed>
