<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C# | Experiments Never Fail]]></title>
  <link href="http://amay077.github.io/blog/categories/c-/atom.xml" rel="self"/>
  <link href="http://amay077.github.io/"/>
  <updated>2014-01-18T18:21:27+09:00</updated>
  <id>http://amay077.github.io/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ViewController の ViewDidLoad で this が nil になった件]]></title>
    <link href="http://amay077.github.io/blog/2014/01/18/viewcontroller-is-nil-when-viewdidload/"/>
    <updated>2014-01-18T18:18:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/18/viewcontroller-is-nil-when-viewdidload</id>
    <content type="html"><![CDATA[<p>Xamarin Studio + Xcode で Storyboard でアプリを作っていた。複数ある画面の内、ある一つの画面に遷移すると落ちる現象に見舞われていろいろ調べていた。</p>

<!--more-->


<p>Xamarin Studio で該当画面の ViewController の ViewDidLoad にブレークポイントを仕掛けて停止させ、ウォッチしてみたところ、なんと this が「nil」になっていた。</p>

<p>これのおかげで、ViewController に配置した UILabel などにもアクセスできない。</p>

<p>ViewController を作りなおしてみたり、呼び出し方法を変えてみたりいろいろやってみたけど解消せず。</p>

<p>30分ほど悪戦苦闘した後、実機にインストールされている該当アプリを一旦削除し、Xamarin Studio も終了させた後に再起動、ソリューションをクリーンして再ビルドして実行してみたところ、問題が解消した。</p>

<p>なにがしかのトラブルが起きた時は、まずは端末内のアプリを消してみると良いのかも知れない。（これまでの経験的に）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps Component for iOS の CoordinateBounds について]]></title>
    <link href="http://amay077.github.io/blog/2014/01/16/notice-for-coordinatebounds-in-gmapiossdk/"/>
    <updated>2014-01-16T18:05:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/16/notice-for-coordinatebounds-in-gmapiossdk</id>
    <content type="html"><![CDATA[<p>すごくニッチな話ですけど、Xamarin Components にある Google Maps を Xamarin.iOS で使った。</p>

<!--more-->


<ul>
<li><a href="http://components.xamarin.com/view/googlemapsios">Google Maps /Components</a></li>
</ul>


<p>このライブラリの中に <code>CoordinateBounds</code> という「領域」を表すクラスがある。これは <a href="https://developers.google.com/maps/documentation/ios/reference/interface_g_m_s_coordinate_bounds?hl=ja">GMSCoordinateBounds</a> の Binding だ。</p>

<p>で、CoordinateBounds には <code>Including</code> (<a href="https://developers.google.com/maps/documentation/ios/reference/interface_g_m_s_coordinate_bounds?hl=ja#a63cffdf310ca19c6bab74c9a4034aadd">includingCoordinate</a>) というメソッドがあって、これを呼ぶと指定した座標が入るように領域を拡幅してくれる、便利だ。</p>

<p>で、最初はこのクラスをこう使っていた。</p>

<p><code>csharp
var bounds = new CoordinateBounds();
bounds.Including(new CLLocationCoordinate2D(34d, 134d));
bounds.Including(new CLLocationCoordinate2D(33d, 133d));
bounds.Including(new CLLocationCoordinate2D(35d, 135d));
</code></p>

<p>動かしてみて、この使い方だと <code>bounds</code> から期待した結果が得られないことに気づいた。範囲が -180〜+180 になってしまった。</p>

<p>正しくはこう。</p>

<p>```csharp
var bounds = new CoordinateBounds(</p>

<pre><code>new CLLocationCoordinate2D(34d, 134d),
new CLLocationCoordinate2D(33d, 133d));
</code></pre>

<p>bounds.Including(new CLLocationCoordinate2D(35d, 135d));
```</p>

<p>これだと結果は、正しく [33,133 - 35,135] を返す。</p>

<p>処理上、生成時に２つの座標が揃ってないケースだったので、「あ、デフォルトコンストラクタあるじゃん」と使ってたらハマった。本家 iOS 版の方には引数無しの initXXX は無かった。</p>

<p>Objective-C の仕様上 alloc して init しないのを防げない、んだっけ？
だから、Xamarin.iOS の Binding でデフォルトコンストラクタを隠せないのかな？
突っ込んで調べてないけど、Binding ライブラリを使う時は注意しましょう、ちゃんと本家のAPIリファレンスを見ましょう、というお話でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.iOS でエラー “Failed to load AOT module ... in aot-only mode”]]></title>
    <link href="http://amay077.github.io/blog/2014/01/16/failed-to-load-aot-module-in-aot-only-mode/"/>
    <updated>2014-01-16T15:14:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/16/failed-to-load-aot-module-in-aot-only-mode</id>
    <content type="html"><![CDATA[<p>Xamarin.iOS で Binding プロジェクトをプロジェクトに追加して実機で実行したら、起動時に落ちるようになってしまった。</p>

<!--more-->


<p>Xamarin.iOS で Binding プロジェクトをプロジェクトに追加して実機で実行したら、起動時に落ちるようになってしまった。</p>

<p>ログには、</p>

<blockquote><p>Failed to load AOT module ‘/xxx/Hoge.dll.dylib' in aot-only mode.</p></blockquote>

<p>というエラーが出ていた。</p>

<p>実機からアプリを削除して、
ソリューションを「再ビルド」したら直った。小ネタ過ぎる。</p>

<h2>参考</h2>

<ul>
<li><a href="http://monotouch.2284126.n4.nabble.com/Failed-to-load-AOT-module-in-aot-only-mode-td4602614.html">MonoTouch - Failed to load AOT module ... in aot-only mode</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.iOS で特定の画面だけ向きを固定する時ハマったこと]]></title>
    <link href="http://amay077.github.io/blog/2014/01/07/touble-by-lock-orientation-of-specific-viewcontroller/"/>
    <updated>2014-01-07T18:11:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/07/touble-by-lock-orientation-of-specific-viewcontroller</id>
    <content type="html"><![CDATA[<p>画面A,B があって B だけ横向き固定にしたい。</p>

<ul>
<li><a href="http://stackoverflow.com/a/12588038">uiviewcontroller - iOS 6 ViewController is rotating but shouldn't - Stack Overflow</a></li>
<li><a href="http://qiita.com/yusuga_/items/8cc82376edb40e09f0e7">iPhone - UIViewController iOS6での画面回転への対応 - Qiita [キータ]</a></li>
</ul>


<p>これを Xamarin.iOS でやりたい。</p>

<!--more-->


<p>Storyboard を Interface Builder で開いて、NavigationController のカスタムクラスを <code>MyNavigationController</code> とした。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/viewcontroller_orientaion_lock_in_xamarin_ios_01.png" alt="" /></p>

<p>すると、Xamarin Studio 側にも <code>MyNavigationController.cs</code> ができるので、Stackoverflow の通り、以下のように実装した。</p>

<p>```csharp MyNavigationController.cs
// This file has been autogenerated from a class added in the UI designer.</p>

<p>using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Linq;</p>

<p>namespace MyApp
{</p>

<pre><code>public partial class MyNavigationController : UINavigationController
{
    public MyNavigationController (IntPtr handle) : base (handle) { }

    public override UIInterfaceOrientation PreferredInterfaceOrientationForPresentation()
    {
        return this.ViewControllers.Last().PreferredInterfaceOrientationForPresentation();
    }

    public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations()
    {
        return this.ViewControllers.Last().GetSupportedInterfaceOrientations();
    }

    public override bool ShouldAutorotate()
    {
        return this.ViewControllers.Last().ShouldAutorotate();
    }

}
</code></pre>

<p>}
```</p>

<p>次に、横固定にしたい画面Bを以下のように実装。</p>

<p>```csharp BViewController.cs
// This file has been autogenerated from a class added in the UI designer.</p>

<p>using System;</p>

<p>using MonoTouch.Foundation;
using MonoTouch.UIKit;</p>

<p>namespace MyApp
{</p>

<pre><code>public partial class BViewController : UIViewController
{
    public PhotoPreviewViewController (IntPtr handle) : base (handle)
    {
    }

    public override UIInterfaceOrientation PreferredInterfaceOrientationForPresentation()
    {
        return UIInterfaceOrientation.LandscapeLeft;
    }

    public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations()
    {
        return UIInterfaceOrientationMask.LandscapeLeft;
    }

    public override bool ShouldAutorotate()
    {
        return false;
    }
}
</code></pre>

<p>}
```</p>

<p>これで動かしてみたものの、一向に画面が固定されない。
しばらく悩んだ後、<code>MyNavigationController</code> のコンストラクタにブレークポイントを仕掛けてデバッグしてみたとても止まらない。
よくよくアプリケーション出力のコンソールを見てみると、</p>

<blockquote><p>Unknown class MyNavigationController in InterfaceBuilder file."</p></blockquote>

<p>と出力されていることに気づいた。
なんか、.storyboard と C# クラスの関連付けがうまくいってないらしい。</p>

<p>ソリューションをクリアして、再ビルドしたらこのエラーは消え、画面Bの向きが固定されるようになった！</p>

<p>(ただ、縦画面のまま画面Bに遷移すると縦画面で固定されてしまう。これは実装が何か足りない気がする。)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NHK紅白の Android/iPhone アプリが .NET/Xamarin 製だったということ]]></title>
    <link href="http://amay077.github.io/blog/2014/01/02/nhk-kouhaku-utagassen-apps-made-by-xamarin/"/>
    <updated>2014-01-02T11:27:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/02/nhk-kouhaku-utagassen-apps-made-by-xamarin</id>
    <content type="html"><![CDATA[<p>新年あけましておめでとうございます。
今年も Xamarin 推しで参ります、よろしくお願いします。</p>

<!--more-->


<p>2013年大晦日の紅白歌合戦、NHK が iPhone/Android 用のアプリを配信していました。</p>

<ul>
<li><a href="http://www1.nhk.or.jp/kouhaku/app/">紅白アプリ｜第64回NHK紅白歌合戦</a></li>
<li><a href="http://weekly.ascii.jp/elem/000/000/192/192769/">紅白で「イェーガー！」と叫ぶために曲を見逃さないiPhoneアプリ、NHK紅白</a></li>
</ul>


<p>なんとこのアプリ、Xamarin 製だったとのこと。
紅白あんまり興味なかったのでノーチェックでしたわー。</p>

<blockquote class="twitter-tweet" lang="ja"><p>紅白アプリXamarinなんか</p>&mdash; ゆたか (@tmyt) <a href="https://twitter.com/tmyt/statuses/413092620567470080">2013, 12月 17</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>iPhoneの紅白アプリ、MvvmCross使ってるってことは、Xamarinで作ってるってこと？！ <a href="http://t.co/cTWPz2cp9E">pic.twitter.com/cTWPz2cp9E</a></p>&mdash; 菊池紘 (@kikuchy) <a href="https://twitter.com/kikuchy/statuses/417977438597959680">2013, 12月 31</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>このツイートを RT した後、ソッコーで Android 版を入れてみましたら、確かにクレジットに MvvmCross やら ActionBarSherlock for Xamarin やらならんでいました。</p>

<h2>開発してるのは…</h2>

<p>開発は、<a href="http://www.fenrir-inc.com/">スレイプニル</a> で有名なフェンリルさんのようですね。</p>

<ul>
<li><a href="http://biz.fenrir-inc.com/application_development/casestudy_app/nhk_kouhaku.html">フェンリル株式会社 | スマートフォンアプリ開発 実績 NHK 紅白</a></li>
</ul>


<p>2年連続で作っておられるようですが、おととしから Mono(MonoTouch/Mono for Android) 製だったのかな？いやスゴいです！</p>

<h2>使われているライブラリ</h2>

<p>せっかくなので、Android/iOSアプリ両方の著作権表示から、使われている OSS ライブラリを列挙してみます。(<a href="http://nkzn.hatenablog.jp/entry/2013/12/30/010956">こちらのエントリ</a>にインスパイアされました)
当然ですが、すべて .NET/Mono で動作するライブラリばかりです。(ActionBar と Nimbus を除く)</p>

<h3>MvvmCross</h3>

<ul>
<li>https://github.com/MvvmCross/MvvmCross</li>
<li>クロスプラットフォームMVVMフレームワーク。<a href="http://qiita.com/amay077/items/c4227663b5a5e540dc13">こちらでも</a> 紹介しました</li>
</ul>


<h3>Json.NET</h3>

<ul>
<li>http://james.newtonking.com/json</li>
<li>.NET/Mono で JSON を扱うための事実上標準ライブラリ</li>
</ul>


<h3>SocketIO4Net.Client</h3>

<ul>
<li>http://socketio4net.codeplex.com/</li>
<li>WebSocket4Net と組み合わせて使うっぽい？ライブラリ</li>
</ul>


<h3>WebSocket4Net</h3>

<ul>
<li>http://websocket4net.codeplex.com/</li>
<li>.NET で WebSocket 使うためのライブラリ。</li>
</ul>


<h3>SuperSocket.ClientEngine</h3>

<ul>
<li>http://clientengine.codeplex.com/</li>
<li>ソケット通信用ライブラリっぽい。</li>
</ul>


<h3>MvxSettings</h3>

<ul>
<li>https://github.com/jamesmontemagno/Mvx.Plugins.Settings かな？</li>
<li>設定情報をストアするための、MvvmCross のプラグイン</li>
</ul>


<h3>ActionBarSherlock for Xamarin</h3>

<ul>
<li>http://components.xamarin.com/view/XamarinActionBarSherlock</li>
<li>スライドメニュー(NavigationDrawer) を実現するライブラリ。そういえばちょっと変わったスライドメニューでしたね。</li>
</ul>


<h3>AsyncOAuth</h3>

<ul>
<li>http://neue.cc/2013/02/27_398.html</li>
<li>C#/LINQ の神であらせられる <a href="http://neue.cc/2013/02/27_398.html">@neuecc</a> さん作の 非同期OAuthライブラリ</li>
</ul>


<h3>Nimbus</h3>

<ul>
<li>http://nimbuskit.info/</li>
<li>iOS の UIパーツがいろいろ拡張されてる的なライブラリ？Xamarin.iOS で Binding して使ってるのかなあ？</li>
</ul>


<h3>Html Agility Pack</h3>

<ul>
<li>http://htmlagilitypack.codeplex.com/</li>
<li>HTMLパーサライブラリ</li>
</ul>


<p>生放送のテレビ番組向けアプリということで、リアルタイム通信に注力された様子が、使用されたと思われるライブラリからも伺えます。</p>

<h2>これは強力すぎる Xamarin 導入事例ですね</h2>

<p>日本の最も有名なテレビ番組のスマホアプリに Xamarin が使われていたというのは大きな導入事例になること必至です。
アプリの性質上、期間限定となる可能性もあります。できればこのまま公開しつづけて欲しいですが、Xamarin を上司や提案先に紹介されたい場合は、お早めに、またキャプチャを多く撮っておかれる事をおすすめします。</p>

<p>最後に、今年が Xamarin 普及元年とならん事を近くの神社にお祈りして、新年最初のエントリの締めとします。</p>
]]></content>
  </entry>
  
</feed>
