<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Experiments Never Fail]]></title>
  <link href="http://amay077.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://amay077.github.io/"/>
  <updated>2014-02-02T16:00:18+09:00</updated>
  <id>http://amay077.github.io/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS と Android で画面表示時のコールバックを比較する]]></title>
    <link href="http://amay077.github.io/blog/2014/01/29/displaying-view-lifecycle-comparison-ios-android/"/>
    <updated>2014-01-29T15:55:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/29/displaying-view-lifecycle-comparison-ios-android</id>
    <content type="html"><![CDATA[<p>モバイル開発における画面のライフサイクル、重要ですね。
iOS と Android で「ざっくりとは同じでしょ？」などと思っていましたが、調べてみたら結構違ってました。</p>

<!--more-->


<p>と言うのも、こちら</p>

<ul>
<li><a href="http://blog.jarinosuke.com/entry/uiviewcontroller_view_coding_pattern">メモリ管理・レイアウトの観点からみた UIViewController の view の扱い - jarinosuke blog</a></li>
</ul>


<p>のエントリが大変参考になったので、「Android と比べるとどうか？」と興味が沸いたのです。</p>

<h2>画面が表示される時</h2>

<p>iOS/Android の <code>UIViewController</code>, <code>Activity</code> に備わってるコールバックの、画面表示時での発生順をそれぞれ調べて発生順に並べてみました。同じような意味のコールバックは横に並べて書きました。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>クラスが生成された時</td>
<td>init</td>
<td>ctor(コンストラクタ)</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面がロードされる前</td>
<td>loadView</td>
<td>onCreate</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>(画面が再度開始される前)</td>
<td></td>
<td>onRestart ※停止状態(onStop)から復帰する時のみ</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面が開始される前</td>
<td></td>
<td>onStart</td>
</tr>
<tr>
<td></td>
<td>5</td>
<td>画面がロードされた後</td>
<td>viewDidLoad</td>
<td>onPostCreate</td>
</tr>
<tr>
<td></td>
<td>6</td>
<td>画面が表示され始める前</td>
<td></td>
<td>onResume ※一時停止(Pause)からの復帰はここから</td>
</tr>
<tr>
<td></td>
<td>7</td>
<td>画面が表示され始めた後</td>
<td></td>
<td>onPostResume</td>
</tr>
<tr>
<td></td>
<td>8</td>
<td>UIの配置が行われる前</td>
<td>viewWillLayoutSubviews</td>
<td></td>
</tr>
<tr>
<td></td>
<td>9</td>
<td>UIの配置が行われた後</td>
<td>viewDidLayoutSubviews</td>
<td></td>
</tr>
<tr>
<td></td>
<td>10</td>
<td>画面が表示される直前</td>
<td> viewWillAppear </td>
<td></td>
</tr>
<tr>
<td></td>
<td>11</td>
<td>画面が表示された直後</td>
<td>viewDidAppear</td>
<td></td>
</tr>
<tr>
<td></td>
<td>12</td>
<td>画面にフォーカスが移った直後</td>
<td></td>
<td>onWindowFocusChanged(true) ※表示される度に呼ばれる</td>
</tr>
</tbody>
</table>


<h3>onCreate は生成前？後？</h3>

<p>iOS というか CocoaTouch の命名文化って、will とか did とか、時系列が明確に分かるものが多いので良いですね。
それに比べて Android は…。 onCreate は前？後？ onPostCreate があるので「前」ですね。</p>

<h3>UIパーツのサイズはいつ決まるのか？</h3>

<p>iOS の方は 9. <code>viewDidLayoutSubviews</code> の時です。
冒頭で紹介したエントリにも以下のように書かれています。</p>

<blockquote><p>self.view の subviews.frame の調整、すなわちレイアウト処理は全てここで記述するべきです。</p></blockquote>

<p>Android の方は問題です。
<code>Button</code> などの生成は <code>onCreate</code> で行うのが一般的ですが、この時点では、まだレイアウトされていません。なので大抵の場合 <code>button1.Height = 0</code> です。
では、いつのタイミングで <code>button1.Height</code> に適切な値が格納されるかと言うと…、 12. <code>onWindowFocusChanged(true)</code> まで待たないといけません。しかもこのコールバックは、Focus が変わる度に呼ばれるので、「最初の１回」だけを取得しようと思ったら別のフラグが必要になります、あーめんどい。</p>

<p>続きは</p>

<ul>
<li><a href="http://stackoverflow.com/questions/4393612/when-can-i-first-measure-a-view">android - When Can I First Measure a View? - Stack Overflow</a></li>
</ul>


<p>で。私は <code>View.post</code> する方法が一番簡単だと思いました。</p>

<h3>onResume/onPostResume の命名が...</h3>

<p>「画面が表示され始める前/画面が表示され始めた後」なんて無理やりな名前を付けてしまいました。
特に <code>onPostResume</code> は無理がありすぎ。
名前からは <code>viewDidAppear</code> に相当するとも捉えられますが、まだこの時点ではレイアウトが完了していないという、中途半端なタイミングです。何のために使えば良いのでしょう？</p>

<h3>回転したらどうなるの？</h3>

<p>iOS の場合は、8.<code>viewWillLayoutSubviews</code> からやり直しです。つまり、ここに適切に縦横対応のレイアウト処理を記述しておけば、<code>didRotateFromInterfaceOrientation</code>など、他のコールバックでの処理は通常必要ないと思います。</p>

<p>Android の場合は、AndroidManifest.xml への設定なしだと、なんと 1.コンストラクタ からやりなおしです。とその前に当然 <code>onDestroy</code> や <code>OnSaveInstanceState</code> が呼ばれるわけですが、、、それはまた別の機会に。</p>

<h2>まとめっぽいもの</h2>

<p>iOS プログラミングでは今まで <code>viewDidLoad</code> で、UIパーツを生成してレイアウト処理してるプログラムが多いように思いますが、それは間違いで、「loadView で生成して、viewDidLayoutSubviews でレイアウト」とするのが最も効率的なようです。</p>

<p>Android でも、onCreate でレイアウト処理するとハマることがありそうです(<a href="http://qiita.com/amay077/items/070ac1db6b52dd03505f">実際ありました</a>)。ちょっと注意しといた方がよさそうです。</p>

<p>「画面が破棄される時」「メモリが足りなくなった時」「回転した時」とか、書くこと沢山あるんですけど、ありすぎてもうダメです。</p>

<h2>参考</h2>

<h3>iOS</h3>

<ul>
<li><a href="https://developer.apple.com/library/ios/Documentation/UIKit/Reference/UIViewController_Class/Reference/Reference.html#//apple_ref/occ/instm/UIViewController">UIViewController Class Reference</a></li>
<li><a href="http://blog.jarinosuke.com/entry/uiviewcontroller_view_coding_pattern">メモリ管理・レイアウトの観点からみた UIViewController の view の扱い - jarinosuke blog</a></li>
<li><a href="https://gist.github.com/shinyaohira/6482235">iOS View Controllerプログラミングガイド</a></li>
</ul>


<h3>Android</h3>

<ul>
<li><a href="http://developer.android.com/training/basics/activity-lifecycle/starting.html">Starting an Activity | Android Developers</a></li>
<li><a href="http://developer.android.com/reference/android/app/Activity.html">Activity | Android Developers</a></li>
<li><a href="http://qiita.com/amay077/items/070ac1db6b52dd03505f">moveCamera(CameraUpdateFactory.newLatLngBounds(… で落ちる</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C の Dictionary は、キーに基本データ型が使えないのね ]]></title>
    <link href="http://amay077.github.io/blog/2014/01/28/cannot-using-int-type-in-objc-dictionary/"/>
    <updated>2014-01-28T15:49:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/28/cannot-using-int-type-in-objc-dictionary</id>
    <content type="html"><![CDATA[<p>Obj-C 慣れないもので、こんな所でハマってた。
くやしいので他の言語と比較しておく。
当然ながら Dictionary に限った話でない（はず）。</p>

<!--more-->


<h3>Objective-C</h3>

<p><code>obj-c Objective-C
NSMutableDictionary* dic = [[NSMutableDictionary alloc] init];
[dic setObject:@"hoge" forKey:[NSNumber numberWithInt:1]]; // これは OK
[dic setObject:@"huga" forKey:@1]; // これも OK (@1 は NSNumber のリテラル構文なので)
[dic setObject:@"piyo" forKey:2]; // これはダメ（落ちる
</code></p>

<p>キーと値が他の言語と逆なのにまずハマって、
キーに int型 の値を入れてたのに気づかずまたハマった。
せめてコンパイルエラーにして欲しいよ。
言語仕様上、型指定できないのでキーも値もどんな型でも突っ込めちゃう、こわい。</p>

<h3>Java</h3>

<p><code>java Java
Map&lt;Integer, String&gt; dic = new HashMap&lt;Integer, String&gt;();
Map&lt;int, String&gt; dic = new HashMap&lt;int, String&gt;(); // これはダメ(コンパイルできない)
dic.put(Integer.valueOf(1), "hoge"); // OK
dic.put(2, "piyo"); // これも OK（へー
</code></p>

<p>int と Integer ってのがあって、int を使って HashMap を宣言できない。
これはコンパイル時に分かるので良いけど、int と Integer の変換が必要なことがしばしば。</p>

<h3>C＃</h3>

<p><code>csharp C#
var dic = new Dictionary&lt;int, string&gt;(); // 型推論＆Generic
dic.Add(1, "hoge"); // OK
dic.Add(2, "piyo");
dic.Add(3, "huga");
</code></p>

<p>一番スッキリ書けますね。
　
　
　</p>

<p>…Xamarin いいよ、Xamarin</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ViewController の ViewDidLoad で this が nil になった件]]></title>
    <link href="http://amay077.github.io/blog/2014/01/18/viewcontroller-is-nil-when-viewdidload/"/>
    <updated>2014-01-18T18:18:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/18/viewcontroller-is-nil-when-viewdidload</id>
    <content type="html"><![CDATA[<p>Xamarin Studio + Xcode で Storyboard でアプリを作っていた。複数ある画面の内、ある一つの画面に遷移すると落ちる現象に見舞われていろいろ調べていた。</p>

<!--more-->


<p>Xamarin Studio で該当画面の ViewController の ViewDidLoad にブレークポイントを仕掛けて停止させ、ウォッチしてみたところ、なんと this が「nil」になっていた。</p>

<p>これのおかげで、ViewController に配置した UILabel などにもアクセスできない。</p>

<p>ViewController を作りなおしてみたり、呼び出し方法を変えてみたりいろいろやってみたけど解消せず。</p>

<p>30分ほど悪戦苦闘した後、実機にインストールされている該当アプリを一旦削除し、Xamarin Studio も終了させた後に再起動、ソリューションをクリーンして再ビルドして実行してみたところ、問題が解消した。</p>

<p>なにがしかのトラブルが起きた時は、まずは端末内のアプリを消してみると良いのかも知れない。（これまでの経験的に）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps Component for iOS の CoordinateBounds について]]></title>
    <link href="http://amay077.github.io/blog/2014/01/16/notice-for-coordinatebounds-in-gmapiossdk/"/>
    <updated>2014-01-16T18:05:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/16/notice-for-coordinatebounds-in-gmapiossdk</id>
    <content type="html"><![CDATA[<p>すごくニッチな話ですけど、Xamarin Components にある Google Maps を Xamarin.iOS で使った。</p>

<!--more-->


<ul>
<li><a href="http://components.xamarin.com/view/googlemapsios">Google Maps /Components</a></li>
</ul>


<p>このライブラリの中に <code>CoordinateBounds</code> という「領域」を表すクラスがある。これは <a href="https://developers.google.com/maps/documentation/ios/reference/interface_g_m_s_coordinate_bounds?hl=ja">GMSCoordinateBounds</a> の Binding だ。</p>

<p>で、CoordinateBounds には <code>Including</code> (<a href="https://developers.google.com/maps/documentation/ios/reference/interface_g_m_s_coordinate_bounds?hl=ja#a63cffdf310ca19c6bab74c9a4034aadd">includingCoordinate</a>) というメソッドがあって、これを呼ぶと指定した座標が入るように領域を拡幅してくれる、便利だ。</p>

<p>で、最初はこのクラスをこう使っていた。</p>

<p><code>csharp
var bounds = new CoordinateBounds();
bounds.Including(new CLLocationCoordinate2D(34d, 134d));
bounds.Including(new CLLocationCoordinate2D(33d, 133d));
bounds.Including(new CLLocationCoordinate2D(35d, 135d));
</code></p>

<p>動かしてみて、この使い方だと <code>bounds</code> から期待した結果が得られないことに気づいた。範囲が -180〜+180 になってしまった。</p>

<p>正しくはこう。</p>

<p>```csharp
var bounds = new CoordinateBounds(</p>

<pre><code>new CLLocationCoordinate2D(34d, 134d),
new CLLocationCoordinate2D(33d, 133d));
</code></pre>

<p>bounds.Including(new CLLocationCoordinate2D(35d, 135d));
```</p>

<p>これだと結果は、正しく [33,133 - 35,135] を返す。</p>

<p>処理上、生成時に２つの座標が揃ってないケースだったので、「あ、デフォルトコンストラクタあるじゃん」と使ってたらハマった。本家 iOS 版の方には引数無しの initXXX は無かった。</p>

<p>Objective-C の仕様上 alloc して init しないのを防げない、んだっけ？
だから、Xamarin.iOS の Binding でデフォルトコンストラクタを隠せないのかな？
突っ込んで調べてないけど、Binding ライブラリを使う時は注意しましょう、ちゃんと本家のAPIリファレンスを見ましょう、というお話でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.iOS でエラー “Failed to load AOT module ... in aot-only mode”]]></title>
    <link href="http://amay077.github.io/blog/2014/01/16/failed-to-load-aot-module-in-aot-only-mode/"/>
    <updated>2014-01-16T15:14:00+09:00</updated>
    <id>http://amay077.github.io/blog/2014/01/16/failed-to-load-aot-module-in-aot-only-mode</id>
    <content type="html"><![CDATA[<p>Xamarin.iOS で Binding プロジェクトをプロジェクトに追加して実機で実行したら、起動時に落ちるようになってしまった。</p>

<!--more-->


<p>Xamarin.iOS で Binding プロジェクトをプロジェクトに追加して実機で実行したら、起動時に落ちるようになってしまった。</p>

<p>ログには、</p>

<blockquote><p>Failed to load AOT module ‘/xxx/Hoge.dll.dylib' in aot-only mode.</p></blockquote>

<p>というエラーが出ていた。</p>

<p>実機からアプリを削除して、
ソリューションを「再ビルド」したら直った。小ネタ過ぎる。</p>

<h2>参考</h2>

<ul>
<li><a href="http://monotouch.2284126.n4.nabble.com/Failed-to-load-AOT-module-in-aot-only-mode-td4602614.html">MonoTouch - Failed to load AOT module ... in aot-only mode</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
