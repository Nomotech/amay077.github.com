<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experiments Never Fail</title>
    <description>Try and try again
</description>
    <link>http://blog.amay077.net/</link>
    <atom:link href="http://blog.amay077.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 13 May 2017 19:48:02 +0900</pubDate>
    <lastBuildDate>Sat, 13 May 2017 19:48:02 +0900</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>macOS 初期セットアップ時にインストールするアプリ</title>
        <description>&lt;p&gt;Mac をクリーンインストールするときに入れるアプリ一覧。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;Chrome&lt;/li&gt;
  &lt;li&gt;Google IME&lt;/li&gt;
  &lt;li&gt;Xcode&lt;/li&gt;
  &lt;li&gt;Xcode command lie tools&lt;/li&gt;
  &lt;li&gt;Homebrew&lt;/li&gt;
  &lt;li&gt;VMware Fusion&lt;/li&gt;
  &lt;li&gt;Android Studio&lt;/li&gt;
  &lt;li&gt;Dropbox&lt;/li&gt;
  &lt;li&gt;Skype&lt;/li&gt;
  &lt;li&gt;Java8 - JDK&lt;/li&gt;
  &lt;li&gt;VSCode&lt;/li&gt;
  &lt;li&gt;anyenv&lt;/li&gt;
  &lt;li&gt;ndenv&lt;/li&gt;
  &lt;li&gt;rbenv&lt;/li&gt;
  &lt;li&gt;peco&lt;/li&gt;
  &lt;li&gt;adb-peco&lt;/li&gt;
  &lt;li&gt;Xamarin Studio&lt;/li&gt;
  &lt;li&gt;JetBrains Rider&lt;/li&gt;
  &lt;li&gt;JetBrains DataGrip&lt;/li&gt;
  &lt;li&gt;ClipMenu&lt;/li&gt;
  &lt;li&gt;FreeMemory&lt;/li&gt;
  &lt;li&gt;WinMacZipper&lt;/li&gt;
  &lt;li&gt;Skitch&lt;/li&gt;
  &lt;li&gt;.NET Core&lt;/li&gt;
  &lt;li&gt;ESET Security&lt;/li&gt;
  &lt;li&gt;SourceTree&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 09 May 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/05/09/first_install_apps_on_mac/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/05/09/first_install_apps_on_mac/</guid>
        
        
        <category>macOS</category>
        
      </item>
    
      <item>
        <title>JetBrains Rider で Xamarin.Android プロジェクトのデバッグが行えるようになりました</title>
        <description>&lt;p&gt;クロスプラットフォーム対応の.NET向けIDE、JetBrains Rider の EAP(Early Access Program) ver.20 で、ついに Xamarin.Android の「実行」がサポートされました（今までも「ビルドだけ」はできたのですが）。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.jetbrains.com/dotnet/2017/04/14/rider-eap-20-xamarin-android-node-js-net-core-improvements/&quot;&gt;Rider EAP 20: Xamarin Android, Node.js, .NET Core improvements, and more - .NET Tools Blog.NET Tools Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえば &lt;a href=&quot;https://developer.xamarin.com/samples/&quot;&gt;Xamarin Samples&lt;/a&gt; の&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.xamarin.com/samples/xamarin-forms/ButtonCode/&quot;&gt;ButtonCode - Xamarin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を Rider で開いてビルド、デバッグ実行してみます。&lt;br /&gt;
これは Xamarin.Forms のソリューションですが、その中の Android プロジェクトは実行できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/rider_supports_xamarin_android_project_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上図のように、エミュレータも起動でき、ブレークポイントを置いてのステップイン・ステップオーバーなども実行できます。&lt;br /&gt;
デバッグ画面のルック＆フィールは JetBrains 製品らしくなっており、Android Studio を使っている人にとっても馴染みがあります。&lt;/p&gt;

&lt;p&gt;また、Rider で Xamarin.Android プロジェクトを新規作成することも可能です。&lt;br /&gt;
が、Rider で作成したプロジェクトをXamarin Studioなどで開くとエラーになってしまいます。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;JetBrains Rider  Xamarin Android プロジェクト作成→Run→エミュ起動→アプリ実行、までできたけど、その .sln/csproj を Visual Studio for Mac で開くとエラー &lt;a href=&quot;https://t.co/u0HXb4dVSr&quot;&gt;pic.twitter.com/u0HXb4dVSr&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@超技術書典4/30 あ-12 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/852912306056863744&quot;&gt;2017年4月14日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;こちらは今後の開発進行に伴い改善されていくでしょう。&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Apr 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/19/rider_supports_xamarin_android_project/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/19/rider_supports_xamarin_android_project/</guid>
        
        
        <category>Android</category>
        
        <category>Xamarin</category>
        
        <category>JetBrains</category>
        
        <category>Rider</category>
        
      </item>
    
      <item>
        <title>日本Androidの会 浜松支部さんの勉強会で「Xamarin.Android で始めるクロスプラットモバイルアプリ開発」という話をしました</title>
        <description>&lt;p&gt;日本Androidの会 浜松支部さんの勉強会で Xamarin Day してきました。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jaghama.connpass.com/event/54228/&quot;&gt;はじめてのXamarin with D - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;資料&quot;&gt;資料&lt;/h2&gt;

&lt;p&gt;資料は例によって DroidKaigi で発表したもののヘッダとフッタを変えただけです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/amay077/xamarin-dot-android-teshi-merukurosuhuratutohuomumohairuahurikai-fa-number-jaghama&quot;&gt;Xamarin.Android で始めるクロスプラットフォームモバイルアプリ開発 #jaghama // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;感想とか&quot;&gt;感想とか&lt;/h2&gt;

&lt;p&gt;前週の名古屋での勉強会でも参加者の人に聞いたんですけど、Kotlin 使ったことある人はゼロで… DroidKaigi ではもはやデファクトスタンダードくらいの勢いだったのに、これが地域格差か…。&lt;/p&gt;

&lt;p&gt;技術書典で販売した &lt;a href=&quot;https://atsushieno.github.io/xamaritans/tbf2.html&quot;&gt;Essential Xamarin Yin/Yang&lt;/a&gt; の著者確保分３冊を持っていきました。すべて買っていただいてありがとうございます！これで私の在庫はなくなりました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Essential Xamarin Yin/Yang x 3 完売ありがとうございまーす。 &lt;a href=&quot;https://twitter.com/hashtag/jaghama?src=hash&quot;&gt;#jaghama&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@超技術書典4/30 あ-12 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/853121825403830272&quot;&gt;2017年4月15日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;発表の後は、ハンズオンという名目でもくもく会でした。&lt;/p&gt;

&lt;p&gt;ハンズオンのテキストは前日つぶやいたらたくさんのひとが教えてくれて、 &lt;a href=&quot;https://twitter.com/ytabuchi&quot;&gt;@ytabuchi&lt;/a&gt; さんはエントリまで書いて頂いて、ありがとうございます。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Xamarin 勉強会で行うことができるハンズオンの Lineup ってどんなのがあります？（明日のまだ決めてない）&lt;/p&gt;&amp;mdash; あめい@超技術書典4/30 あ-12 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/852780051183525889&quot;&gt;2017年4月14日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ytabuchi.hatenablog.com/entry/XamarinHandsOn&quot;&gt;Xamarin ハンズオン資料まとめ - Xamarin 日本語情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当日は、 &lt;a href=&quot;https://twitter.com/chomado&quot;&gt;@chomado&lt;/a&gt; さんの &lt;a href=&quot;https://github.com/chomado/SimpleList&quot;&gt;chomado/SimpleList: 簡単な Xamarin.Forms アプリハンズオン資料&lt;/a&gt; を選択される方が多かったように見えました。&lt;/p&gt;

&lt;p&gt;私もそれを改造して、&lt;a href=&quot;/blog/2017/04/13/creating_mastodon_client_using_dot_net_core/&quot;&gt;Masto.NET を使って&lt;/a&gt;  mastodon のユーザー一覧を表示するアプリを Xamarin.Forms で作って遊んでました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://t.co/5jbGKktQtX&quot;&gt;https://t.co/5jbGKktQtX&lt;/a&gt; をちょっと改造して、 Xamarin.Forms で mastodon .cloud のユーザーを取得して表示するやつ &lt;a href=&quot;https://t.co/WF0C3CxNLF&quot;&gt;pic.twitter.com/WF0C3CxNLF&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@超技術書典4/30 あ-12 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/853157026561536001&quot;&gt;2017年4月15日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;あ、 Visual Studio 2017 でも Xamarin.Forms プロジェクトの初回ビルド時に nuget パッケージ群のダウンロードで 800MB くらいもっていかれるようです。&lt;/p&gt;

&lt;h2 id=&quot;懇親会&quot;&gt;懇親会&lt;/h2&gt;

&lt;p&gt;刺し身も焼き魚も寿司もおいしかった！泣いた(ワサビの辛さで)！&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;某打ち上げに参加できないので、廻らない寿司食べられてよかった &lt;a href=&quot;https://t.co/iEck2evKvZ&quot;&gt;pic.twitter.com/iEck2evKvZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@超技術書典4/30 あ-12 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/853196748428201984&quot;&gt;2017年4月15日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://tabelog.com/en/shizuoka/A2202/A220201/22001004/&quot;&gt;ラーメン三太&lt;/a&gt; はまた次回行きましょう！&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Apr 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/15/had_a_session_about_xamarin_android_in_jaghama/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/15/had_a_session_about_xamarin_android_in_jaghama/</guid>
        
        
        <category>Android</category>
        
        <category>Xamarin</category>
        
        <category>登壇</category>
        
      </item>
    
      <item>
        <title>Mastodon のクライアントアプリを .NET Core で作ってみた</title>
        <description>&lt;p&gt;Mastodon という「自由で」「オープンソースな」（Twitter のような） SNS がなんか流行りだして、もともとあった &lt;a href=&quot;https://mastodon.cloud/&quot;&gt;mastodon.cloud&lt;/a&gt; や &lt;a href=&quot;https://twitter.com/nullkal&quot;&gt;@nullkal&lt;/a&gt; 氏が立てたインスタンス &lt;a href=&quot;https://mstdn.jp/&quot;&gt;mstdn.jp&lt;/a&gt; に日本人が多くあつまって祭りみたいになってる。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ascii.jp/elem/000/001/465/1465842/&quot;&gt;ASCII.jp：Twitterのライバル？　実は、新しい「マストドン」（Mastodon）とは！｜遠藤諭のプログラミング＋日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API ももちろんあって、 .NET 製の APIライブラリもあった。 @kagasu さん :ok_hand:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;tl&quot; dir=&quot;ltr&quot;&gt;glacasa/Mastonet: C# Library for Mastodon&lt;a href=&quot;https://t.co/BwR9n1Eqbd&quot;&gt;https://t.co/BwR9n1Eqbd&lt;/a&gt;&lt;/p&gt;&amp;mdash; ♣ ♥ ♠ ♦🍍 (@kagasu) &lt;a href=&quot;https://twitter.com/kagasu/status/852206484347912192&quot;&gt;2017年4月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;で、試しにこの「&lt;a href=&quot;https://github.com/glacasa/Mastonet&quot;&gt;Musto.NET&lt;/a&gt;」を使って、 mastodon.cloud の連邦？タイムラインを表示するだけのコンソールアプリを作ってみた。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amay077/MastoConsoleNetStandard&quot;&gt;amay077/MastoConsoleNetStandard: Mastodon クライアントのサンプルコンソールアプリ for .NET Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API はとってもシンプルで、次のような単純なコードでTOOTのストリーミング受信ができる。&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanceUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mastodon.cloud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// MastodonClient.CreateApp で得たものを保存しとく必要があるけど面倒だから UnitTest(MastodonClientTests)のを使わせてもらった
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//var appRegistration = await MastodonClient.CreateApp(instanceUrl, &quot;MastoConsoleStandard&quot;, Scope.Read);
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appRegistration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppRegistration&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ClientId&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ぎっはぶをみてね&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ClientSecret&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ぎっはぶをみてね&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MastodonClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instanceUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appRegistration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streaming&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetPublicStreaming&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Register events
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnUpdate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;--&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{e.Status.CreatedAt.ToLocalTime().ToString()} - {e.Status.Account.AccountName}:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Start streaming
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;アプリは、まず mastodon のインスタンスに&lt;code class=&quot;highlighter-rouge&quot;&gt;MastodonClient.CreateApp&lt;/code&gt;で「アプリを登録」して、&lt;code class=&quot;highlighter-rouge&quot;&gt;AppRegistration&lt;/code&gt;を得る必要がある。&lt;br /&gt;
これは実際には &lt;code class=&quot;highlighter-rouge&quot;&gt;ClientId&lt;/code&gt; と &lt;code class=&quot;highlighter-rouge&quot;&gt;ClientSecret&lt;/code&gt; で、一度登録したら保存して使う。&lt;br /&gt;
mastodon の既定の実装では、特に制限なくすぐにレスポンスが返ってくるが、コードを変更してインスタンス管理者の承認制などにすることもできるのだろう。&lt;/p&gt;

&lt;p&gt;そしてアプリの登録は mastodon のインスタンス毎に行わなければならないので、たとえば現在出回っているクライアントアプリは、 mastodon.cloud では使えるが mstdn.jp では使えない、ということもある。&lt;/p&gt;

&lt;p&gt;「アプリをインスタンスに登録する」仕組みまで備えたクライアントアプリも作成可能で、&lt;a href=&quot;https://itunes.apple.com/us/app/amaroq-for-mastodon/id1214116200&quot;&gt;Amaroq for Mastodon&lt;/a&gt; というアプリはそのひとつだと&lt;a href=&quot;https://mastodon.cloud/@fk2000/519030&quot;&gt;教えてもらった&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;mastodon のユーザーはインスタンス毎に違うので、そのインスタンスで作った email/password で &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; する。&lt;br /&gt;
あとは、 &lt;code class=&quot;highlighter-rouge&quot;&gt;OnUpdate&lt;/code&gt; でストリームを受信しておいて、 &lt;code class=&quot;highlighter-rouge&quot;&gt;Start&lt;/code&gt; すればよい、と。&lt;/p&gt;

&lt;p&gt;Masto.NET が .NET Standard に対応しているので、 .NET Standard な実行環境,&lt;br /&gt;
 Mac/Linux なら .NET Core がインストールされた環境なら動作する。&lt;/p&gt;

&lt;p&gt;適切に責務分割された Twitter クライアントなら、それほど手間なく mastodon クライアントアプリになれるかも。&lt;br /&gt;
前述のとおり複数インスタンス対応は必要だけど。アプリが対応するインスタンスとその&lt;code class=&quot;highlighter-rouge&quot;&gt;ClientId&lt;/code&gt; と &lt;code class=&quot;highlighter-rouge&quot;&gt;ClientSecret&lt;/code&gt;の保存のために、サーバーサイド(mBaaS)が必要になると思う。&lt;/p&gt;

&lt;p&gt;一応わたしもアカウントつくりました→ https://mastodon.cloud/@amay077&lt;br /&gt;
mstdn.jp にも作ったけど、メインはこっちで。頑張ってる人は &lt;a href=&quot;https://mastodon.cloud/@login/508935&quot;&gt;応援したい&lt;/a&gt; し &lt;a href=&quot;https://mstdn.jp/@nullkal/37086&quot;&gt;応援した&lt;/a&gt; 。&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Apr 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/13/creating_mastodon_client_using_dot_net_core/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/13/creating_mastodon_client_using_dot_net_core/</guid>
        
        
        <category>C#</category>
        
        <category>Mastodon</category>
        
        <category>.NET</category>
        
      </item>
    
      <item>
        <title>技術書典2 で Essential Xamarin Yin(陰)/Yang(陽) を頒布しました</title>
        <description>&lt;p&gt;といっても私は一般参加でしたが。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://techbookfest.org/event/tbf02&quot;&gt;技術書典２｜技術書典&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;xamaritians-のブース&quot;&gt;Xamaritians のブース&lt;/h2&gt;

&lt;p&gt;頒布しましたのは以前にも告知したこちらです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2017/04/07/wrote_for_techbookfes2/&quot;&gt;技術書典2に Xamarin 本を出します！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前日勉強会に参加してた名古屋から豪華夜行バスで東京に。早朝に着いたので時間つぶしで温泉を楽しみながら、開場の15分前くらいに現地入り。既に100人くらい並んでました。順番としては早いほうだったので、少し待っただけで会場内に入ることができました。&lt;/p&gt;

&lt;p&gt;我らのブースの売り子は「Xamarin.Macペア」の &lt;a href=&quot;https://twitter.com/ailen0ada&quot;&gt;@ailen0ada&lt;/a&gt; さんと &lt;a href=&quot;https://twitter.com/Takkiii0204&quot;&gt;@Takkiii0204&lt;/a&gt; さん。ブースの手伝いを─と思ってましたが特に刷ることもなかったです、ありがとうございました。&lt;/p&gt;

&lt;p&gt;ブースの前には、たまに人だかりもできて売れ行きも好調だったようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/distributed_a_essential_xamarin_yin_yang_in_tech_book_fest2_02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;結果的に開始から2時間ほどで用意しておいた部数は完売してしまって、後はPDFダウンロードカードのみの販売に切り替えたとのこと。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/distributed_a_essential_xamarin_yin_yang_in_tech_book_fest2_03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;著者の一人として初めてのイベントだったので期待も不安もありましたが、うまくいってとても良かったです。ブースが角で目立つ位置だったのも良かったですね。&lt;/p&gt;

&lt;p&gt;次は 4/30、 &lt;a href=&quot;http://www.chokaigi.jp/2017/booth/cho_gijutsusyoten.html&quot;&gt;超技術書典&lt;/a&gt; にも出展します。そのために増刷しました。是非、お見逃しなく！&lt;/p&gt;

&lt;h2 id=&quot;参加者として&quot;&gt;参加者として&lt;/h2&gt;

&lt;p&gt;こういう同人イベントは初めてだったのでちょっとキョドってしまいました。もっとブースの人とトークしてけばよかった。&lt;/p&gt;

&lt;p&gt;買った本はこんな感じです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/distributed_a_essential_xamarin_yin_yang_in_tech_book_fest2_01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;全て楽しく読ませていただいております。&lt;/p&gt;

&lt;p&gt;事前にサークルチェックしていたのに買うのを忘れる本もあったりしてちょっと後悔。&lt;br /&gt;
多くのサークルさんは後に電子版や別なイベントで再入手の機会がありますが、中には特殊な事情で?その場限りの書籍もあったようで「なるほどこれが同人誌か」と感じました。&lt;/p&gt;

&lt;p&gt;帰り、あいにくの雨だったのでせっかくの本たちが塗れないようにするのが大変、あと重い！&lt;br /&gt;
いろんな意味で手持ちで帰路を行くのは早々にあきらめてアキバのクロネコヤマト営業所から自宅に配送しました。&lt;/p&gt;

&lt;p&gt;総じて、本を書いた側としても参加者としてもとても楽しかった。&lt;br /&gt;
次回も参加できるように頑張ります！&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Apr 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/09/distributed_a_essential_xamarin_yin_yang_in_tech_book_fest2/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/09/distributed_a_essential_xamarin_yin_yang_in_tech_book_fest2/</guid>
        
        
        <category>Xamarin</category>
        
        <category>技術書典</category>
        
      </item>
    
      <item>
        <title>Xamarin 勉強会 in 名古屋で「Xamarin.Android で始めるクロスプラットモバイルアプリ開発」という話をしました</title>
        <description>&lt;p&gt;JXUG学生支部さん主催の名古屋での勉強会で、Xamarin について話しました。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jxug.connpass.com/event/52683/&quot;&gt;Xamarin 勉強会 in 名古屋 with JXUG, MSP, JXUG学生支部 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;資料&quot;&gt;資料&lt;/h2&gt;

&lt;p&gt;資料はこちらです。 DroidKaigi での発表から何も変わってないです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/amay077/xamarin-dot-android-teshi-merukurosuhuratutohuomumohairuahurikai-fa-number-jxug&quot;&gt;Xamarin.Android で始めるクロスプラットフォームモバイルアプリ開発 #jxug // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;感想とか&quot;&gt;感想とか&lt;/h2&gt;

&lt;p&gt;サブウェイおいしかったです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/had_a_session_about_xamarin_android_in_jxug_nagoya_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;DroidKaigi はバリバリの Androidネイティブ開発者揃いの場で、それ用の資料だったので、MS系の多い？今回の勉強会では少し分かりづらいところがあったかも知れません。&lt;/p&gt;

&lt;p&gt;それでもアンケートでは概ね好評だったようで良かったです。&lt;/p&gt;

&lt;p&gt;実はマイクロソフト中部支社さんへ行ったのは今回が初めてでした。&lt;br /&gt;
最近は特にXamarin関係で、東京のマイクロソフト品川本社でのイベントに参加することが多かったので。&lt;/p&gt;

&lt;p&gt;中部支社はとてもきれいなオフィスでした。会議室３つはそれぞれ「IEUYASU」「NOBUNAGA」「HIDEYOSHI」って命名されてて、中部っぽさがありました。&lt;/p&gt;

&lt;p&gt;ルーセントタワーには、Aチームさんが居られた頃に、よく勉強会で会場提供されていたので、何度もお邪魔させてもらった事はあったのですが。&lt;/p&gt;

&lt;p&gt;中部地方はBtoCよりBtoB企業が多いので、業務アプリ開発に特に強いXamarinはよく「刺さる」と思います。&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Apr 2017 23:59:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/08/had_a_session_about_xamarin_android_in_jxug_nagoya/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/08/had_a_session_about_xamarin_android_in_jxug_nagoya/</guid>
        
        
        <category>Android</category>
        
        <category>Xamarin</category>
        
        <category>登壇</category>
        
      </item>
    
      <item>
        <title>技術書典2に Xamarin 本を出します！</title>
        <description>&lt;p&gt;4/9(日) に開催される &lt;a href=&quot;https://techbookfest.org/event/tbf02&quot;&gt;技術書典２&lt;/a&gt; に、 Xamaritans（ざまりたんず） が Xamarin 本を２冊！出します。ブースは「 &lt;strong&gt;う-13&lt;/strong&gt; 」です。&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://atsushieno.github.io/xamaritans/tbf2.html&quot;&gt;技術書典2/超技術書典 出展情報 - Xamaritans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/wrote_for_techbookfes2_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2冊の本はそれぞれ「Essential Xamarin - Yin/陰」、「Essential Xamarin - Yang/陽」というタイトルで、それぞれ 1000円 となっています。2冊揃わないと完全体じゃないのでもちろん両方買ってください。&lt;/p&gt;

&lt;p&gt;私はその一員として &lt;strong&gt;「Xamarin.Android で始めるクロスプラットモバイルアプリ開発」&lt;/strong&gt; という章を書きました。こちらは「Essential Xamarin - Yang/陽」に収録されています。&lt;/p&gt;

&lt;p&gt;目次はこんな感じです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/wrote_for_techbookfes2_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;タイトルが &lt;a href=&quot;/blog/2017/03/10/had_a_session_about_xamarin_android_in_droidkaigi2017/&quot;&gt;DroidKaigi2017 でのセッション&lt;/a&gt; と一緒！&lt;br /&gt;
そうです、DroidKaigi の完全版がこの本、いや原稿の方が先に出来上がっていたのであちらがダイジェストだったのです。&lt;/p&gt;

&lt;p&gt;セッションと流れは同じですが、それぞれをより詳しく解説しています。蛇足なコラムも多いです。&lt;/p&gt;

&lt;p&gt;同じアプリを Android ネイティブと Xamarin(.Forms) で作成したらこうなるよ、という解説も、MVVM や Rx(RxJava) と絡めて載せています（GitHub でソースも公開予定）。&lt;/p&gt;

&lt;p&gt;ほんの少しですが、 Kotlin や Clean Architecture などにも触れています。&lt;/p&gt;

&lt;p&gt;話が前後しましたが、この本は Androidアプリ開発者の人が Xamarin を理解する事を目的としています。&lt;br /&gt;
しかし Xamarin の目的は複数プラットフォームでのコードの共通化なので、iOS アプリ開発の話題もあり、 Xamarin.Forms の話題もありです。&lt;/p&gt;

&lt;p&gt;逆にマイクロソフト系の開発者の人が、「へー Android ネイティブってこうなんだー」という目で読んでも良いかと思います。&lt;/p&gt;

&lt;p&gt;この本の内容自体が、私が現在 Xamarin を選ぶ理由にもなっていますので、是非読んでみてください。&lt;/p&gt;

&lt;p&gt;当日、店番の主担当ではありませんが会場内には居ると思いますので、お声がけしてもらえると嬉しいです。&lt;/p&gt;

&lt;p&gt;Xamaritans の他のメンバーも章も非常に強力で、本当に「世界的に見ても唯一無二」の濃い内容となっています。繰り返しますが「2冊で完全体」です。&lt;/p&gt;

&lt;h3 id=&quot;他のメンバーによるイベント紹介&quot;&gt;他のメンバーによるイベント紹介&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://atsushieno.hatenablog.com/entry/2017/03/30/193527&quot;&gt;Essential Xamarin -at- 技術書典2 -and- 超技術書典 - ものがたり&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.nuits.jp/entry/2017/03/19/214905&quot;&gt;技術書典2 &amp;amp; 超技術書典でXamarin本出します - nuits.jp blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;技術書典2の後は、超技術書典にも出展します（こちらは私は不参加なのが残念）。&lt;br /&gt;
私は愛知県在住なので中部地方の勉強会やミートアップなどへは持っていくことができますので、 &lt;a href=&quot;https://twitter.com/amay077&quot;&gt;twitter&lt;/a&gt; などでメンションください。&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Apr 2017 02:01:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/04/07/wrote_for_techbookfes2/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/04/07/wrote_for_techbookfes2/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Android</category>
        
        <category>技術書典</category>
        
      </item>
    
      <item>
        <title>DroidKaigi2017で「Xamarin.Android で始めるクロスプラットモバイルアプリ開発」という話をしました</title>
        <description>&lt;p&gt;登壇したのが既に２ヶ月前の事に感じるくらい余韻に浸っています。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/had_a_session_about_xamain_android_in_droidkaigi_2017_01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;資料&quot;&gt;資料&lt;/h2&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;592959beb9de46fcb6d0e51652b20e23&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;感想とか&quot;&gt;感想とか&lt;/h2&gt;

&lt;p&gt;DroidKaigi は3年連続の参加で、登壇は初めてです。&lt;/p&gt;

&lt;p&gt;前日まではのほほんとしていたのですけど、当日になると緊張しますね。トップ登壇で良かったです。&lt;br /&gt;
登壇終わった後の虚脱感がハンパなくて、次のセッション聞けませんでした（普段人前で話すのが職業な人マジリスペクト）。&lt;/p&gt;

&lt;p&gt;Xamarin に関して、伝えたいことはある程度伝えられたと思ってはいますが、継続的に発信していくのが大事かなと思いました。&lt;/p&gt;

&lt;p&gt;普段 Android をやっていて、iOS もやる事になったら、こんなツールもあるよと思い出して欲しいです。&lt;/p&gt;

&lt;p&gt;一番伝えたかったのは、&lt;br /&gt;
&lt;strong&gt;「Android でも iOS でも MVVM+Rx でやるよね、Xamarin なら大部分共通化できるよー」&lt;/strong&gt;&lt;br /&gt;
だったのですが、Twitter とかでの反応を見てるとあまりピンと来てなさそうな感じでしたかね？&lt;br /&gt;
他の MVVM や Rx セッションが盛り上がってるのを見ると、まだ知らない層が多いのかなーと。&lt;br /&gt;
Xamarin とはなんぞや、から始めて Rx まで説明するのも難しいし、まあ仕方ないですね。&lt;/p&gt;

&lt;p&gt;でも、質問タイムでたくさん聞いて頂いて嬉しかったです。（えいごりょく欲しい…）&lt;/p&gt;

&lt;p&gt;オフィスアワーやアフターパーティで、Twitter でしか知らない人とお話しできたり、同郷のすごい人たちと会えたり、とても楽しかったです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/had_a_session_about_xamain_android_in_droidkaigi_2017_02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Xamarin 然り、RxJava 然り、 Qiita などでチマチマと情報発信してきた些細なネタが誰かの役に立っていたと知れてとても嬉しかった。&lt;/p&gt;

&lt;p&gt;普段 Xamarin を使ってる人が、 Android の最新動向を知るきっかけにもなってくれたみたいで、それも狙ってた事なので良かったです。&lt;/p&gt;

&lt;p&gt;翌日は .NET系のイベントの &lt;a href=&quot;https://metro.connpass.com/event/50917/?utm_source=t.co&amp;amp;utm_medium=referral&quot;&gt;まどすた #2&lt;/a&gt; に行きました。&lt;br /&gt;
HoloLens やばいし、Bitcoin/ブロックチェーンも抑えとかないといけないし、Visual Studio 2017 はやっぱり最強だったし、にゃーんがにゃーんでした。&lt;/p&gt;

&lt;p&gt;try!Swift には行けなかったので、 &lt;a href=&quot;https://iosdc.jp/2017/&quot;&gt;iOSDC Japan 2017&lt;/a&gt; には必ず行きたいと思います。&lt;/p&gt;

&lt;p&gt;将来のことを考えて生きてはいませんが、こうした経験が脳にインプットされて、なんとなく無意識の内に自分の行きたい方向に自分を導いてくれると思っています。&lt;/p&gt;

&lt;p&gt;運営スタッフの皆さま、参加された皆さま、ありがとうございました。&lt;/p&gt;

&lt;h2 id=&quot;技術書典２--超技術書典&quot;&gt;技術書典２ ＆ 超技術書典&lt;/h2&gt;

&lt;p&gt;あっ、次は 4/9(日)に、 &lt;a href=&quot;https://techbookfest.org/event/tbf02&quot;&gt;技術書典２&lt;/a&gt; がありますね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/had_a_session_about_xamain_android_in_droidkaigi_2017_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Xamarin に関する技術書を配布します！&lt;br /&gt;
代表の @atsushieno さん以下5名で絶賛執筆中です。&lt;br /&gt;
今回話した Xamarin.Android ネタの完全版を掲載します。というか DroidKaigi のスライドの原稿と言うべきものです。&lt;/p&gt;

&lt;p&gt;技術書典２または &lt;a href=&quot;https://techbookfest.org/event/cho01&quot;&gt;超技術書典&lt;/a&gt; でお会いしましょう(^o^)／&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Mar 2017 23:01:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/03/10/had_a_session_about_xamarin_android_in_droidkaigi2017/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/03/10/had_a_session_about_xamarin_android_in_droidkaigi2017/</guid>
        
        
        <category>Android</category>
        
        <category>Xamarin</category>
        
        <category>DroidKaigi</category>
        
        <category>登壇</category>
        
      </item>
    
      <item>
        <title>Xamarin.Forms.GoogleMaps にプルリクエストを送る会、を開催しました</title>
        <description>&lt;p&gt;2017/2/12、 &lt;a href=&quot;http://www.fenrir-inc.com/jp/corporate/&quot;&gt;フェンリル株式会社 名古屋支社&lt;/a&gt; さまの会議室をお借りして、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jxug.connpass.com/event/49852/&quot;&gt;Xamarin.Forms.GoogleMaps にプルリクを送る会 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を開催しました。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;もともとは、 &lt;a href=&quot;https://www.facebook.com/groups/xm.jxug/&quot;&gt;JXUG の Facebook グループ&lt;/a&gt; で、「拙作の OSS ライブラリ &lt;a href=&quot;https://github.com/amay077/Xamarin.Forms.GoogleMaps&quot;&gt;Xamarin.Forms.GoogleMaps&lt;/a&gt; へのコントリビュートを通じて、GitHub でプルリクの送り方を学ぶ勉強会とか興味ある？」 とつぶやいたのを、 &lt;a href=&quot;https://twitter.com/Fumiya_Kume&quot;&gt;くぅ君&lt;/a&gt; が拾ってくれて名古屋で開催できるはこびになったものです(くぅ君、ありがとう！)。&lt;/p&gt;

&lt;p&gt;資料はこちらです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/amay077/xamarin-dot-forms-dot-googlemaps-nipururikuwosong-rou-number-jxug&quot;&gt;Xamarin.Forms.GoogleMaps にプルリクを送ろう #jxug // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub のどこかの OSS に貢献したいと思っても、 git/gitクライアントの使い方、GitHubの使い方、英語、修正したコードの内容とか、小さな壁が積み重なってなんか躊躇してしまう、という経験が自分にもあって、その練習台として自分のライブラリを使ってもらえたらなーと思っていました。&lt;/p&gt;

&lt;p&gt;参加していただいた皆さんには、初めてプルリクを送るということを体験してもらえたので、少しでもそのカベが低くなってもらえれば幸いです。&lt;br /&gt;
勉強会後の振り返りで、そんな感想も頂けたので個人的にも満足です。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;今日の「Xamarin.Forms.GoogleMaps にプルリクを送ろう」の成果です &lt;a href=&quot;https://twitter.com/hashtag/JXUG?src=hash&quot;&gt;#JXUG&lt;/a&gt; &lt;a href=&quot;https://t.co/PVlQDposzS&quot;&gt;pic.twitter.com/PVlQDposzS&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@DroidKaigi&amp;amp;技術書展2 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/830685147963854848&quot;&gt;2017年2月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;おお、会が終わってからもPRくれた、嬉しいなあ / Pull Request # 229 (Add Padding Property Support (Android / iOS)) Xamarin.Forms.GoogleMaps &lt;a href=&quot;https://t.co/Hij9KWzeex&quot;&gt;https://t.co/Hij9KWzeex&lt;/a&gt;&lt;/p&gt;&amp;mdash; あめい@DroidKaigi&amp;amp;技術書展2 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/830764733611401220&quot;&gt;2017年2月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;昨日フェンリルさんで AirPlay 使わせてもらってめちゃ便利だったので、MS品川にも導入してくだしあ。&lt;/p&gt;&amp;mdash; あめい@DroidKaigi&amp;amp;技術書展2 (@amay077) &lt;a href=&quot;https://twitter.com/amay077/status/830981848637411328&quot;&gt;2017年2月13日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;こんな感じの会でよかったら、また簡単な issue 溜めとくので、またできたらいいなと思います。&lt;br /&gt;
ありがとうございました。&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Feb 2017 15:15:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/02/13/we_had_a_meetup_aboud_send_pull_request_to_Xamarin_forms_googlemaps/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/02/13/we_had_a_meetup_aboud_send_pull_request_to_Xamarin_forms_googlemaps/</guid>
        
        
        <category>Xamarin</category>
        
        <category>Xamarin.Forms</category>
        
        <category>GoogleMapsAPI</category>
        
        <category>git</category>
        
        <category>GitHub</category>
        
      </item>
    
      <item>
        <title>Jekyll で作ったブログを Google AMP に対応させた</title>
        <description>&lt;p&gt;自分のブログは Jekyll を使って Markdown から生成し、それを GitHub pages でホストしている。&lt;br /&gt;
GitHub 側でのページ生成はしてなくて、ローカルで Jekyll を実行して、その結果を push している。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;特につよい興味があったわけでもないけど、 Jekyll のテーマに AMP 対応をうたうものがあったから使ってみたら、それだけではダメで、いろいろ四苦八苦した（してる）という事を書きます。&lt;/p&gt;

&lt;h2 id=&quot;jekyll-テーマ&quot;&gt;Jekyll テーマ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ageitgey/amplify&quot;&gt;ageitgey/amplify: A Jekyll html theme in the vague style of Medium.com built using Google AMP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という AMP 対応とされるテーマを使っている。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; になってたので、 &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ja&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; に直したりした。&lt;br /&gt;
テンプレートのタグは AMP 対応になってたので、まあ便利、余計なプラグインなどは入ってなくてシンプルなのもよい。&lt;/p&gt;

&lt;h2 id=&quot;画像&quot;&gt;画像&lt;/h2&gt;

&lt;p&gt;AMP では、&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-img&amp;gt;&lt;/code&gt; というタグを使わないといけなくて、しかも &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; と &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; が必須だと言う。&lt;br /&gt;
Markdown から HTML の変換は &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; タグを出力するので、その結果を &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-img&amp;gt;&lt;/code&gt; に置換するようにしたが、Markdown では画像のサイズは指定できない。&lt;br /&gt;
Markdown の方言でサイズが指定できるものもあるようだが、書きたくないし。&lt;/p&gt;

&lt;p&gt;仕方がないので、Markdown から変換された HTML のタグを置換しつつ、画像を読み込んで縦横のサイズを取得し、 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-img width=? height=?&lt;/code&gt; に変換するツールを作った。&lt;br /&gt;
なぜか Mono 製ｗ&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amay077/AmpImgnizer&quot;&gt;amay077/AmpImgnizer: img タグを amp-img タグに置換する mono コンソールアプリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ビルドしてできた &lt;code class=&quot;highlighter-rouge&quot;&gt;AmpImgnizer.exe&lt;/code&gt; を以下のようにして使う。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; -type f -name &lt;span class=&quot;s2&quot;&gt;&quot;*.html&quot;&lt;/span&gt; -print | xargs -0 mono ../AmpImgnizer/AmpImgnizer.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;相対URLと絶対URL、あと SVG にも対応してたりするし、一度サイズを取得したら、そのURLをキーにキャッシュして、時間は画像を読み直さず処理するようになっている。&lt;br /&gt;
（副次的な効果として、 404 な画像を発見できる。）&lt;/p&gt;

&lt;p&gt;Markdown から生成された HTML を対象にしているので、 HTML パーサなんぞは使ってなくて、テキストとして1行ずつ回していくテキトーな実装。&lt;br /&gt;
でもこれで十分使えてる。&lt;/p&gt;

&lt;h2 id=&quot;ツイートの貼り付け&quot;&gt;ツイートの貼り付け&lt;/h2&gt;

&lt;p&gt;自分や誰かのツイートをブログに貼り付ける時、 Twitter の Webサイトから生成できるスクリプトをそのまま貼り付けるのが楽で使っている。&lt;br /&gt;
そのタグはこう↓&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter-tweet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ja&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ja&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ltr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;うおおおお！ &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://twitter.com/hashtag/jxug?src=hash&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;#jxug&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://t.co/lc7x6vaNWl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;pic.twitter.com/lc7x6vaNWl&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;mdash;&lt;/span&gt; これがあめいの選択だよ (@amay077) &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://twitter.com/amay077/status/802320470204788737&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2016年11月26日&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//platform.twitter.com/widgets.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;が、 AMP は外部のスクリプトを実行できないので、 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; タグは使えない。&lt;/p&gt;

&lt;p&gt;ツイートを埋め込むためには、 &lt;a href=&quot;https://www.ampproject.org/ja/docs/reference/components/amp-twitter&quot;&gt;amp-twitter&lt;/a&gt; という “許可された” スクリプトを定義し、 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-twitter&amp;gt;&lt;/code&gt; タグを使う必要がある。&lt;/p&gt;

&lt;p&gt;いちいちこのタグを書くのも面倒だし、AMP が廃れて使えなくなった時も考えて、オリジナル(Markdown)は Twitter 公式の埋め込みにしておきたい。&lt;/p&gt;

&lt;p&gt;なので、これも前述の &lt;code class=&quot;highlighter-rouge&quot;&gt;AmpImgnizer&lt;/code&gt; で変換した。&lt;br /&gt;
上の &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;blockquote 〜 /script&amp;gt;&lt;/code&gt; は、以下のように変換される。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;amp-twitter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-tweetid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;802320470204788737&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;600&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;layout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;responsive&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/amp-twitter&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- うおおおお！ &amp;lt;a href=&quot;https://twitter.com/hashtag/jxug?src=hash&quot;&amp;gt;#jxug&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;https://t.co/lc7x6vaNWl&quot;&amp;gt;pic.twitter.com/lc7x6vaNWl&amp;lt;/a&amp;gt; by @amay077 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;こっちもテキトーな実装なので、変換出来ないケースがあるかも。&lt;/p&gt;

&lt;h2 id=&quot;広告&quot;&gt;広告&lt;/h2&gt;

&lt;p&gt;Amazon の広告を各ページに配置している。もともとの広告タグは &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; だが、AMP では &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-iframe&amp;gt;&lt;/code&gt; を使う必要がある。&lt;/p&gt;

&lt;p&gt;これはもともと&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://okzk.org/blog/jekyll-amazon-gem&quot;&gt;Jekyllでamazonアソシエイトリンクを作るためのgem ”jekyll-amazon”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を使っていたので、そのソースを少し改造して &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-iframe&lt;/code&gt; を吐くようにした。結果は以下のようなものだ。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;amp-iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://rcm-fe.amazon-adsystem.com/e/cm?t=oku2008-22&amp;amp;o=9&amp;amp;p=48&amp;amp;l=st1&amp;amp;mode=books-jp&amp;amp;search=Xamarin%7C%E5%8B%89%E5%BC%B7%E4%BC%9A&amp;amp;lt1=_blank&amp;amp;lc1=469AF6&amp;amp;bg1=FFFFFF&amp;amp;f=ifr&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;728&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;90&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scrolling=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/amp-iframe&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;disqus&quot;&gt;DISQUS&lt;/h2&gt;

&lt;p&gt;コメントシステムに &lt;a href=&quot;https://disqus.com/&quot;&gt;DISQUS&lt;/a&gt; を採用している。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.disqus.com/disqus-now-compatible-with-google-amp&quot;&gt;Disqus now compatible with Google AMP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ってことで「Disqus も AMP 対応したぜ！」って言ってるけど、実体は &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-iframe&lt;/code&gt; を使っているだけだ。&lt;br /&gt;
しかも amp-iframe の src に指定するコンテンツは自分でホストしなければならない。ちょっと面倒だったので、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dangoldin.com/2016/09/13/supporting-disqus-in-amp/&quot;&gt;Supporting Disqus in AMP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で Dan Goldin さんが使用している s3 を間借りしちゃってる、怒られたら謝る。&lt;/p&gt;

&lt;h2 id=&quot;css-とか-analytics&quot;&gt;CSS とか Analytics&lt;/h2&gt;

&lt;p&gt;これらは何も特殊なことはしてなくて、CSS はリンクせずに各ページに Jekyll で埋め込んじゃってる。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--head.html--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;amp-custom&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;｛％&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;capture&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;include_to_scssify&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;％｝&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;｛％&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;％｝&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;｛％&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;endcapture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;％｝&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;｛｛&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;include_to_scssify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;scssify&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;｝｝&lt;/span&gt;

  &lt;span class=&quot;err&quot;&gt;｛％&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;syntax&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.css&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;％｝&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;シンタックスハイライトに使う CSS も毎ページに埋め込まれてるので、冗長と言えば冗長。&lt;/p&gt;

&lt;p&gt;Google Anaytics は、 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/amp-analytics&amp;gt;&lt;/code&gt; を使ってる。&lt;/p&gt;

&lt;h2 id=&quot;ビルドとデプロイ&quot;&gt;ビルドとデプロイ&lt;/h2&gt;

&lt;p&gt;下のような感じで、 Jekyll でビルドした後、例の AmpImgnizer で img と twitter を変換して、サイトに push してる。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll build
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_site
git add .
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;site update&quot;&lt;/span&gt;
find &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; -type f -name &lt;span class=&quot;s2&quot;&gt;&quot;*.html&quot;&lt;/span&gt; -print | xargs -0 mono ../AmpImgnizer/AmpImgnizer.exe
git add .
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;replace img to amp-img&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;press enter to deploy&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read
&lt;/span&gt;git push
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ここまで対応して、ほとんどのページを AMP 対応にする事ができた。&lt;br /&gt;
2017/2/3現在では、まだ AMP として認識されているページは少ないけど、放っておけば更新されてくのかな？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/264530/qiita/google_amp_in_jekyll_blog_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;AMP 対応した方が SEO 的にも効く、との情報もあるけど、まあそのへんは期待してないです。&lt;/p&gt;

&lt;p&gt;何の役にたつかわからないけど、このサイトの Jekyll プロジェクトと、github page のリポジトリは以下です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amay077/blog.vNext&quot;&gt;amay077/blog.vNext&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amay077/amay077.github.com&quot;&gt;amay077/amay077.github.com: My blog powered by jekyll.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 03 Feb 2017 19:20:00 +0900</pubDate>
        <link>http://blog.amay077.net/blog/2017/02/03/google_amp_in_jekyll_blog/</link>
        <guid isPermaLink="true">http://blog.amay077.net/blog/2017/02/03/google_amp_in_jekyll_blog/</guid>
        
        
        <category>AMP</category>
        
        <category>Google</category>
        
        <category>Markdown</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
