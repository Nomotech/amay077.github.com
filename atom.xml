<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Experiments Never Fail]]></title>
  <link href="http://amay077.github.io/atom.xml" rel="self"/>
  <link href="http://amay077.github.io/"/>
  <updated>2013-11-05T21:13:14+09:00</updated>
  <id>http://amay077.github.io/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[地理院地図の標高タイル(CSV)を描画してみた]]></title>
    <link href="http://amay077.github.io/blog/2013/11/05/using-gsimap-dem-csv-api/"/>
    <updated>2013-11-05T21:11:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/11/05/using-gsimap-dem-csv-api</id>
    <content type="html"><![CDATA[<p>国土地理院が提供している API の一つに「標高タイル」というものがあります。</p>

<!--more-->


<p>タイルというと、Googleマップや OpenStreetMap などの Web地図では通常、画像を指しますが、標高タイルAPIでは <strong>「画素毎の高度(ｍ)」</strong> が取得できます。</p>

<ul>
<li><a href="http://portal.cyberjapan.jp/help/development/demtile.html">標高タイル仕様 - 地理院地図</a></li>
<li><a href="http://cyberjapandata.gsi.go.jp/xyz/dem/14/14547/6463.txt">サンプルURL</a></li>
</ul>


<p>これは面白い、ということで使ってみました。</p>

<h2>サンプル</h2>

<ul>
<li><a href="http://jsdo.it/amay077/jjod">地理院地図の標高タイル(CSV)を描画してみた - jsdo.it</a></li>
</ul>


<h3>Google Map</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_gsimap_dem_csv_api_01.png" alt="img1" /></p>

<h3>標高タイルAPI で取得した標高値を描画</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_gsimap_dem_csv_api_02.png" alt="img1" /></p>

<h2>何をしているか？</h2>

<p>下は、このサンプルのコードの抜粋ですが、ポイントは２つ</p>

<ul>
<li>getTile で通常 img 要素を生成して返すが、代わりに canvas 要素に返す</li>
<li>標高API をコールして得られた CSV をパースし、 高さに応じた色を計算して、canvas に矩形を描画する</li>
</ul>


<p>さすがに1ピクセル毎に描画すると重すぎるので、初期値では 16ピクセルずつに間引きしています(画面の DotSize で変更できます)。</p>

<p>クライアント側でレンダリングしているので、色などが動的に変更できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">map</span><span class="p">.</span><span class="nx">mapTypes</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;GsiMaps&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span><span class="s2">&quot;標高タイル&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">tileSize</span><span class="o">:</span><span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Size</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span><span class="mi">256</span><span class="p">),</span>
</span><span class='line'>  <span class="nx">minZoom</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span> <span class="c1">// 標高タイルは Lv:14 しか用意されてないので</span>
</span><span class='line'>  <span class="nx">maxZoom</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">getTile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">tileCoord</span><span class="p">,</span> <span class="nx">zoom</span><span class="p">,</span> <span class="nx">ownerDocument</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 普通は img だけど、標高タイルは CSV で画素毎の標高値が取得できるので、</span>
</span><span class='line'>    <span class="c1">// クライアント側で描画するために Canvas を使う</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">256</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="mi">256</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="p">(</span><span class="nx">tileCoord</span><span class="p">.</span><span class="nx">x</span> <span class="o">%</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nx">zoom</span><span class="p">)).</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">tileCoord</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 各画素の標高値を取得する</span>
</span><span class='line'>    <span class="nx">canvas</span><span class="p">.</span><span class="nx">tileUrl</span> <span class="o">=</span> <span class="s2">&quot;http://cyberjapandata.gsi.go.jp/xyz/dem/&quot;</span> <span class="o">+</span> <span class="nx">zoom</span> <span class="o">+</span>  <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">x</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">y</span> <span class="o">+</span> <span class="s2">&quot;.txt&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 標高を描画する</span>
</span><span class='line'>    <span class="nx">renderDem</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">renderedTiles</span><span class="p">[</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">tileUrl</span><span class="p">]</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">;</span> <span class="c1">// タイル再描画の為にとっておく</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">canvas</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 標高タイルを描画する</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">renderDem</span><span class="p">(</span><span class="nx">canvas</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s1">&#39;2d&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">ctx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">256</span><span class="p">,</span> <span class="mi">256</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">tileUrl</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// CSV が得られるのでパース</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">lines</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\r\n|\r|\n/</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">lines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">+=</span><span class="nx">dotSize</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">cols</span> <span class="o">=</span> <span class="nx">lines</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">cols</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">j</span><span class="o">+=</span><span class="nx">dotSize</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">cols</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;e&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// エラーの画素には &#39;e&#39; が入ってる</span>
</span><span class='line'>          <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 標高0ｍ を startColor、標高1000ｍを endColor としたグラデーション色を設定する。</span>
</span><span class='line'>        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">xcolor</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">gradientlevel</span><span class="p">(</span><span class="nx">startColor</span><span class="p">,</span> <span class="nx">endColor</span><span class="p">,</span> <span class="nx">cols</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="o">/</span> <span class="mf">1000.0</span> <span class="o">*</span> <span class="mf">100.0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">getCSS</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">dotSize</span><span class="p">,</span> <span class="nx">dotSize</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>ただの標高値を地図に表すなら画像でいいじゃん！とか言われそうですが、よいアイデアが浮かばなかったのでまずは素直に使ってみました。</p>

<p>たとえば、移動手段による移動コストの違い(車だと坂道余裕だけど自転車だとキツい)みたいなのを視覚化するのに使えるような気がします。</p>

<p>今回は、Canvas を使ったのでこの程度ですが、WebGL とかを使えば、Google Map の地形図に負けない、美しい3D地図が描画できるはずです。</p>

<p>他に例を見ない、野心的な試みだと思うので、何か面白い使い方ができるといいなと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google API Console の API Access って…]]></title>
    <link href="http://amay077.github.io/blog/2013/10/30/multi-apps-in-google-api-console/"/>
    <updated>2013-10-30T20:00:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/30/multi-apps-in-google-api-console</id>
    <content type="html"><![CDATA[<p><a href="https://code.google.com/apis/console/">Google API Console</a> の API Access って、複数のアプリを登録できたんですね。気づかなかった。。。</p>

<!--more-->


<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/multi_apps_in_google_api_console_01.png" alt="img1" /></p>

<blockquote><p>&lt;SHA1フィンガープリント>;&lt;アプリのパッケージ名>&lt;改行><br/>
&lt;SHA1フィンガープリント>;&lt;アプリのパッケージ名></p></blockquote>

<p>って書けばよかったんだ。</p>

<p>新しくなった <a href="https://cloud.google.com/console">Cloud Console</a> では、 +/- ボタンが付いて分かりやすい。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/multi_apps_in_google_api_console_02.png" alt="img1" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[富士フォトというアプリをリリースしました]]></title>
    <link href="http://amay077.github.io/blog/2013/10/28/fujiphoto-index/"/>
    <updated>2013-10-28T18:22:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/28/fujiphoto-index</id>
    <content type="html"><![CDATA[<p>富士山の撮影スポットを探して、そこへ案内するアプリです。</p>

<!--more-->


<p><a href="https://play.google.com/store/apps/details?id=com.amay077.android.fujiphoto"><img src="https://dl.dropboxusercontent.com/u/264530/qiita/fujiphoto_00.png" alt="img1" /></a></p>

<p>撮影スポットは、静岡県が提供している「ふじのくにオープンデータ」の「<a href="http://open-data.pref.shizuoka.jp/htdocs/index.php?action=pages_view_main&amp;active_action=multidatabase_view_main_detail&amp;content_id=33&amp;multidatabase_id=2&amp;block_id=15#_15">富士山ビューポイント</a>」を使用しています。</p>

<p>以下のことができます。</p>

<ul>
<li>GPS を使って、現在地付近にある撮影スポットを検索</li>
<li>スポットで撮影された富士山の写真を表示</li>
<li>現在地と撮影スポット、富士山の位置関係を地図で確認</li>
<li>撮影スポットと富士山付近の(雨)雲の状況を地図に表示</li>
<li>現在地から撮影スポットへ行くまでを AR で案内(Googleマップナビも使用できます)

<ul>
<li>AR は単純に富士山の方向を確認するのにも使えます。</li>
</ul>
</li>
</ul>


<h2>使い方</h2>

<h3>近くの撮影スポット</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/fujiphoto_01.png" alt="img1" /></p>

<h3>撮影スポットの詳細</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/fujiphoto_02.png" alt="img1" /></p>

<h3>ARナビ</h3>

<p>田舎すぎるだろ…</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/fujiphoto_03.png" alt="img1" /></p>

<h2>技術的なアレ</h2>

<p>このアプリで <a href="http://ma9.mashupaward.jp/works/348">MashUpAward9</a> に応募してます。
使用した API は、</p>

<ul>
<li><a href="http://ma9.mashupaward.jp/apis/216">Yahoo! Android マップ SDK</a> の MapView と雨雲タイルと ARナビ</li>
<li><a href="http://ma9.mashupaward.jp/apis/218">Yahoo! Open Local Platform</a> のリバースジオコーダ</li>
<li><a href="http://ma9.mashupaward.jp/apis/145">datastore API</a></li>
</ul>


<p>です。本当は Googleマップの代わりに <a href="http://ma9.mashupaward.jp/apis/36">Mapion</a> の「3D風地図」を使いたかったのですが、時間がなくてあきらめました。(ピンチズームとかを自前実装しなければならなさそうだったので)</p>

<p>「datastore API」 は <a href="http://www.appiaries.com/jp/">appiaries さんの BaaS</a> のひとつの機能です。この BaaS は位置情報にも対応していて、範囲検索なども行ってくれるのですが、こちらも今回時間がなくて、他のコードを使いまわして自力実装しました。</p>

<p>データは、冒頭で紹介した、</p>

<ul>
<li><a href="http://open-data.pref.shizuoka.jp/htdocs/index.php?action=pages_view_main&amp;active_action=multidatabase_view_main_detail&amp;content_id=33&amp;multidatabase_id=2&amp;block_id=15#_15">富士山ビューポイント - ふじのくにオープンデータ</a></li>
</ul>


<p>を使っています。
日頃アプリを開発したり、アイデアを練ったりしていて、どうしても行き詰まるのがコンテンツです。隣県でこのようなコンテンツを公開してくれる事はとてもありがたく、ぜひ活用してみたいと思って作りました。</p>

<p>まだまだ不安定な感じ（メモリ不足でたびたび落ちる(汗)）ですが、ちまちまブラッシュアップしていきたいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[フラットな感じのボタンを作ってみた]]></title>
    <link href="http://amay077.github.io/blog/2013/10/23/android-flat-button-sample/"/>
    <updated>2013-10-23T01:53:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/23/android-flat-button-sample</id>
    <content type="html"><![CDATA[<p>Foursquare の Android 版をマネて、XML だけで作ってみた。
仕組みをすぐ忘れるので、ここにメモしておく。</p>

<!--more-->


<figure class='code'><figcaption><span>flat_panel.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;layer-list</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:id=</span><span class="s">&quot;@+id/padding&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#00FFFFFF&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;padding</span> <span class="na">android:bottom=</span><span class="s">&quot;8dp&quot;</span> <span class="na">android:left=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                <span class="na">android:right=</span><span class="s">&quot;8dp&quot;</span> <span class="na">android:top=</span><span class="s">&quot;8dp&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:id=</span><span class="s">&quot;@+id/shadow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#D3CEC7&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;padding</span> <span class="na">android:bottom=</span><span class="s">&quot;2px&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:id=</span><span class="s">&quot;@+id/face&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;stroke</span> <span class="na">android:width=</span><span class="s">&quot;1px&quot;</span> <span class="na">android:color=</span><span class="s">&quot;#AEA8A3&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#FFFFFF&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:id=</span><span class="s">&quot;@+id/state&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;selector&gt;</span>
</span><span class='line'>            <span class="nt">&lt;item</span> <span class="na">android:state_pressed=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;shape</span> <span class="na">android:shape=</span><span class="s">&quot;rectangle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#FF82DEFF&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>            <span class="nt">&lt;item</span> <span class="na">android:state_focused=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;shape</span> <span class="na">android:shape=</span><span class="s">&quot;rectangle&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#4082DEFF&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/selector&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:id=</span><span class="s">&quot;@+id/child&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;shape&gt;</span>
</span><span class='line'>            <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#00FFFFFF&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;padding</span> <span class="na">android:bottom=</span><span class="s">&quot;8dp&quot;</span> <span class="na">android:left=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                <span class="na">android:right=</span><span class="s">&quot;8dp&quot;</span> <span class="na">android:top=</span><span class="s">&quot;8dp&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/shape&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'><span class="nt">&lt;/layer-list&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使い方</h2>

<p>上のファイル <code>flat_panel.xml</code> を、<code>res/drawable</code> ディレクトリに入れて、適用したい Button などに↓のように設定。</p>

<figure class='code'><figcaption><span>part_of_activity_main.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:background=</span><span class="s">&quot;@drawable/flat_panel&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;フラットなボタン&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Theme とかにまとめたいけど、今日は割愛。</p>

<h2>ボタンに適用した結果</h2>

<h3>通常</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/android_flat_button_sample_01.png" alt="img1" /></p>

<h3>押した時</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/android_flat_button_sample_02.png" alt="img1" /></p>

<h2>仕組み</h2>

<p><code>&lt;layer-list&gt;</code> タグの中の要素は、上から順に描画される。また、下位(手前)の要素は、上位(奥)の要素の入れ子になるみたい。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/android_flat_button_sample_03.png" alt="img1" /></p>

<p>（図の id は flat_panel.xml と対応してます。）</p>

<ol>
<li>padding - ボタンの周りに少し余白を付ける役割（要らないなら消してもOK）</li>
<li>shadow - ボタンの下部にちょっとだけ見えてる影の部分。大部分が face によって隠れてるけど、実際はほとんど同じ領域を持つ。ここで padding bottom を 2px としているので、face の高さが 2px 縮んで、影っぽく見える仕組み。つまり影の強さはここで調整。</li>
<li>face - ボタンの「面」に該当。stroke でフチを、solid で面を塗りつぶしている。</li>
<li>state - ボタンの状態によって色などを変える役割。ここでは state_pressed=true（押された状態）と、state_focused=true（フォーカスを持ってる状態）だけ対応してる。face を描画した「後」で評価されるので、face の色を置き換えるものではない事に注意（透過時）。あと、状態は上から評価される。</li>
<li>child - LinearLayout など Group な View にこのスタイルを適用した時、子View への余白となる。</li>
</ol>


<p>みんなの大好きな方眼紙EXCEL とオートシェイプで再現してみた → <a href="https://dl.dropboxusercontent.com/u/264530/qiita/flat_panel.xlsx">DL</a></p>

<p>Activity の背景が白だと、あんまり映えない。。。</p>

<p>色の定義を、別の xml に分けて、アプリ毎に変えれば、それっぽくなるのかなーと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[爆速エミュレータで Google Maps Android API v2 を動かす]]></title>
    <link href="http://amay077.github.io/blog/2013/10/20/using-gmapv2-on-intel-emulator/"/>
    <updated>2013-10-20T21:58:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/20/using-gmapv2-on-intel-emulator</id>
    <content type="html"><![CDATA[<p>Google APIs のエミュレータで Google Map Android API v2 が動くようになったのですが、やっぱり遅い、使えん。
という訳で、Intel の爆速エミュレータで GMapV2 を使う手順の備忘録です。(ご利用は自己責任で)</p>

<!--more-->


<h2>爆速エミュレータの導入</h2>

<p>こちら等を参考にセットアップします。</p>

<ul>
<li><a href="http://qiita.com/gabu/items/8bc1a11f1382409f1d2a">Android再入門 - エミュレータの作成</a></li>
</ul>


<h2>エミュレータで Google Maps Android API v2 を動かす</h2>

<p><code>com.google.android.gms.apk</code> と <code>com.android.vending.apk</code> が必要なのでどうにかして入手しインストールします。(ほとんど答えだけど下記参照)</p>

<ul>
<li><a href="http://stackoverflow.com/questions/14040185/running-google-maps-v2-on-android-emulator">Running Google Maps v2 on Android Emulator - Stack Overflow</a></li>
</ul>


<p>apk が古いとうまく動作しません。なるべく新しいものを探しましょう。(ﾎﾞｿ</p>

<h2>AndroidManifest.xml から com.google.android.maps の定義を消す</h2>

<p>意外とハマったのがコレ。</p>

<p><code>AndroidManifest.xml</code> で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;uses-library android:name="com.google.android.maps" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>が定義してあると、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>10-20 11:35:52.977: E/PackageManager(1178): Package xxxx requires unavailable shared library com.google.android.maps; failing!</span></code></pre></td></tr></table></div></figure>


<p>というエラーになります。</p>

<p>この <code>com.google.android.maps</code> は Google Maps API v1 で必要だったもので、v2 では必要ありません。削除しましょう。</p>

<p>v2 の使い方を説明するブログやサイトで、これが含まれてしまってるものがあるようです。(かくいう自分もそんなサイトからコピペしてきたまま使ってたのでエラーになりました（汗）</p>

<h2>動かす</h2>

<p>あとは、実機と変わりません。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_gmapv2_on_intel_emulator_01.png" alt="img" /></p>

<p>やばい、PC性能とネットワーク環境のおかげで実機より快適になったｗ</p>

<h2>参考</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/ria10/20121218/1355794748">AndroidでGoogle Maps v2 をエミュレータで動かしてしかも爆速 - リア充爆発日記</a></li>
<li><a href="http://denshikousaku.net/how-to-make-android-google-maps-v2-work-in-android-emulator">エミュレータでGoogle Maps for Android V2を動かす方法 | アプリ開発とRaspberry PIとArduino実験</a></li>
<li><a href="http://stackoverflow.com/questions/14040185/running-google-maps-v2-on-android-emulator">Running Google Maps v2 on Android Emulator - Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TextView で、テキストの一部だけクリック可能にする]]></title>
    <link href="http://amay077.github.io/blog/2013/10/17/make-clickable-from-part-of-text/"/>
    <updated>2013-10-17T21:16:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/17/make-clickable-from-part-of-text</id>
    <content type="html"><![CDATA[<p>Android の TextView で、「テキストの一部を押すとなんかのアクションが起こる」というのが <code>ClickableSpan</code> というのを使えばできそうだったので、やってみました。</p>

<!--more-->


<figure class='code'><figcaption><span>ClikcableSpanTestActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClikcableSpanTestActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;&gt;();</span>
</span><span class='line'>        <span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;りんご&quot;</span><span class="o">,</span> <span class="s">&quot;隠し味としてカレーに入れます&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;みかん&quot;</span><span class="o">,</span> <span class="s">&quot;あぶりだしに使います&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;すいか&quot;</span><span class="o">,</span> <span class="s">&quot;種を食べると盲腸になります（嘘）&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">final</span> <span class="n">SpannableStringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpannableStringBuilder</span><span class="o">();</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">String</span> <span class="n">SEP</span> <span class="o">=</span> <span class="s">&quot;, &quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">spanStart</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kd">final</span> <span class="n">Pair</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">p</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">first</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">SEP</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 追加した文字列を Span にする</span>
</span><span class='line'>            <span class="n">sb</span><span class="o">.</span><span class="na">setSpan</span><span class="o">(</span><span class="k">new</span> <span class="n">ClickableSpan</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="nd">@Override</span>
</span><span class='line'>              <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">widget</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
</span><span class='line'>                      <span class="n">p</span><span class="o">.</span><span class="na">second</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">},</span> <span class="n">spanStart</span><span class="o">,</span> <span class="n">spanStart</span> <span class="o">+</span> <span class="n">p</span><span class="o">.</span><span class="na">first</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">Spannable</span><span class="o">.</span><span class="na">SPAN_EXCLUSIVE_EXCLUSIVE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">spanStart</span> <span class="o">+=</span> <span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">first</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="n">SEP</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">TextView</span> <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">text</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">sb</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span><span class="o">.</span><span class="na">setMovementMethod</span><span class="o">(</span><span class="n">LinkMovementMethod</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span> <span class="c1">// これ忘れるとクリックできなくて小一時間悩む</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>項目をカンマつなぎで表示して、項目のところだけリンクっぽくします。
リンクをクリックすると Toast を表示します。（下図のように）
また <code>URLSpan</code> というクラスもあり、クリックすると指定したURLに移動（ブラウザアプリが起動）します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_clickablespan_01.png" alt="" /></p>

<h2>参考</h2>

<p>装飾したり位置やサイズ変えたり、TextView でもいろいろできるんですねー。
(VB6の)Label とは違うのだよ、Label とは！</p>

<ul>
<li><a href="http://y-anz-m.blogspot.com/2011/08/androidspannable.html">Y.A.M の 雑記帳: Android Spannable を使って文字列の一部を装飾する</a></li>
<li><a href="http://d.hatena.ne.jp/androidprogram/20100529/1275086958">Tips TextView を使いこなそう ～表示編～ その4 - - Google Android - 雑記帳</a></li>
<li><a href="http://developer.android.com/reference/android/text/style/package-summary.html">android.text.style | Android Developers</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YAML Front-matter とかいうやつ]]></title>
    <link href="http://amay077.github.io/blog/2013/10/16/intro-of-yaml-front-matter/"/>
    <updated>2013-10-16T16:08:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/16/intro-of-yaml-front-matter</id>
    <content type="html"><![CDATA[<p>Octopress でもブログ書いてるんだけど、markdown のヘッダに、</p>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "metersToEquatorPixels を Google Maps Android API v2 で"
</span><span class='line'>date: 2013-10-09 00:21
</span><span class='line'>comments: true
</span><span class='line'>categories: [Android, Java, Geo, GoogleMapsAPI]
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>こんな風にメタ情報を書くルールになっている。</p>

<p>この書き方、 Front-matter というそうで。</p>

<ul>
<li><a href="http://jekyllrb.com/docs/frontmatter/">Front-matter - jekyllrb</a></li>
</ul>


<p>んで、github は、これをいい感じに整形して表示してくれる。</p>

<ul>
<li><a href="https://github.com/amay077/amay077.github.com/blob/source/source/_posts/2013-10-09-meterstoequatorpixels-in-gmap-v2.markdown">amay077.github.com/source/_posts/2013-10-09-meterstoequatorpixels-in-gmap-v2.markdown</a></li>
</ul>


<p>@Qiita とか ＠Kobito でもこれに対応してくれると、私が嬉しい。</p>

<p>Kobito で「書き出し」た .md ファイルのヘッダが Front-matter になってたり、逆に Front-matter を読み込んでくれるといいな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Googleマップ禁止令が出たのなら、地理院地図をGoogleマップで使えばいいじゃない]]></title>
    <link href="http://amay077.github.io/blog/2013/10/11/denshikokudo-on-googlemap/"/>
    <updated>2013-10-11T13:55:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/11/denshikokudo-on-googlemap</id>
    <content type="html"><![CDATA[<p>「領土等が正しく表示されていない」として、国や自治体、国公立の機関に、「Google マップ禁止令」が出ているそうです。</p>

<!--more-->


<h2>2013.11.03 追記</h2>

<p>電子国土Web.NEXT という名称で試験公開されていたものが、「地理院地図」「地理院タイル」として正式公開されました。</p>

<ul>
<li><a href="http://www.gsi.go.jp/johofukyu/johofukyu40032.html">地理院地図の公開について | 国土地理院</a></li>
<li><a href="http://portal.cyberjapan.jp/help/development.html#siyou">地理院タイルを用いた開発 | 地理院地図</a></li>
</ul>


<p>地理院タイルは <a href="http://portal.cyberjapan.jp/help/development/oldScheme.html">従来版タイル</a> と仕様が異なります。従来版タイルは <strong>2013年度中に提供終了予定</strong> との事ですし、新しい地理院タイルの方が大幅に仕様が簡略化されたので、こちらを使った方が良いです。</p>

<p>このエントリも「電子国土」を「地理院地図（地理院タイル）」に修正しました。</p>

<hr />

<h2>2013.10.17 追記</h2>

<p><a href="http://qiita.com/amay077/items/979dfc858a21c8bbb7a9#comment-6d0be86c2ba90df50808">コメント</a>で頂いていますが、現在は、 <strong>「日本向けにローカライズされた」</strong> Googleマップ側でも表記が修正されたようで、当初「問題がある」と言われていた地域は問題が解消されているように見えます。
<strong>ただし、下記のように Google Maps API で「region=JP」が指定されている場合に限ります。</strong></p>

<ul>
<li><a href="http://d.hatena.ne.jp/kitokitoki/20130415/p1">Google Maps API v3 で 日本海（東海）と「東海」が併記されるのを避けるには - わからん</a></li>
</ul>


<p>これによって「Googleマップ禁止令はもはや無用である」と考えることもできますし、「依然として国の制御下には無い」と考えることもできます。</p>

<p>以下の情報は必要なくなるかも知れませんが、今後「Googleマップ以外の選択肢」の一つとして参考になれば幸いです。</p>

<p>&#8211; 追記ここまで &#8211;</p>

<hr />

<ul>
<li><a href="http://www.huffingtonpost.jp/2013/09/29/google-map-forbidden_n_4011180.html">グーグルマップの「利用禁止令」 竹島や北方領土が「日本名でない表記」 政府が自治体などに要請</a></li>
<li><a href="http://matome.naver.jp/odai/2138082171982287301">Googleマップ禁止令?! 制作会社の苦悩と対応を考える。 - NAVER まとめ</a></li>
<li><a href="http://shinka3.exblog.jp/20690859/">大学公式ページでのGoogleMap禁止令と彩雲 : ５号館のつぶやき</a></li>
<li><a href="https://twitter.com/nissyyu/status/387870282570272768">Twitter - うちの大学でも例の「グーグルマップ禁止令」によるサイトのチェックが始まった…</a></li>
</ul>


<p>これ自体の是非はいろいろあるようですが、公的機関の情報表示が、国によって「under control」じゃないのはイカン、というのはまあ分かりますよ。</p>

<p>で、対策としてはいくつかあります。。。</p>

<h4>画像の地図や PDF に変える</h4>

<ul>
<li>どんな時代錯誤ですか</li>
</ul>


<h4>他の地図APIを使う</h4>

<ul>
<li>Yahoo Japan、Mapion、Bing、OSM とか。</li>
<li>Google Map API からこれらに変更する手間は結構かかるんではないかと。特に地図サイトを作りこんでいるならなおさら。</li>
<li>Yahoo Japan、Mapion は、規約的に公的機関で無償で使用OK でしたっけ？</li>
<li>Bing, OSM は「制御下には無い」でしょう。</li>
</ul>


<h4>GoogleMapの問題のある表記を「正しい表記」に上書きする</h4>

<ul>
<li><a href="http://matome.naver.jp/odai/2138082171982287301">Googleマップ禁止令?! 制作会社の苦悩と対応を考える。</a> で実践されていた手法、ある意味驚きました（<sup>_<sup>;）</sup></sup></li>
<li>これ→<a href="http://jsdo.it/toaSoku/gmapforjapan">日本政府に「禁止されない」 Google Maps - jsdo.it - Share JavaScript, HTML5 and CSS</a></li>
<li>スクロール時にチラッと元表記が見えちゃうのと、元地図画像の変化に追従するのが難しいんですよね。</li>
</ul>


<p>いずれも対応コストや規約、ユーザビリティを考えると決め手に欠けます。</p>

<h2>ではどうするか？</h2>

<p><a href="http://portal.cyberjapan.jp/">地理院地図</a>という、国土交通省国土地理院が作って提供している地図データ、および地図システムがあります。</p>

<p>身内ならこれ使えよ、という話です。実際、大学などに送られた通知には、こちらを利用するための「相談窓口」が記載されているようです。</p>

<p>ただし、Google Map API から地理院地図の地図APIに移行することは、前述の通り、それなりのコストが発生します。</p>

<p>ので、 <strong>「Google Map API を使って地理院地図を利用する方法」</strong> を紹介します。</p>

<p>Google Map API には他の地図データを Overlay（重ねあわせ）する機能が備わっており、これを利用します。</p>

<p>既に実現されてる方々がいらっしゃいます。</p>

<ul>
<li><a href="http://user.numazu-ct.ac.jp/~tsato/webmap/map/gmap2.html?data=djws">Googleマップを使って国土地理院の地図を見る</a></li>
<li><a href="http://y2web.net/blog/computer/webmap/show_cj4_tiles_on_google_map_system-3355/">y2blog » Google Maps APIを用いて電子国土V4背景地図を表示する</a></li>
</ul>


<p>これらのサイトを参考にしてもよいですが、ここでは、Googleマップで地理院地図(地理院タイル)を使う、 最もシンプルな実装例を紹介します。</p>

<h3>1. Googleマップを表示するページを用意する</h3>

<p>ここでは、仮の「運用中のサイト」として、Google マップを使うシンプルなページを用意しました。</p>

<ul>
<li><a href="http://jsdo.it/amay077/tM0q">Google Maps Javascript API v3 の使用例</a></li>
</ul>


<p>HTML+Javascript のソースコードはこんな感じ(<a href="http://www.geekpage.jp/web/google-maps-api/v3/helloworld.php">Geekなぺーじ:Google MAPS JavaScript APIの単純な例</a> を参考にさせて頂きました)</p>

<figure class='code'><figcaption><span>google.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">html</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span> <span class="p">}</span>
</span><span class='line'>      <span class="nt">body</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span> <span class="k">margin</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span> <span class="k">padding</span><span class="o">:</span> <span class="m">0px</span> <span class="p">}</span>
</span><span class='line'>      <span class="nf">#map</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span> <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://maps.google.com/maps/api/js?v=3&amp;sensor=false&quot;</span>
</span><span class='line'>        <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">opts</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">zoom</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">mapTypeId</span><span class="o">:</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">MapTypeId</span><span class="p">.</span><span class="nx">ROADMAP</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">center</span><span class="o">:</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mi">39</span><span class="p">,</span> <span class="mi">135</span><span class="p">)</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Map</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;map&quot;</span><span class="p">),</span> <span class="nx">opts</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;init()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;map&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. 地理院地図(地理院タイル)を表示するように置き換える</h3>

<ul>
<li><a href="http://jsdo.it/amay077/wFtJ">Google Maps Javascript API v3 での地理院地図の表示例</a></li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/denshikokudo_on_googlemap_01.png" alt="" /></p>

<p>表示が地理院地図に置き換わっているのが確認できると思います。右上の地図タイプ切り替えは要らないので消してます。あと、ロゴの表示が必要なので、左下に置いています。(地理院地図の正式なロゴが公開されたら置き換えてください)</p>

<p>という処理を追加したのが、下のコード。
変更が１行、追加行が30行くらいです。
変更箇所は「←」で、追加箇所は「↓↓」「↑↑」で示しています。
<a href="https://gist.github.com/amay077/6928205/revisions">gist</a> でも diff を見られます。</p>

<figure class='code'><figcaption><span>gsi_map.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">html</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span> <span class="p">}</span>
</span><span class='line'>      <span class="nt">body</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span> <span class="k">margin</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span> <span class="k">padding</span><span class="o">:</span> <span class="m">0px</span> <span class="p">}</span>
</span><span class='line'>      <span class="nf">#map</span> <span class="p">{</span> <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span> <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://maps.google.com/maps/api/js?v=3&amp;sensor=false&quot;</span>
</span><span class='line'>        <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">opts</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">zoom</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">mapTypeId</span><span class="o">:</span> <span class="s2">&quot;GsiMaps&quot;</span><span class="p">,</span> <span class="c1">// 地理院地図の英語表記は「GIS Maps」</span>
</span><span class='line'>        <span class="nx">center</span><span class="o">:</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mi">39</span><span class="p">,</span> <span class="mi">135</span><span class="p">)</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Map</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;map&quot;</span><span class="p">),</span> <span class="nx">opts</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">map</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">mapTypeControl</span><span class="o">:</span> <span class="kc">false</span> <span class="c1">// 右上の地図タイプ選択を消す</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 地理院タイルを Overlay する</span>
</span><span class='line'>      <span class="c1">// via http://portal.cyberjapan.jp/help/development.html</span>
</span><span class='line'>      <span class="nx">map</span><span class="p">.</span><span class="nx">mapTypes</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;GsiMaps&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span><span class="o">:</span><span class="s2">&quot;地理院地図(GSI Maps)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">tileSize</span><span class="o">:</span><span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Size</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span><span class="mi">256</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">minZoom</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">maxZoom</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">getTile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">tileCoord</span><span class="p">,</span> <span class="nx">zoom</span><span class="p">,</span> <span class="nx">ownerDocument</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">img</span> <span class="o">=</span> <span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">img</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="s2">&quot;256px&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">img</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="s2">&quot;256px&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="p">(</span><span class="nx">tileCoord</span><span class="p">.</span><span class="nx">x</span> <span class="o">%</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nx">zoom</span><span class="p">)).</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">tileCoord</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">img</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s2">&quot;http://cyberjapandata.gsi.go.jp/xyz/std/&quot;</span> <span class="o">+</span> <span class="nx">zoom</span> <span class="o">+</span>  <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">x</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">y</span> <span class="o">+</span> <span class="s2">&quot;.png&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">img</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>       <span class="c1">// 左下に電子国土ロゴを表示(TODO: 地理院地図の正式なロゴが公開されたら置き換える)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">logo</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;DIV&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">logo</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">padding</span> <span class="o">=</span> <span class="s1">&#39;3px&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">map</span><span class="p">.</span><span class="nx">controls</span><span class="p">[</span><span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">ControlPosition</span><span class="p">.</span><span class="nx">LEFT_BOTTOM</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">logo</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">logo</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s1">&#39;&lt;a href=&quot;http://portal.cyberjapan.jp/portalsite/kiyaku/index.html&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;width:32px, height:32px&quot; src=&quot;http://cyberjapan.jp/images/icon01.gif&quot; alt=&quot;電子国土&quot; /&gt;&lt;/a&gt;&#39;</span><span class="p">;</span>    <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;init()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;map&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>不安とか懸念とか…</h3>

<h4>地図の表示が Google に比べて…</h4>

<p>まあ、そうですね。国土地理院にどんどんフィードバックしていきましょう。</p>

<h4>「試験公開」ってなってるんですけど…</h4>

<p>地理院地図は「正式公開」になったので安心ですね。</p>

<p>旧Verについては、2013年度中に運用停止とのことです。</p>

<ul>
<li><a href="http://portal.cyberjapan.jp/help/oldver.html">地理院地図｜旧版情報</a></li>
</ul>


<h4>利用規約とかどうなってるの？</h4>

<p><a href="http://portal.cyberjapan.jp/help/termsofuse.html">地理院地図｜利用規約</a> を見てください。</p>

<h2>まとめ</h2>

<p>いかがでしょうか？</p>

<p>現在の Google マップを使ったページに、２箇所の修正を加えるだけで、「問題のない」地理院地図に切り替える事ができます。これは今回の問題の一つの解決方法になるのではないでしょうか？</p>

<p>個人的には、今回の「Googleマップ禁止令」は、国が所有する膨大な地図データを広く使ってもらえるチャンスだと思っています。</p>

<p>地理院地図の表示例を見てもらえれば分かりますが、地図としての見た目はともかく、データの量・精度については、Googleマップ（というかゼンリン）と肩を並べる（あるいは上回るところもある）と思っています。</p>

<p>せっかく税金で作られている地図なんですから、上手に活用していけば日本全体の利益になるんじゃないかと思います。</p>

<p>最後にお約束で、本件のご利用は自己責任でお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bitcasa 使ってたらプロバイダから利用停止措置を受けた]]></title>
    <link href="http://amay077.github.io/blog/2013/10/09/isp-stopped-account-when-continuously-used-bitcasa/"/>
    <updated>2013-10-09T00:38:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/09/isp-stopped-account-when-continuously-used-bitcasa</id>
    <content type="html"><![CDATA[<p>ある日の深夜０時過ぎ、突然自宅の PC からインターネットに接続できなくなりました。
調べてみるとフレッツ光への接続が「PPP認証エラー」になっていました。</p>

<!--more-->


<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/isp_stopped_account_when_continuously_used_bitcasa_01.png" alt="img" /></p>

<p>ルータの再起動などしても改善せず。
これは故障かな？と思いましたが、「フレッツスクウェア」には接続できてる(もうサービス終了してるけど)し、ルータの設定ページにはつながるのでその可能性は低いだろう、「フレッツか、プロバイダの障害かな？」と予想してその日は寝ました。</p>

<p>翌朝、まだネットに繋がりません。
また、スマホでテザリングして、プロバイダの会員ページにログインしようとした所、「サーバで問題が発生しています」と表示され、ログインできませんでした。
これは障害で確定だなと思いながら、プロバイダ(ODN) のサポートセンターに電話しました。</p>

<h2>電話のやりとり</h2>

<p>私：サポセンに電話する</p>

<p>自動応答：「ただいま電話が大変込み合っており…」</p>

<p>私：（そうだろうそうだろう、プロバイダの障害なら電話殺到中だろう）</p>

<p>─１０分経過─</p>

<p>サポート担当：「大変お待たせしました。」</p>

<p>私：「インターネットに突然接続できなくなったのですが。ID は○○です。」</p>

<p>サ：「かしこまりました。お調べしますので少々お待ち下さい。」</p>

<p>サ：「…お待たせいたしました。お調べ致しましたが…」</p>

<p>私：「はいはい」（障害ですよね？）</p>

<p>サ：「お客さまの ID から大量のデータがアップロードされている事が確認されましたので、こちらのご契約の <strong>利用を停止させて頂いております。</strong>」</p>

<p>私：（えーっ！）と心の中で叫びながら、「は、はぁ？」</p>

<p>サ：「何か大量のデータをアップロードされたご記憶などございますか？」</p>

<p>私：「まあ、ありますね。」（ぜったい Bitcasa だ…）</p>

<p>私：「データをインターネット上にバックアップするソフトウェアを使っていまして…それだと思います」</p>

<p>サ：「そうですか。利用の再開を行うには、今後大量のデータをアップロードしないという、口頭でのお約束が必要になります。」</p>

<p>私：「大量とは、どのくらいですか？」</p>

<p>サ：「1日15GB となっております。」</p>

<p>私：「なるほど、まあ…分かりました。」</p>

<p>サ：「ありがとうございます。では利用再開は本日中に行いますので、翌日ご確認ください。」</p>

<p>私：「はい、よろしくお願いします。」</p>

<h2>結論</h2>

<p>という事で、ネット不通の原因は、</p>

<p><strong>「1日に大量のデータをアップロードしたことによるプロバイダの規制」</strong></p>

<p>でした。</p>

<p>原因は Bitcasa で間違いないでしょう。容量無制限なのをいいことに VMware のイメージファイルなんかもバンバンアップロードして、余裕で「残り30GB」とか表示されてたので。</p>

<p>プロバイダのアップロード規制は、ファイル交換ソフトへの対策として始まり、今ではほとんどのプロバイダで行われています。</p>

<ul>
<li><a href="http://isp.oshietekun.net/">ISP規制情報Wiki</a></li>
</ul>


<p>ODN は、やや厳しめの制限なようです。</p>

<p>しかし いきなり利用停止にしちゃうんですね、ODN さん。。。
と思い、 <a href="http://www.odn.ne.jp/odn_info/20081127.html">ソース</a>を見ると、以下のように書いてありました。</p>

<blockquote><p>24時間に15GB（ギガバイト）以上の大容量データをインターネットに送信しているお客さまについては、利用制限の対象となります。制限の対象となったお客さまに対し、当社より事前にその旨をお知らせしますが、ご利用状態が改善されない場合は利用停止の後、契約解除をすることがあります。</p></blockquote>

<p>おいおい、「事前にその旨お知らせ」なんて来てないぞ？（実は来てるのか？と思って受信箱も迷惑メールフォルダも漁ったけどなかったし）。</p>

<p>まあ、これは別の機会に確認するとして、「データをクラウドにバックアップするサービス」って Bitcasa を始め Pogoplug、BackBraze などたくさん出てきてるので、今回のような「プロバイダの規制」に引っかかる人が出てくるのではないかと思います。</p>

<p>バックアップサービスに帯域制限機能があればそれが使えますが、Bitcasa には無いので、OS や別のソフトウェア、あるいはルータなどの機器で大量のデータをアップロードしないような仕組みが必要になります。我が家でも対策を検討中です。</p>

<h2>その後</h2>

<p>そんなこんなしてる間に、利用停止措置が解除されたようで、発覚から１２時間程度で対応していただけました（同時に会員ページにもログインできるようになりました）。ご丁寧に「口頭でのお約束」が文書化されてメールが来ましたよっと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[metersToEquatorPixels を Google Maps Android API v2 で]]></title>
    <link href="http://amay077.github.io/blog/2013/10/09/meterstoequatorpixels-in-gmap-v2/"/>
    <updated>2013-10-09T00:21:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/09/meterstoequatorpixels-in-gmap-v2</id>
    <content type="html"><![CDATA[<p>Google Map API v1 には、「地図上の距離(ｍ)を画面上の距離(ピクセル)に変換する」ためのメソッド <a href="https://developers.google.com/maps/documentation/android/v1/reference/com/google/android/maps/Projection#metersToEquatorPixels(float">Projection.metersToEquatorPixels</a>) がありましたが、v2 ではなくなってしまいました。</p>

<!--more-->


<p>ので、以下のような代替関数を作ってみました。</p>

<figure class='code'><figcaption><span>metersToEquatorPixels.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">metersToEquatorPixels</span><span class="o">(</span><span class="n">GoogleMap</span> <span class="n">map</span><span class="o">,</span> <span class="n">LatLng</span> <span class="n">base</span><span class="o">,</span> <span class="kt">float</span> <span class="n">meters</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">final</span> <span class="kt">double</span> <span class="n">OFFSET_LON</span> <span class="o">=</span> <span class="mf">0.5d</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">Location</span> <span class="n">baseLoc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Location</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">baseLoc</span><span class="o">.</span><span class="na">setLatitude</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">latitude</span><span class="o">);</span>
</span><span class='line'>  <span class="n">baseLoc</span><span class="o">.</span><span class="na">setLongitude</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">longitude</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">Location</span> <span class="n">dest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Location</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">dest</span><span class="o">.</span><span class="na">setLatitude</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">latitude</span><span class="o">);</span>
</span><span class='line'>  <span class="n">dest</span><span class="o">.</span><span class="na">setLongitude</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">longitude</span> <span class="o">+</span> <span class="n">OFFSET_LON</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kt">double</span> <span class="n">degPerMeter</span> <span class="o">=</span> <span class="n">OFFSET_LON</span> <span class="o">/</span> <span class="n">baseLoc</span><span class="o">.</span><span class="na">distanceTo</span><span class="o">(</span><span class="n">dest</span><span class="o">);</span> <span class="c1">// 1m は何度？</span>
</span><span class='line'>  <span class="kt">double</span> <span class="n">lonDistance</span> <span class="o">=</span> <span class="n">meters</span> <span class="o">*</span> <span class="n">degPerMeter</span><span class="o">;</span> <span class="c1">// m を度に変換</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Projection</span> <span class="n">proj</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">getProjection</span><span class="o">();</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">basePt</span> <span class="o">=</span> <span class="n">proj</span><span class="o">.</span><span class="na">toScreenLocation</span><span class="o">(</span><span class="n">base</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Point</span> <span class="n">destPt</span> <span class="o">=</span> <span class="n">proj</span><span class="o">.</span><span class="na">toScreenLocation</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">latitude</span><span class="o">,</span> <span class="n">base</span><span class="o">.</span><span class="na">longitude</span> <span class="o">+</span> <span class="n">lonDistance</span><span class="o">));</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">return</span> <span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">destPt</span><span class="o">.</span><span class="na">x</span> <span class="o">-</span> <span class="n">basePt</span><span class="o">.</span><span class="na">x</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>行っていることは単純で、基準となる緯度経度:<code>base</code> から、適当に(ここでは 0.5度)東へ移動した緯度経度を <code>Location.distanceTo</code> で求め、その結果から、「1ｍは何度か？」を求めます。あとは、この係数を使って 地図上の距離:<code>meters</code> を度に変換し、最後に、<code>base</code> と移動後の緯度経度それぞれを画面座標に変換して、画面上の距離を返す、というものです。</p>

<p>「1ｍは何度か？」は、赤道上の値を使っても良いのですが、緯度によって値が大きく変わるので、このような手法を取りました。</p>

<p>ただこれでも、求める距離の精度によっては、<code>OFFSET_LON</code> の値の調整が必要な気がします。また、経度:0 をまたぐような地域では正しく動かない気がします。(いずれも未検証)</p>

<p>また、緯度方向にもそれなりに正確な数値を出すには、上記と同じことを緯度に対しても行う必要があります。(これは v1 の API にもなかった)</p>

<p>v2 になって、描画系でピクセル座標を意識することはなくなったんであまり使うことも無いと思いますが、なにかで必要になったら思い出す程度で。</p>

<h3>追記</h3>

<p>あとで気づいたんですが、 v1 の <a href="https://developers.google.com/maps/documentation/android/v1/reference/com/google/android/maps/Projection#metersToEquatorPixels(float">Projection.metersToEquatorPixels</a>) は、赤道上の距離で算出してたんですね。それと比べるとちょっとオーバースペックでした。</p>

<p> それと、この記事を書く前に私のツイートを読まれた @honjo2 さんが、 v1 と同じ(赤道の距離を使う)仕様の関数を公開してくださいました。</p>

<blockquote class="twitter-tweet"><p>どうぞ <a href="https://t.co/quYnqvn1tw">https://t.co/quYnqvn1tw</a> RT <a href="https://twitter.com/amay077">@amay077</a>: Google Map Android v2 になって metersToEquatorPixels がなくなっちゃったのが地味に不便だ。</p>&mdash; 本城 博昭 (@honjo2) <a href="https://twitter.com/honjo2/statuses/387368608541589505">October 8, 2013</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bitcasa でアップロードに失敗したファイルが見つかった時の対処方法]]></title>
    <link href="http://amay077.github.io/blog/2013/10/02/bitcasa-when-failed-to-upload/"/>
    <updated>2013-10-02T19:30:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/02/bitcasa-when-failed-to-upload</id>
    <content type="html"><![CDATA[<p>相変わらず「安定している」とは言いがたい Bitcasa さん。CPU 喰いまくったり、アップロード残が一向に減らないまま１日経過とかザラで、そういう時はアプリを終了させたり、プロセスを殺したりする訳ですが、そうしますと「正常にアップロードできてないファイル」ができる事があります。</p>

<!--more-->


<p>このファイルは、Bitcasa の Web サイトで「灰色」で表示されます(下を参照)。このファイルは Web 上で再生も、ダウンロードもできません。一方、PC の Finder や Explorer 上の Infinite Drive では、特に問題ないように見えます。が、再生や実行などしようとするとエラーになります。(キャッシュに残っている内はうまくいくかも)</p>

<p><img src="https://support.bitcasa.com/attachments/token/yw6awz1fvdktbuf/?name=noname.png" alt="img" /></p>

<p>この症状について、<a href="https://support.bitcasa.com/">Bitcasa のサポートサイト</a> で、以下の情報が見つかります。</p>

<ul>
<li><a href="https://support.bitcasa.com/entries/23768267-some-pictures-can-not-be-opened-on-my-bitcasa-com">some pictures can not be opened on my.bitcasa.com : Help Center</a></li>
</ul>


<p>これ、要約すると、</p>

<p>「キャッシュを消してアップロードしなおしてください」</p>

<p>と言ってるんですが、次の理由でやってられません。</p>

<p><strong>「どんだけフォルダあると思っとんねん！」</strong></p>

<p>そう、「アップロードに失敗したファイルを見つける方法」は、Web サイトで「灰色になっているのを目視する」しかないのです。</p>

<p>他のユーザーもこれを問題視していて、<a href="http://feedback.bitcasa.com/forums/184524-bitcasa-feature-requests-suggestions">Bitcasa の要望受付</a> には、次のような案が挙げられています。</p>

<ol>
<li><a href="http://feedback.bitcasa.com/forums/184524-bitcasa-feature-requests-suggestions/suggestions/3982870-a-incomplete-files-list-in-my-bitcasa-portal">A incomplete files list in my bitcasa portal</a></li>
<li><a href="http://feedback.bitcasa.com/forums/184524-bitcasa-feature-requests-suggestions/suggestions/4403970-mark-incomplete-corrupted-files-with-a-modified-da">Mark incomplete/corrupted files with a modified date of 01-01-1970 so that file sync utilities will sync them again</a></li>
<li><a href="http://feedback.bitcasa.com/forums/184524-bitcasa-feature-requests-suggestions/suggestions/4115823-a-option-to-delete-incomplete-files-from-my-bitcas">A option to delete incomplete files from my Bitcasa Drive</a></li>
</ol>


<p>1 が一番投票数が多くて実現の検討に入ってる(IN REVIEW)ようです。</p>

<p>で、タイトルにある「対処方法」としては、 <strong>「Vote してください」</strong> となります。なんじゃそら。</p>

<p>しかし、クラウドストレージのキモって「確実に」「クラウド上に」「ファイルが保管されている」ことだと思うんですが、この辺が危ういのなんとかしてほしいですねえ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ディレクトリを再帰的にたどってファイル一覧を出力する]]></title>
    <link href="http://amay077.github.io/blog/2013/10/02/enum-files-recursive-on-nodejs/"/>
    <updated>2013-10-02T19:20:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/10/02/enum-files-recursive-on-nodejs</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/_shimizu">@_shimizu</a> さんの</p>

<!--more-->


<ul>
<li><a href="http://shimz.me/blog/node-js/2944">[node.js]ディレクトリを再帰的にたどってファイル一覧をJSONとして出力する | GUNMA GIS GEEK</a></li>
</ul>


<p>の派生品です。ファイルパスを出力するだけにしました。</p>

<figure class='code'><figcaption><span>enumFilesRecursive.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;fs&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">,</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">,</span> <span class="nx">dir</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">||</span> <span class="s1">&#39;.&#39;</span><span class="p">;</span> <span class="c1">//引数が無いときはカレントディレクトリを対象とする</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">walk</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span> <span class="nx">fileCallback</span><span class="p">,</span> <span class="nx">errCallback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fs</span><span class="p">.</span><span class="nx">readdir</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">files</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">errCallback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">files</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">fp</span> <span class="o">=</span> <span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span> <span class="nx">f</span><span class="p">);</span> <span class="c1">// to full-path</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="nx">fs</span><span class="p">.</span><span class="nx">statSync</span><span class="p">(</span><span class="nx">fp</span><span class="p">).</span><span class="nx">isDirectory</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">walk</span><span class="p">(</span><span class="nx">fp</span><span class="p">,</span> <span class="nx">fileCallback</span><span class="p">);</span> <span class="c1">// ディレクトリなら再帰</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">fileCallback</span><span class="p">(</span><span class="nx">fp</span><span class="p">);</span> <span class="c1">// ファイルならコールバックで通知</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使う方</span>
</span><span class='line'><span class="nx">walk</span><span class="p">(</span><span class="nx">dir</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">path</span><span class="p">);</span> <span class="c1">// ファイル１つ受信    </span>
</span><span class='line'><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Receive err:&quot;</span> <span class="o">+</span> <span class="nx">err</span><span class="p">);</span> <span class="c1">// エラー受信</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[moveCamera(CameraUpdateFactory.newLatLngBounds で落ちる]]></title>
    <link href="http://amay077.github.io/blog/2013/09/29/movecamera-with-cameraupdatefactory-newlatlngbounds-crashes/"/>
    <updated>2013-09-29T21:16:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/29/movecamera-with-cameraupdatefactory-newlatlngbounds-crashes</id>
    <content type="html"><![CDATA[<p>Google Map Android API v2 では、指定した範囲にいいかんじにズームしてくれるメソッドがあって（これを使うと下記事のようなことができる）、とても便利なのですが、普通に使ってたら落ちました（泣</p>

<!--more-->


<ul>
<li><a href="http://tryworks-design.com/?p=1530">Android GooglMapを使い、現在値と目的地を（２点間）を表示させる。 | App Camp</a></li>
</ul>


<p>その理由と、対策を記録しておきます。</p>

<h2>エラーになるコード</h2>

<p>GoogleMap v2 を使ったよくあるコード。</p>

<figure class='code'><figcaption><span>MainActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">SupportMapFragment</span> <span class="n">fragment</span> <span class="o">=</span> <span class="o">((</span><span class="n">SupportMapFragment</span><span class="o">)</span><span class="n">getSupportFragmentManager</span><span class="o">()</span>
</span><span class='line'>            <span class="o">.</span><span class="na">findFragmentById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">map</span><span class="o">));</span>
</span><span class='line'>    <span class="n">GoogleMap</span> <span class="n">gmap</span> <span class="o">=</span> <span class="n">fragment</span><span class="o">.</span><span class="na">getMap</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LatLngBounds</span> <span class="n">bounds</span> <span class="o">=</span> <span class="n">LatLngBounds</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span><span class='line'>        <span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.4433011</span><span class="o">,</span><span class="mf">139.646108</span><span class="o">))</span> <span class="c1">// 横浜</span>
</span><span class='line'>        <span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.6846001</span><span class="o">,</span><span class="mf">139.696919</span><span class="o">))</span> <span class="c1">// 東京</span>
</span><span class='line'>        <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">gmap</span><span class="o">.</span><span class="na">moveCamera</span><span class="o">(</span><span class="n">CameraUpdateFactory</span><span class="o">.</span><span class="na">newLatLngBounds</span><span class="o">(</span><span class="n">bounds</span><span class="o">,</span> <span class="mi">15</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>起動時に、横浜-東京 が画面内に入るようにズームする、つもりのコード。</p>

<p>これは以下のエラーになる。</p>

<blockquote><p>09-29 20:22:58.508: E/AndroidRuntime(18904): FATAL EXCEPTION: main<br/>
09-29 20:22:58.508: E/AndroidRuntime(18904): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.amay077.<br/>android/com.amay077.android.mapsample.view.MainActivity}: java.lang.IllegalStateException: Map size should not be 0. Most likely, layout has not yet occured for the map view.</p></blockquote>

<h2>エラーの原因</h2>

<p>StackOverflow さまに載ってた。</p>

<ul>
<li><a href="http://stackoverflow.com/questions/13692579/movecamera-with-cameraupdatefactory-newlatlngbounds-crashes">android - moveCamera with CameraUpdateFactory.newLatLngBounds crashes - Stack Overflow</a></li>
</ul>


<p>また、<a href="https://developers.google.com/maps/documentation/android/views#changing_camera_position">APIリファレンス</a> にも次のように記載がある。</p>

<blockquote><p>Note: Only use the simpler method newLatLngBounds(boundary, padding) to generate a CameraUpdate if it is going to be used to move the camera after the map has undergone layout. During layout, the API calculates the display boundaries of the map which are needed to correctly project the bounding box. In comparison, you can use the CameraUpdate returned by the more complex method newLatLngBounds(boundary, width, height, padding) at any time, even before the map has undergone layout, because the API calculates the display boundaries from the arguments that you pass.</p></blockquote>

<p>意訳すると <code>newLatLngBounds(boundary, padding)</code> は、レイアウトが完了した後で使ってね、そうでない場合は、<code>newLatLngBounds(boundary, width, height, padding)</code> を使ってね。ということらしい。</p>

<p>確かに <code>onCreate</code> ではまだレイアウトされていないので納得。</p>

<h2>対策</h2>

<p>上の StackOverflow でも解決策として、<code>ViewTreeObserver.addOnGlobalLayoutListener</code> を使って、レイアウトが完了したタイミングで moveCamera する方法が紹介されているが、もうちっとシンプルにできないかなと思っていたところ、ちょうど別件で「ビューのサイズが確定(して Width/Height が取得できる)タイミング」を調べていて、同じく StackOverflow で以下の情報を発見。</p>

<ul>
<li><a href="http://stackoverflow.com/questions/4393612/when-can-i-first-measure-a-view/15301092#15301092">android - When Can I First Measure a View? - Stack Overflow</a></li>
</ul>


<p>これによると <code>view.post(new Runnable() { … })</code> のタイミングでも OK らしいので、今回はこれを使ってみる。</p>

<figure class='code'><figcaption><span>MainActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">SupportMapFragment</span> <span class="n">fragment</span> <span class="o">=</span> <span class="o">((</span><span class="n">SupportMapFragment</span><span class="o">)</span><span class="n">getSupportFragmentManager</span><span class="o">()</span>
</span><span class='line'>            <span class="o">.</span><span class="na">findFragmentById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">map</span><span class="o">));</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">GoogleMap</span> <span class="n">gmap</span> <span class="o">=</span> <span class="n">fragment</span><span class="o">.</span><span class="na">getMap</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// NOTE MainActivity.this.runOnUiThread(new Runnable() { ではダメだった</span>
</span><span class='line'>    <span class="n">fragment</span><span class="o">.</span><span class="na">getView</span><span class="o">().</span><span class="na">post</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">LatLngBounds</span> <span class="n">bounds</span> <span class="o">=</span> <span class="n">LatLngBounds</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span><span class='line'>                    <span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.4433011</span><span class="o">,</span><span class="mf">139.646108</span><span class="o">))</span> <span class="c1">// 横浜</span>
</span><span class='line'>                    <span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.6846001</span><span class="o">,</span><span class="mf">139.696919</span><span class="o">))</span> <span class="c1">// 東京</span>
</span><span class='line'>                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">gmap</span><span class="o">.</span><span class="na">moveCamera</span><span class="o">(</span><span class="n">CameraUpdateFactory</span><span class="o">.</span><span class="na">newLatLngBounds</span><span class="o">(</span><span class="n">bounds</span><span class="o">,</span> <span class="mi">15</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>としたところ、正常に地図がズームされました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/movecamera_with_cameraupdatefactory_newlatlngbounds_crashes_01.png" alt="img" /></p>

<p>ちなみに、処理をメインスレッド上で行う <code>Activity.runOnUiThread</code> や <code>Handler.post</code> では NG、冒頭と同じエラーでした。処理は UIスレッド上で行われるけど、Map はまだレイアウト未完了、という事だと思います。</p>

<p>起動時の処理は、全ての View で post 内に書いておいた方がいいのかも。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自作ビューで layout_width のマネをしたい時]]></title>
    <link href="http://amay077.github.io/blog/2013/09/26/layout-widh-like-property-in-custom-view/"/>
    <updated>2013-09-26T23:55:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/26/layout-widh-like-property-in-custom-view</id>
    <content type="html"><![CDATA[<p><code>android:layout_width</code> って、型は <code>dimension</code> であるのに、Layout XML には、 <code>"match_parent"</code> とか <code>"wrap_content"</code> とか指定できる。これと同じことを自作ビューの自作プロパティでやりたい。</p>

<!--more-->


<p>自作ビュー(カスタムビュー)の作りかたは下などを参照。</p>

<ul>
<li><a href="http://techbooster.org/android/application/7361/">Androidでxmlファイルを用いてカスタムViewを作る方法 | Tech Booster</a></li>
</ul>


<p>で、<code>android:layout_width</code> のマネをするには、 attrs.xml に以下のように書く。</p>

<figure class='code'><figcaption><span>attrs.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;MyCustomView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;my_width&quot;</span> <span class="na">format=</span><span class="s">&quot;dimension&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;enum</span> <span class="na">name=</span><span class="s">&quot;fill_parent&quot;</span> <span class="na">value=</span><span class="s">&quot;-1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;enum</span> <span class="na">name=</span><span class="s">&quot;match_parent&quot;</span> <span class="na">value=</span><span class="s">&quot;-1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;enum</span> <span class="na">name=</span><span class="s">&quot;wrap_content&quot;</span> <span class="na">value=</span><span class="s">&quot;-2&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/attr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Android Framework のソースコードにこう書いてあったので、真似しただけ。</p>

<ul>
<li><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.3_r2.1/frameworks/base/core/res/res/values/attrs.xml">GrepCode: frameworks / base / core / res / res / values / attrs.xml - Source Code View</a></li>
</ul>


<p>自作ビューの実装クラスで、この値を読み込む時は、<code>TypedArray.getLayoutDimension</code> を使う。</p>

<figure class='code'><figcaption><span>MyCustomView.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nf">MyCustomView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">TypedArray</span> <span class="n">a</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">obtainStyledAttributes</span><span class="o">(</span><span class="n">attrs</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">MyCustomView</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_myWidth</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="na">getLayoutDimension</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">MyCustomView_my_width</span><span class="o">,</span>
</span><span class='line'>            <span class="n">LayoutParams</span><span class="o">.</span><span class="na">WRAP_CONTENT</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">a</span><span class="o">.</span><span class="na">recycle</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Android Framework 側で仕様が増えた時は、追従しないといかんのかー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Longitude の略し方。lng 派と lon 派の終わらない争い]]></title>
    <link href="http://amay077.github.io/blog/2013/09/25/the-battle-of-abbreviation-lat-vs-lng/"/>
    <updated>2013-09-25T21:08:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/25/the-battle-of-abbreviation-lat-vs-lng</id>
    <content type="html"><![CDATA[<p>地図上での位置は「緯度経度」で表します。英語だと「latitude, longitude」ですね。
これらの単語、コーディングする際は短縮したいわけです。latitude は <code>lat</code> で全会一致です。問題は longitude 。</p>

<!--more-->


<p>業界？の中では、longitude の略し方についての議論が度々沸き起こります。</p>

<p>例えば、、、</p>

<p>初めは、タイトルの議論で推移していましたが、次第に略し方の議論に。。。</p>

<ul>
<li><a href="http://togetter.com/li/85864">latitudeとlongitude，どっちが緯度でどっちが経度？ - Togetter</a></li>
</ul>


<p><code>lon</code> 派の方の意見。</p>

<blockquote class="twitter-tweet"><p>そういえば緯度経度のうち経度（longitude）をlong, lon, lngなどと書く場合があるんだけど、longは長整数型のために予約語になってる場合があるのと、lngだと「イング」と読めてしまうからという理由でlonにしてる。</p>&mdash; Masaki Ohashi (@ohashimasaki) <a href="https://twitter.com/ohashimasaki/statuses/308895891308294144">March 5, 2013</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p><code>lng</code> 支持？な方々</p>

<blockquote class="twitter-tweet"><p>longitudeの省略形を何にするか迷ってる。lon or lng 今のところlngが優勢。</p>&mdash; 本城 博昭 (@honjo2) <a href="https://twitter.com/honjo2/statuses/28848028079">October 27, 2010</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet"><p>最近Google Maps APIを触っていたので、CHINTAIの地図で経度(longitude)のパラメータがlngじゃなくてlonなのが新鮮に思えた</p>&mdash; Ryusuke SEKIYAMA (@rsky) <a href="https://twitter.com/rsky/statuses/25312333134">September 23, 2010</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>振り回されてる方々</p>

<blockquote class="twitter-tweet"><p>lngとlonで５分ハマったー</p>&mdash; ばん↓どう↑さん↓ (@netartjp) <a href="https://twitter.com/netartjp/statuses/379923672632266752">September 17, 2013</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet"><p>lonとlngのミスで1時間無駄にした</p>&mdash; カメキチ (@kamekiti) <a href="https://twitter.com/kamekiti/statuses/186149216492589056">March 31, 2012</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet"><p>YahooのローカルサーチAPIのパラメーターの経度情報って、「lon」から始まる値なんですね。他の多くが「lng」な気がするので、始め何でエラーが出るのは分かりませんでした。ということで、ほぼ出来たピョン吉。</p>&mdash; 星野邦敏 (@khoshino) <a href="https://twitter.com/khoshino/statuses/149640555092131842">December 22, 2011</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>おいマジか Yahoo!（笑</p>

<blockquote class="twitter-tweet"><p>「Y.LatLngオブジェクトのメソッドはlat、lngですが、ローカルサーチAPIのパラメータ名はlat、lonなので注意してください」YOLPで挑戦～「マクドナルドはどこだ」アプリをHTML5で作る！ <a href="http://t.co/QX8yiyvT">http://t.co/QX8yiyvT</a></p>&mdash; NI-Lab. (@nilab) <a href="https://twitter.com/nilab/statuses/189537270347472896">April 10, 2012</a></blockquote>


<script async src="http://amay077.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とこのように、一つの企業内でも「揺れ」が生じてしまう程度にはバラバラな感じです。</p>

<h2>調べてみた</h2>

<p>で、デファクトスタンダードはどれなのよ？をいろんな地図に関する Web API の仕様から一覧化してみました。</p>

<h3>Lng 派</h3>

<p>Google は神！Google 先生について行きます！</p>

<ul>
<li>Google - https://developers.google.com/maps/documentation/javascript/reference?hl=ja#LatLng</li>
<li>Mapion - http://labs.mapion.co.jp/api/asdoc/index.html</li>
<li>ロケタッチ - http://tou.ch/developer/api_all?uri=spots%2Fsearch</li>
<li>Leaflet - http://leafletjs.com/reference.html#latlng</li>
<li>Yahoo(地図API) - http://developer.yahoo.co.jp/webapi/map/openlocalplatform/v1/js/#index6-2</li>
<li>mapquest - http://www.mapquestapi.com/staticmap/#getmap</li>
</ul>


<h3>Lon 派</h3>

<p>頭から３文字取ったら普通これだろjk</p>

<ul>
<li>Yahoo(ローカルサーチ) - http://developer.yahoo.co.jp/webapi/map/openlocalplatform/v1/localsearch.html</li>
<li>OpenStreetMap - http://wiki.openstreetmap.org/wiki/API_v0.6#Create_a_new_note:<em>Create:</em>POST_.2Fapi.2F0.6.2Fnotes</li>
<li>OpenLayers - http://dev.openlayers.org/docs/files/OpenLayers/BaseTypes/LonLat-js.html ※LonLat！</li>
<li>電子国土Web - http://portal.cyberjapan.jp/site/mapuse4/#zoom=5&amp;lat=35.99989&amp;lon=138.75&amp;layers=BTTT</li>
<li>Elasticsearch - http://www.elasticsearch.org/guide/reference/mapping/geo-point-type/</li>
<li>MongoDB - http://myadventuresincoding.wordpress.com/2011/10/02/mongodb-geospatial-queries/</li>
<li>ゼンリンデータコム(いつもNavi) - http://support.e-map.ne.jp/manuals/V20/index.html?%A5%AF%A5%E9%A5%B9%A5%EA%A5%D5%A5%A1%A5%EC%A5%F3%A5%B9%2FZDC.LatLon</li>
<li>簡易逆ジオコーディングサービス / Finds.jp - http://www.finds.jp/wsdocs/rgeocode/index.html.ja#PARAMS</li>
<li>ジオどす - http://geodosu.com/</li>
<li>モバイラーズオアシスAPI - http://oasis.mogya.com/blog/API</li>
<li>GeOAP(東京ガス) - http://dev.geoap.jp/GeOAP_Course/GeOAP_Trial.asmx?op=CourseLineOfLLToLL</li>
<li>はてなココ - http://c.hatena.ne.jp/s/nearby?lat=36.2648177777778&amp;lon=137.910003611111</li>
<li>Nokia - http://developer.here.com/rest-apis/documentation/enterprise-map-image</li>
</ul>


<h3>Long 派</h3>

<p>「〜itude」は同じなんだから、それより前の部分を省略形にすべきだろ（でっち上げの根拠ですｗ</p>

<ul>
<li>LatLongLab(Yahoo) - http://latlonglab.yahoo.co.jp/</li>
<li>はてなココ - http://developer.hatena.ne.jp/ja/documents/coco/apis/v1/spots#spots</li>
</ul>


<h3>Longitude(略さない)派</h3>

<p>こんなに迷うなら、いっそ省略形など要らぬ！</p>

<ul>
<li>Apple - https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CoreLocationDataTypesRef/Reference/reference.html</li>
<li>Bing Maps - http://msdn.microsoft.com/en-us/library/gg427612.aspx</li>
<li>Facebook -  https://developers.facebook.com/docs/reference/fql/location_post</li>
<li>Amazon - https://developer.amazon.com/sdk/maps/api-reference.html</li>
<li>Evernote - http://dev.evernote.com/doc/reference/Types.html#Struct_NoteAttributes</li>
<li>Path - https://path.com/developers#tags</li>
</ul>


<h3>緯度経度ペアに名前付けちゃう派</h3>

<p>だってペアじゃないと意味ないじゃん？</p>

<ul>
<li>Twitter(geocode) - https://dev.twitter.com/docs/api/1/get/search (緯度、経度)</li>
<li>Foursquare(ll) - https://developer.foursquare.com/docs/venues/search (緯度、経度)</li>
<li>カーリル図書館情報取得API(geocode) - http://calil.jp/doc/api_ref.html (経度、緯度)</li>
</ul>


<h3>X/Y と同じじゃん派</h3>

<p>所詮座標でしょ？(ﾎｼﾞﾎｼﾞ</p>

<ul>
<li>Solr(pt) - http://docs.lucidworks.com/display/solr/Spatial+Search</li>
<li>Oracle Spatial - http://otndnld.oracle.co.jp/document/products/oracle10g/102/doc_cd/appdev.102/B19243-02/sdo_cs_concepts.htm</li>
<li>PostGIS - http://postgis.net/docs/manual-2.1/using_postgis_dbmanagement.html#RefObject</li>
<li>PlaceEngine - http://www.placeengine.com/doc/tut</li>
</ul>


<h2>まとめ</h2>

<p>数では <code>lon</code> 派が優勢。しかし開発者の目に触れる機会では Google が居る <code>lng</code> の方が多いのかも。
MS、Facebook など、割と巨大企業が 略さない を選択してるのも面白いですね。</p>

<p>ペアに名前を付けるやり方は、座標の順番が 緯度→経度 なのか、経度→緯度 なのか揺れるのであまり好きじゃないですね。</p>

<p>XY と同じ概念で扱うのは、そもそも地図以外での利用を想定していたり、地図でも投影されたXY座標を想定しているものが多いですが、XY と LatLon って、これまた混乱するんですよね。Lat って Y なの？順番逆なの？って。</p>

<p>個人的には 略さない派 だったのですが、そうは言っても短く書きたいので、最近は <code>lon</code> 派です。理由は、</p>

<p><strong>「オレオレ緯度経度クラスを使いたいが、Google に <code>LatLng</code> を取られちゃってるから」</strong></p>

<p>クラス名が衝突すると、いろいろ面倒だし、クラス名に Prefix 付けるのもダサいし。。。</p>

<p>というわけで、終わらない争いと知りつつまとめてみました。
上記に載っていない情報があったら教えてもらえると嬉しいです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[総務省のデータを Elasticsearch にぶち込んで、緯度経度から市区町村の何丁目までを取り出す]]></title>
    <link href="http://amay077.github.io/blog/2013/09/10/implementing-reverse-geocoding-using-elasticsearch/"/>
    <updated>2013-09-10T21:13:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/10/implementing-reverse-geocoding-using-elasticsearch</id>
    <content type="html"><![CDATA[<p>いわゆる「逆ジオコーディング」と呼ばれる機能ですが、きっかけはこれら２つの記事です。</p>

<!--more-->


<ul>
<li><a href="http://qiita.com/hamichamp/items/ac9e80f1078febb9f1b9">PHP - 総務省のデータを使って、緯度経度から市区町村の何丁目までを取り出す</a></li>
<li><a href="http://qiita.com/masuidrive/items/21a282c7bf54fd6a4985">PostgreSQL - 国土交通省のデータを使って、緯度経度から市区町村までを取り出す</a></li>
</ul>


<p>Solr や Elasticsearch でも同じことができるのでは、という事で Elasticsearch でやってみました。</p>

<h2>Elasticsearch の導入</h2>

<p>は、</p>

<ul>
<li><a href="http://amay077.github.io/blog/2013/09/09/using-spatialdata-with-elasticsearch/">Elasticsearch で位置情報を検索する手順 - Experiments Never Fail</a></li>
</ul>


<p>をご覧ください。</p>

<h2>1. 総務省のデータをダウンロードする</h2>

<ul>
<li><a href="http://qiita.com/hamichamp/items/ac9e80f1078febb9f1b9">PHP - 総務省のデータを使って、緯度経度から市区町村の何丁目までを取り出す</a></li>
</ul>


<p>とほぼ同じですが、「世界測地系緯度経度・G-XML形式」ではなく、 <strong>「世界測地系緯度経度・shape形式」</strong> を使います。</p>

<p>一応再掲すると、</p>

<ol>
<li><a href="http://e-stat.go.jp/SG2/eStatGIS/page/download.html">http://e-stat.go.jp/SG2/eStatGIS/page/download.html</a> へ行く。</li>
<li>左から「平成22年度国勢調査（小地域）」を選ぶ。</li>
<li>「男女別人口総数及び世帯総数」（←なんでもいい）を選択して、「統計表各種データダウンロードへ」を押す。</li>
<li>「世界測地系緯度経度・Shape形式」のデータ（下図参照）をダウンロードする。ダウンロードしたら zip ファイルのまま置いといて。</li>
</ol>


<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/implementing_reverse_geocoding_using_elasticsearch_01.png" alt="img" /></p>

<h2>2. Shapefile を GeoJSON 形式に変換する</h2>

<p>Elasticsearch へ投入できるデータ形式は JSON なので、ダウンロードした Shape形式のデータを JSON 形式の地理空間拡張である GeoJSON 形式に変換します。</p>

<p>スクリプトを書いてもできますが面倒なので、便利なオンラインツールに頼ることにします。</p>

<ul>
<li><a href="http://converter.mygeodata.eu/#convertVector">Free on-line GIS data format and coordinates converter</a></li>
</ul>


<p>手順は、</p>

<ol>
<li>上記サイトへ行き、「Run vector converter」を押す。</li>
<li>「ファイルを選択」で、さっきダウンロードした ZIP ファイルを指定し、「Send ZIP File」を押す。</li>
<li>&#8220;Datasets description&#8221; というページになったら、その最下部にある「Chack available operations」を押す。(ここでは、不要なデータ項目を除外できるのだけど、面倒なので割愛)</li>
<li>”Export to format:” で &#8220;GeoJSON&#8221; を選択。それ以外はそのままで「Proceed selected operation」を押す。</li>
<li>しばらく待つと、「Download the ZIP file」リンクが表れるので、押して変換結果をダウンロードする。</li>
</ol>


<p>ダウンロードした ZIP ファイルを解凍すると、「xxx.json」ファイルが見つかります。それをテキストエディタで開くと、<code>features</code> 以下に、住所エリアの情報が1行ずつ出力されています。</p>

<p>試しに1行取り出して、JSON を整形（見やすいよう適宜省略）してみると次のようになります。</p>

<figure class='code'><figcaption><span>town.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;type&quot;</span><span class="o">:</span> <span class="s2">&quot;Feature&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;properties&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;KEN_NAME&quot;</span><span class="o">:</span> <span class="s2">&quot;愛知県&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;GST_NAME&quot;</span><span class="o">:</span> <span class="s2">&quot;名古屋市&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;CSS_NAME&quot;</span><span class="o">:</span> <span class="s2">&quot;中区&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;MOJI&quot;</span><span class="o">:</span> <span class="s2">&quot;本丸&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="err">…省略…</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s2">&quot;geometry&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;type&quot;</span><span class="o">:</span> <span class="s2">&quot;Polygon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;coordinates&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">[[</span><span class="mf">136.895888</span><span class="p">,</span> <span class="mf">35.187236</span><span class="p">],</span>
</span><span class='line'>             <span class="p">[</span><span class="mf">136.897375</span><span class="p">,</span> <span class="mf">35.187357</span><span class="p">],</span>
</span><span class='line'>              <span class="err">…中略…</span>
</span><span class='line'>             <span class="p">[</span><span class="mf">136.895888</span><span class="p">,</span> <span class="mf">35.187236</span><span class="p">]]</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは「愛知県名古屋市中区本丸」のデータですね。
<code>properties</code> 以下は、この住所エリアの属性情報を示しています。
<code>geometry</code> 以下が、この住所エリアの位置情報（ポリゴン）を示しています。</p>

<h2>3. Elasticsearch にスキーマを定義する</h2>

<p>Elasticseach はスキーマフリーですが、位置情報のところだけは明示的に宣言しないといけないらしいので、下のようなコマンドを実行して定義します。</p>

<p>あ、ここでは、</p>

<ul>
<li>Index名 : towns</li>
<li>Type名 : town</li>
</ul>


<p>としています。</p>

<p>「Index や Type って何？」という方は</p>

<ul>
<li><a href="http://qiita.com/ise_daisuke/items/5e10e0b3ef9dffed08a9">Elasticsearch用語の適当なまとめ</a></li>
</ul>


<p>をどうぞ。</p>

<p>ではコマンドです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/towns/&#39;</span>
</span><span class='line'>
</span><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/towns/town/_mapping&#39;</span> -d <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">    &quot;town&quot; : {</span>
</span><span class='line'><span class="s1">        &quot;properties&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;geometry&quot;: {</span>
</span><span class='line'><span class="s1">                &quot;type&quot;: &quot;geo_shape&quot;, </span>
</span><span class='line'><span class="s1">                &quot;tree&quot;: &quot;quadtree&quot;,</span>
</span><span class='line'><span class="s1">                &quot;precision&quot;: &quot;1m&quot;</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>properties.geometry</code> は、「geo_shape」 として扱う事を宣言しています。他の２つの設定は、インデックスの種類と精度を意味しますが、よく分かってません。</p>

<ul>
<li><a href="http://www.elasticsearch.org/guide/reference/mapping/geo-shape-type/">Geo Shape Type | Reference Guide | Elasticsearch</a></li>
</ul>


<p>で勉強しましょう。</p>

<h2>4. データを Elasticsearch に投入する</h2>

<p>さて、いよいよこの「1行1JSON」のデータを、1行ずつ、Elasticsearch に投入します。
先の xxxx.json を置換なり何なりを駆使して、スクリプトにしちゃうのがてっとり早いでしょう。(json ファイルは Shift-jis なので、UTF-8 に変換しておきましょう。）</p>

<p>1行のデータを投入するコマンドは次のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/towns/town/1&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;type&quot;: &quot;Feature&quot;,</span>
</span><span class='line'><span class="s1">    &quot;properties&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;KEN_NAME&quot;: &quot;愛知県&quot;, </span>
</span><span class='line'><span class="s1">        &quot;GST_NAME&quot;: &quot;名古屋市&quot;, </span>
</span><span class='line'><span class="s1">        &quot;CSS_NAME&quot;: &quot;中区&quot;, </span>
</span><span class='line'><span class="s1">        &quot;MOJI&quot;: &quot;本丸&quot;, </span>
</span><span class='line'><span class="s1">        …省略…</span>
</span><span class='line'><span class="s1">    }, </span>
</span><span class='line'><span class="s1">    &quot;geometry&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;Polygon&quot;,</span>
</span><span class='line'><span class="s1">        &quot;coordinates&quot;: [</span>
</span><span class='line'><span class="s1">            [[136.895888, 35.187236], </span>
</span><span class='line'><span class="s1">             [136.897375, 35.187357], </span>
</span><span class='line'><span class="s1">              …中略… </span>
</span><span class='line'><span class="s1">             [136.895888, 35.187236]]</span>
</span><span class='line'><span class="s1">        ]</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>towns/town/1</code> の最後の「1」のところは、連番にする必要があります。(オートインクリメントとかないのかな？)</p>

<p>全件を PUT すつスクリプトファイルは、下の画像のような感じになると思います。(データのライセンスがどうか分からないのでスクリプトファイル自体を公開するのはやめておきます)</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/implementing_reverse_geocoding_using_elasticsearch_02.png" alt="img" /></p>

<p>これをTerminal で実行すると、数分かからずに Elasticsearch にデータが投入完了します。</p>

<p><code>curl -XGET 'http://localhost:9200/towns/town/1'</code> などを実行すれば、正しくデータが登録できたか確認できます。</p>

<h2>5. 検索してみる</h2>

<p>ついに来ました。
では、緯度経度を与えて住所が返ってくるところ、やってみましょう。</p>

<p>Elasticsearch では検索クエリも JSON で書きます。</p>

<p>例えば、<a href="http://yahoo.jp/zsXYL2">大須観音駅</a> らへんの緯度経度(35.1613077,136.898282)の住所で検索する場合は、次のようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST <span class="s1">&#39;http://localhost:9200/towns/town/_search&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;query&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;match_all&quot; : {}</span>
</span><span class='line'><span class="s1">            },</span>
</span><span class='line'><span class="s1">            &quot;filter&quot; : {</span>
</span><span class='line'><span class="s1">                 &quot;geo_shape&quot;: {</span>
</span><span class='line'><span class="s1">                    &quot;town.geometry&quot;: {</span>
</span><span class='line'><span class="s1">                        &quot;shape&quot;: {</span>
</span><span class='line'><span class="s1">                            &quot;type&quot; : &quot;envelope&quot;,</span>
</span><span class='line'><span class="s1">                            &quot;coordinates&quot; : [[136.898282, 35.1613077], [136.898282, 35.1613077]]</span>
</span><span class='line'><span class="s1">                        }</span>
</span><span class='line'><span class="s1">                    }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>geo_shape</code> フィルタを使い、条件に envelople(左上〜右下の領域) を指定します。今は「点」での検索をしたいので、左上、右下に同じ座標を指定します。
注意点は、 <strong>「経度, 緯度」</strong> の順であることです。</p>

<p>※ <a href="http://www.elasticsearch.org/guide/reference/query-dsl/geo-distance-filter/"><code>geo_distance</code></a> というフィルタもありますが、こちらはデータが「点」専用なようで、今回のような「ポリゴン」には使えませんでした。</p>

<p>さて、上のコマンドを実行すると、下のような結果が得られます。(整形、省略済)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span>:1,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span>:false,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span>:<span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span>:5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span>:5,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span>:0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span>:<span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span>:1,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span>:1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span>:<span class="o">[{</span>
</span><span class='line'>      <span class="s2">&quot;_index&quot;</span>:<span class="s2">&quot;towns&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_type&quot;</span>:<span class="s2">&quot;town&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;29&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_score&quot;</span>:1.0,
</span><span class='line'>      <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;Feature&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;properties&quot;</span>: <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;KEN_NAME&quot;</span>: <span class="s2">&quot;愛知県&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;GST_NAME&quot;</span>: <span class="s2">&quot;名古屋市&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;CSS_NAME&quot;</span>: <span class="s2">&quot;中区&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;MOJI&quot;</span>: <span class="s2">&quot;大須２丁目&quot;</span>,
</span><span class='line'>          …以下省略…
</span></code></pre></td></tr></table></div></figure>


<p>はい、「緯度経度(35.1613077,136.898282)」の住所は「愛知県名古屋市中区大須２丁目」であることが取得できました。</p>

<h2>まとめ</h2>

<p>いかがでしょうか、Elasticsearch でも逆ジオコーディングの実装が、簡単にできることが分かりました。</p>

<p>PostGIS、MongoDB との対比では、</p>

<ul>
<li>セットアップが簡単</li>
<li>REST API なので直接他のサービスとマッシュアップできる</li>
</ul>


<p>あたりがメリットでしょうか。</p>

<p>逆にデータの取り込みはひと工夫必要で、PostGIS の方が簡単です。
このデータ用の River plugin を作ればよいのでしょうが、方法がさっぱり…。</p>

<p>最後に、</p>

<p><a href="http://qiita.com/hamichamp/items/ac9e80f1078febb9f1b9">総務省のデータを使って、緯度経度から市区町村の何丁目までを取り出す</a></p>

<blockquote><p>実は、データをダウンロードするのが、一番手間がかかります・・・。</p></blockquote>

<p>でも言われていますが、まったくその通りです。
１市区町村ずつダウンロードとか正直やってられません。</p>

<p>総務省でも国土交通省でもどちらでも良いのですが、
<strong>「全国の大字境界＋属性データを一括入手する方法」</strong> を用意して欲しいものです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch で位置情報を検索する手順]]></title>
    <link href="http://amay077.github.io/blog/2013/09/09/using-spatialdata-with-elasticsearch/"/>
    <updated>2013-09-09T21:08:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/09/using-spatialdata-with-elasticsearch</id>
    <content type="html"><![CDATA[<p>Elasticsearch は、オープンソースの全文検索エンジンです。Apache Solr と並んでよく取り上げられるようになってきました。</p>

<p>位置情報の検索機能も標準搭載しているとのことで、試しに使ってみました。</p>

<!--more-->


<h2>Elasticsearch の導入</h2>

<p>下の情報が大変参考になりました。(環境は Mac。事前に Java と homebrew の導入が必要です）</p>

<ul>
<li><a href="http://qiita.com/Konboi@github/items/56f0aaca77db5df027af">elasticsearch - ElasitcSearch ことはじめ - Qiita [キータ]</a></li>
</ul>


<h2>試しに使ってみる</h2>

<p>下のサイトが大変参考なりました。</p>

<ul>
<li><a href="http://inokara.hateblo.jp/entry/2013/09/07/153826">Elasticsearch を試してみる - ようへいの日々精進</a></li>
</ul>


<h2>位置情報を検索してみる</h2>

<p>下のようなスキーマのデータを登録して検索する想定です。</p>

<figure class='code'><figcaption><span>venue_example.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;Tokyo St&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;pin&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;location&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;lat&quot;</span> <span class="o">:</span> <span class="mf">35.68</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;lon&quot;</span> <span class="o">:</span> <span class="mf">139.76</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>1. スキーマを登録する</h3>

<p>Elasticsearch は基本的にはスキーマレスで動くのですが、位置情報を表す項目は、明確にスキーマを定義する必要があるようです。</p>

<p>データ投入の前にそれを行います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/myvenues/&#39;</span>
</span><span class='line'>
</span><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/myvenues/venue/_mapping&#39;</span> -d <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">    &quot;venue&quot; : {</span>
</span><span class='line'><span class="s1">        &quot;properties&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;pin&quot; : { &quot;type&quot; : &quot;geo_point&quot; }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでは、<code>venue</code> のプロパティ群の内の <code>pin</code> 項目は、位置情報(geo_point)だよ、と定義しています。</p>

<h3>2. データを投入する</h3>

<p>2件ほど、テストデータを投入します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/myvenues/venue/1&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;name&quot; : &quot;Tokyo St&quot;,</span>
</span><span class='line'><span class="s1">    &quot;tag&quot; : [&quot;station&quot;, &quot;train&quot;],</span>
</span><span class='line'><span class="s1">    &quot;pin&quot; : {</span>
</span><span class='line'><span class="s1">        &quot;location&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;lat&quot; : 35.68,</span>
</span><span class='line'><span class="s1">            &quot;lon&quot; : 139.76</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span><span class='line'>
</span><span class='line'>curl -XPUT <span class="s1">&#39;http://localhost:9200/myvenues/venue/2&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;name&quot; : &quot;Nagoya St&quot;,</span>
</span><span class='line'><span class="s1">    &quot;tag&quot; : [&quot;station&quot;, &quot;train&quot;],</span>
</span><span class='line'><span class="s1">    &quot;pin&quot; : {</span>
</span><span class='line'><span class="s1">        &quot;location&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;lat&quot; : 35.17,</span>
</span><span class='line'><span class="s1">            &quot;lon&quot; : 136.88</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. 位置情報で検索する</h3>

<h4>位置＋距離</h4>

<p>緯度/経度:35.6/139.8 から 20km 周囲にあるデータを検索します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST <span class="s1">&#39;http://localhost:9200/myvenues/venue/_search&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;query&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;match_all&quot; : {}</span>
</span><span class='line'><span class="s1">            },</span>
</span><span class='line'><span class="s1">            &quot;filter&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;geo_distance&quot; : {</span>
</span><span class='line'><span class="s1">                    &quot;distance&quot; : &quot;20km&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;venue.pin&quot; : {</span>
</span><span class='line'><span class="s1">                        &quot;lat&quot; : 35.6,</span>
</span><span class='line'><span class="s1">                        &quot;lon&quot; : 139.8</span>
</span><span class='line'><span class="s1">                    }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>結果</h5>

<p>Tokyo St だけがヒットしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span><span class="s2">&quot;took&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;timed_out&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="s2">&quot;_shards&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;successful&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;failed&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;max_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">[{</span><span class="s2">&quot;_index&quot;</span><span class="o">:</span><span class="s2">&quot;myvenues&quot;</span><span class="p">,</span><span class="s2">&quot;_type&quot;</span><span class="o">:</span><span class="s2">&quot;venue&quot;</span><span class="p">,</span><span class="s2">&quot;_id&quot;</span><span class="o">:</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span> <span class="s2">&quot;_source&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;Tokyo St&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;pin&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;location&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;lat&quot;</span> <span class="o">:</span> <span class="mf">35.68</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;lon&quot;</span> <span class="o">:</span> <span class="mf">139.76</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}}]}}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>範囲(矩形)</h4>

<p>左上:35.2/136.8 〜 右下:35.1/136.9 にあるデータを検索します。緯度は上(北)の方が値が大きくなるので、上下関係に注意が必要です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST <span class="s1">&#39;http://localhost:9200/myvenues/venue/_search&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;query&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;match_all&quot; : {}</span>
</span><span class='line'><span class="s1">            },</span>
</span><span class='line'><span class="s1">            &quot;filter&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;geo_bounding_box&quot; : {</span>
</span><span class='line'><span class="s1">                 &quot;venue.pin&quot; : {</span>
</span><span class='line'><span class="s1">                     &quot;top_left&quot; : {</span>
</span><span class='line'><span class="s1">                         &quot;lat&quot; : 35.2,</span>
</span><span class='line'><span class="s1">                         &quot;lon&quot; : 136.8</span>
</span><span class='line'><span class="s1">                     },</span>
</span><span class='line'><span class="s1">                     &quot;bottom_right&quot; : {</span>
</span><span class='line'><span class="s1">                         &quot;lat&quot; : 35.1,</span>
</span><span class='line'><span class="s1">                         &quot;lon&quot; : 136.9</span>
</span><span class='line'><span class="s1">                     }</span>
</span><span class='line'><span class="s1">                 }</span>
</span><span class='line'><span class="s1">             }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>結果</h5>

<p>Nagoya St だけがヒットしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span><span class="s2">&quot;took&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;timed_out&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="s2">&quot;_shards&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;successful&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;failed&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;max_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">[{</span><span class="s2">&quot;_index&quot;</span><span class="o">:</span><span class="s2">&quot;myvenues&quot;</span><span class="p">,</span><span class="s2">&quot;_type&quot;</span><span class="o">:</span><span class="s2">&quot;venue&quot;</span><span class="p">,</span><span class="s2">&quot;_id&quot;</span><span class="o">:</span><span class="s2">&quot;2&quot;</span><span class="p">,</span><span class="s2">&quot;_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span> <span class="s2">&quot;_source&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;Nagoya St&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;pin&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;location&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;lat&quot;</span> <span class="o">:</span> <span class="mf">35.17</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;lon&quot;</span> <span class="o">:</span> <span class="mf">136.88</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}}]}}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>範囲(多角形)</h4>

<p>任意の多角形領域にあるデータを検索します。</p>

<p>ここでは GeoJSON 互換の記述方式で書いてます。経度が先なので注意。
今までのような lat: lon: の配列でもかけますが、 GeoJSON 便利なので。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST <span class="s1">&#39;http://localhost:9200/myvenues/venue/_search&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;query&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;match_all&quot; : {}</span>
</span><span class='line'><span class="s1">            },</span>
</span><span class='line'><span class="s1">            &quot;filter&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;geo_polygon&quot; : {</span>
</span><span class='line'><span class="s1">                 &quot;venue.pin&quot; : {</span>
</span><span class='line'><span class="s1">                     &quot;points&quot; : [</span>
</span><span class='line'><span class="s1">                         [139.7, 35.7],  // 経度が先！</span>
</span><span class='line'><span class="s1">                         [139.8, 35.7],</span>
</span><span class='line'><span class="s1">                         [139.8, 35.6],</span>
</span><span class='line'><span class="s1">                         [139.7, 35.6],</span>
</span><span class='line'><span class="s1">                         [139.7, 35.7]</span>
</span><span class='line'><span class="s1">                     ]</span>
</span><span class='line'><span class="s1">                 }</span>
</span><span class='line'><span class="s1">             }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>結果</h5>

<p>Tokyo St だけがヒットしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span><span class="s2">&quot;took&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;timed_out&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="s2">&quot;_shards&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;successful&quot;</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="s2">&quot;failed&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;total&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;max_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span><span class="s2">&quot;hits&quot;</span><span class="o">:</span><span class="p">[{</span><span class="s2">&quot;_index&quot;</span><span class="o">:</span><span class="s2">&quot;myvenues&quot;</span><span class="p">,</span><span class="s2">&quot;_type&quot;</span><span class="o">:</span><span class="s2">&quot;venue&quot;</span><span class="p">,</span><span class="s2">&quot;_id&quot;</span><span class="o">:</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;_score&quot;</span><span class="o">:</span><span class="mf">1.0</span><span class="p">,</span> <span class="s2">&quot;_source&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;Tokyo St&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;pin&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;location&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;lat&quot;</span> <span class="o">:</span> <span class="mf">35.68</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;lon&quot;</span> <span class="o">:</span> <span class="mf">139.76</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}}]}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>(ポリゴンの座標群が、右回りじゃないとダメかな？と思って恐る恐る左回りにしてみたら、問題なく検索できました！)</p>

<h2>まとめ</h2>

<p>最初 <code>geo_point</code> を明示的に指定しないといけないのに気づかなくてしばらくハマりましたが、それ意外はすんなりと動きました。</p>

<p>機能を試しただけでパフォーマンスなどは計測できていませんが、なんか使えそうな気はします。</p>

<p>位置情報関係の情報を探したい時は、公式サイトの GUIDE</p>

<ul>
<li><a href="http://www.elasticsearch.org/guide/">Reference Guide | Elasticsearch</a></li>
</ul>


<p>の検索バーで 「geo」で検索すると、有用な情報が得られます。</p>

<h2>参考</h2>

<ul>
<li><a href="http://www.elasticsearch.org/">Open Source Distributed Real Time Search &amp; Analytics | Elasticsearch</a></li>
<li><a href="http://www.elasticsearch.org/blog/geo-location-and-search/">Geo Location And Search | Blog | Elasticsearch</a></li>
<li><a href="http://www.elasticsearchtutorial.com/spatial-search-tutorial.html">Spatial Search ElasticSearch tutorial - ElasticSearch Tutorial.com</a></li>
<li><a href="http://stackoverflow.com/questions/16113439/elasticsearch-geo-distance-filter-with-multiple-locations-in-array-possible">ElasticSearch geo distance filter with multiple locations in array - possible? - Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[スレッドの優先度について調べた]]></title>
    <link href="http://amay077.github.io/blog/2013/09/04/understanding-android-thread-priority/"/>
    <updated>2013-09-04T22:22:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/04/understanding-android-thread-priority</id>
    <content type="html"><![CDATA[<p>Android にも(Java ですから)スレッドの優先度ってありますけど、それちゃんと動きますよね？というのを ExecurorService を使って調べた。</p>

<!--more-->


<h2>ThreadFactory の拡張</h2>

<p><code>ExecutorService</code> が作るスレッドは、何もしないと 優先度:中 になる模様。
これを変更するには、生成時(<code>newSingleThreadExecutor</code>) に渡す <code>ThreadFactory</code> を自前で実装して、<code>Thread.setPriority</code> してやる。</p>

<p><code>ThreadFactory</code> を Implements したクラス作ってもいいけど、そこまでやる必要も無いでしょ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 指定した Priority の ThreadFactory を生成して返す</span>
</span><span class='line'><span class="kd">private</span> <span class="n">ThreadFactory</span> <span class="nf">makeThreadFactory</span><span class="o">(</span><span class="kd">final</span> <span class="kt">int</span> <span class="n">priority</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">ThreadFactory</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">Thread</span> <span class="nf">newThread</span><span class="o">(</span><span class="n">Runnable</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Thread</span> <span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="n">r</span><span class="o">);</span>
</span><span class='line'>            <span class="n">thread</span><span class="o">.</span><span class="na">setPriority</span><span class="o">(</span><span class="n">priority</span><span class="o">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">thread</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使ってみる</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">testExecutor</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">ExecutorService</span> <span class="n">executor</span> <span class="o">=</span>
</span><span class='line'>        <span class="n">Executors</span><span class="o">.</span><span class="na">newSingleThreadExecutor</span><span class="o">(</span><span class="n">makeThreadFactory</span><span class="o">(</span><span class="n">Thread</span><span class="o">.</span><span class="na">MIN_PRIORITY</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">executor</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// なにかの処理</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>優先度が考慮されるかの検証</h2>

<p>設定した Priority が正しく機能するのか試してみた。</p>

<h3>検証方法</h3>

<ul>
<li>MIN, NORMAL, MAX の優先度を設定をした、SingleThread な Executor を1つずつ、計３つ生成。</li>
<li>３つの Executor に、タスクをじゃんじゃん投入(submit)する。</li>
<li>タスクの処理が開始された所をログ出力して、その順番を調べる。</li>
</ul>


<h3>検証コード</h3>

<p>上を実装したのがこれ。<code>CountDownLatch</code> で待ち合わせするのがなんだかなぁって感じだがまあいいや。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">ThreadFactory</span> <span class="nf">makeThreadFactory</span><span class="o">(</span><span class="kd">final</span> <span class="kt">int</span> <span class="n">priority</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// 上と同じなので省略</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// タスクを生成する</span>
</span><span class='line'><span class="kd">private</span> <span class="n">Runnable</span> <span class="nf">makeTask</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="kd">final</span> <span class="n">StringBuffer</span> <span class="n">buffer</span><span class="o">,</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">CountDownLatch</span> <span class="n">latch</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// タスクが開始された時に、A or B or C を追加してく</span>
</span><span class='line'>            <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tag</span><span class="o">);</span> <span class="c1">// StringBuffer は Thread-safe なハズだ</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Wait</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">1000000</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">latch</span><span class="o">.</span><span class="na">countDown</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 検証実行</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testThreadPriority</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// MIN, NORMAL, MAX な Priority の Executor を生成</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">ExecutorService</span> <span class="n">minExecutor</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">Executors</span><span class="o">.</span><span class="na">newSingleThreadExecutor</span><span class="o">(</span><span class="n">makeThreadFactory</span><span class="o">(</span><span class="n">Thread</span><span class="o">.</span><span class="na">MIN_PRIORITY</span><span class="o">));</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">ExecutorService</span> <span class="n">norExecutor</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">Executors</span><span class="o">.</span><span class="na">newSingleThreadExecutor</span><span class="o">(</span><span class="n">makeThreadFactory</span><span class="o">(</span><span class="n">Thread</span><span class="o">.</span><span class="na">NORM_PRIORITY</span><span class="o">));</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">ExecutorService</span> <span class="n">maxExecutor</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">Executors</span><span class="o">.</span><span class="na">newSingleThreadExecutor</span><span class="o">(</span><span class="n">makeThreadFactory</span><span class="o">(</span><span class="n">Thread</span><span class="o">.</span><span class="na">MAX_PRIORITY</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="n">CountDownLatch</span> <span class="n">latch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CountDownLatch</span><span class="o">(</span><span class="mi">100</span> <span class="o">*</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">StringBuffer</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// それぞれの Executor にじゃんじゃんタスクを投入</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">minExecutor</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="n">makeTask</span><span class="o">(</span><span class="s">&quot;C&quot;</span><span class="o">,</span> <span class="n">builder</span><span class="o">,</span> <span class="n">latch</span><span class="o">));</span> <span class="c1">// MIN-&gt;&quot;C&quot;</span>
</span><span class='line'>        <span class="n">norExecutor</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="n">makeTask</span><span class="o">(</span><span class="s">&quot;B&quot;</span><span class="o">,</span> <span class="n">builder</span><span class="o">,</span> <span class="n">latch</span><span class="o">));</span> <span class="c1">// NORMAL-&gt;&quot;B&quot;</span>
</span><span class='line'>        <span class="n">maxExecutor</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="n">makeTask</span><span class="o">(</span><span class="s">&quot;A&quot;</span><span class="o">,</span> <span class="n">builder</span><span class="o">,</span> <span class="n">latch</span><span class="o">));</span> <span class="c1">// MAX-&gt;&quot;A&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 全部のタスクが終わるのを待つ</span>
</span><span class='line'>    <span class="n">latch</span><span class="o">.</span><span class="na">await</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span> <span class="c1">// タスクが処理された順番を出力</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>検証結果(HTC J)</h3>

<h4>1回目</h4>

<blockquote><p>BAACAAABABABABABABABABABABABABABABABABACACACACBAABABABABABAB
ABABABABABABACBAABABABABABABABAABBABABABABABAABABABABABABABA
BABABABAABABABABABABABABABABABAABABABABABABABABABABABABABABA
BABABABABABABABCBBBBCBBCBCBBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</p></blockquote>

<h4>2回目</h4>

<blockquote><p>CBACABAABABABABABABAABABABABABABABABABACBABABABAABABBABABABA
ABABABABABABABABABABABABABABABABABABABABABABABABABABAABABABA
BABABABABBABAABABABABABABABABABABABABABABABABABCABABABABABAB
ABABABABABABAABABABBCBCBBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</p></blockquote>

<h4>3回目</h4>

<blockquote><p>BAACAABABABAABABABABABABABABABABABABABABABABABABABABABABABAB
ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB
ABABABABABABABABABABABABABACBABABABABABABABABABABABABABABABA
BABABABAABABABABABCBBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</p></blockquote>

<p>&#8220;C&#8221;(優先度:MIN) のタスクが後ろの方に追いやられているのが分かる。
&#8220;A&#8221;(MAX) と &#8220;B&#8221;(NORMAL) の差ははっきりとはわからないが、それでも &#8220;A&#8221; の方が先に全部終わっているので優先されているのがなんとか分かる。</p>

<h2>まとめ</h2>

<p>優先度の変更、ちゃんと効果あるんですね。</p>

<p>よく調べると Android には <code>android.os.Process.setThreadPriority()</code> というのもあるそうで。</p>

<ul>
<li><a href="http://mikanbako.blog.shinobi.jp/android/android.os.process.setthreadpriority--%E3%81%A8java.lang.thread.setpriority--%E3%81%AE%E5%8A%B9%E6%9E%9C%E3%81%AF%E5%90%8C%E3%81%98">android.os.Process.setThreadPriority()とjava.lang.Thread.setPriority()の効果は同じ - みかん箱</a></li>
</ul>


<blockquote><p>結果、両者の効果は同じです。ただし、android.os.Processではスレッドの優先度が用途ごとに定数として定義されているため、まずandroid.os.Process.setThreadPriority()の使用を検討すべきでしょう。</p></blockquote>

<p>とのこと。確かに <code>THREAD_PRIORITY_FOREGROUND</code>, <code>THREAD_PRIORITY_AUDIO</code>, <code>THREAD_PRIORITY_LOWEST</code> などが定義されているので、こちらを使った方が良さげですね。
個人的には、Java の API でできる事はその範囲で閉じてしまいたいのですがね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.iOS + iOS Simulator で Instruments を使う]]></title>
    <link href="http://amay077.github.io/blog/2013/09/03/using-instruments-with-xamarin-ios/"/>
    <updated>2013-09-03T21:29:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/03/using-instruments-with-xamarin-ios</id>
    <content type="html"><![CDATA[<p>Xamarin.iOS(旧MonoTouch)では、Xcode のプロファイラである Instruments がそのまま使えます。</p>

<!--more-->


<h2>デモプロジェクト</h2>

<ul>
<li><a href="http://docs.xamarin.com/guides/ios/deployment%2C_testing%2C_and_metrics/instruments_walkthrough">Instruments Walkthrough | xamarin</a></li>
</ul>


<p>にある <code>MemoryDemo.zip</code> をダウンロード、解凍します。2つプロジェクトが含まれていますが、 <code>before</code> を使います。</p>

<h2>手順</h2>

<h3>1. プロジェクトをとりあえず実行</h3>

<p>Xamarin Studio で <code>before/MemoryDemo.sln</code> を開いて、とりあえずビルド、Simulator で実行します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_01.png" alt="img" /></p>

<p>上下にスクロールすると、次々と画像を読み込むので Allocate がハンパないよ、ってデモのようです。</p>

<h3>2. Xamarin Studio から Instruments を起動する。</h3>

<p>メニュー - ツール - Launch Instruments で起動します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_02.png" alt="img" /></p>

<p>起動はしましたが、勝手にアプリが実行されるわけではありません。ここから少しだけ面倒な手続きが必要です。</p>

<h3>3. iOS Simulator にインストールしたアプリを指定して Instruments を実行する</h3>

<p>Instruments を起動すると、下のような画面になっています。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_03.png" alt="img" /></p>

<p>左メニューから [iOS Simulator] - [Memory]、右から [Allocations] を選び [Choose] ボタンを押します。</p>

<p>次に、[Target] をクリックして、[Choose Target] - [Choose Target…] と進みます。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_04.png" alt="img" /></p>

<p>下のような画面になります。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_05.png" alt="img" /></p>

<p>次に Finder を起動して、iOS Simulator のディレクトリへ移動します。</p>

<p>iOS Simulator のディレクトリは通常、<code>~/Library/Application Support/iPhone Simulator/</code> です。さらにアプリ毎に GUID で分けられているので目的のアプリを探してください。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_06.png" alt="img" /></p>

<p>アプリのディレクトリを開いたら、その中のアプリケーションファイル(ここでは <code>MemoryDemo</code>) を、先ほど開いておいた Instruments の中へドラッグ＆ドロップします。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_07.png" alt="img" /></p>

<p>そして [Choose] を押すと、Target が MemoryTest になっているのが分かります。</p>

<p>これでようやく実行できます。赤い●を押します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_08.png" alt="img" /></p>

<p>と、iOS Simulator で MemoryTest が実行され、Instruments でプロファイルしている事が確認できます。Simulator でグリグリスクロールすると、Allocations がガンガン増えてく様子が分かります。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/using_instruments_with_xamarin_ios_09.png" alt="img" /></p>

<h3>3. 2度目以降は？</h3>

<p>Instruments でもう一度赤い●を押すと停止します。アプリを更新する時は、Xamarin Studio 側でビルド-実行して iOS Simulator のアプリファイルを更新してから、Instruments で再度、赤い●を押します。</p>

<p>もし Instruments を終了してしまっても、最近使ったアプリは Choose Target に最近使ったアプリとして残るので、またドラッグ＆ドロップすることはありません。</p>

<h2>まとめと参考</h2>

<p>Xamarin.iOS+iOS Simulator での Instruments の導入部分を説明しました。</p>

<p>下に紹介するサイトが公式の情報です。
ここには、実機にインストールしたアプリのプロファイル方法や、Instruments の使い方などが説明されているので合わせてどうぞ。</p>

<ul>
<li><a href="http://docs.xamarin.com/guides/ios/deployment%2C_testing%2C_and_metrics/using_instruments_to_detect_native_leaks_using_markheap">Profiling Xamarin.iOS Applications with Instruments | xamarin</a></li>
<li><a href="http://docs.xamarin.com/guides/ios/deployment%2C_testing%2C_and_metrics/instruments_walkthrough">Instruments Walkthrough | xamarin</a></li>
<li><a href="https://developer.apple.com/library/ios/recipes/instruments_help-launch-into-simulator-help/LaunchIntoSimulator.html">iOS Simulator Help: Setting Instruments to Launch an iOS App in Simulator</a></li>
</ul>


<p>※ <a href="http://docs.xamarin.com/guides/ios/deployment%2C_testing%2C_and_metrics/instruments_walkthrough">Instruments Walkthrough</a> の No.14 の <a href="http://docs.xamarin.com/static/guides/ios/deployment,_testing,_and_metrics/instruments_walkthrough/Images/05_related_code.png">この画像</a> には、Instruments に Xamarin.iOS(C#) のソースコードが表示されているように見えるんだけど、これどうやるのかなあ。。手順通り動かしたつもりが出てこない。。。SourceMap の設定みたいなのが要るのかなあ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ARC のメモリ解放タイミングを調べた]]></title>
    <link href="http://amay077.github.io/blog/2013/09/02/when-release-memory-by-arc/"/>
    <updated>2013-09-02T21:55:00+09:00</updated>
    <id>http://amay077.github.io/blog/2013/09/02/when-release-memory-by-arc</id>
    <content type="html"><![CDATA[<p>一つの関数内で容量の大きなファイルを読み込み加工する処理を連続して行っていたらメモリが足りなくなった。</p>

<!--more-->


<p>ARC ではスコープを外れ(て参照カウンタがゼロになっ)たオブジェクトは、すぐに破棄されると思っていたのでしばらくハマった。</p>

<h2>問題のソース(ARC使用)</h2>

<p>ローカルでもWebでも何でもいいけど、ファイルから無視できない程度の容量のデータの読み込みを繰り返す処理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonDownWithArc:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span><span class="o">*</span> <span class="n">path</span> <span class="o">=</span> <span class="s">@&quot;.../bigdata.img&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSData</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="n">path</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">NSThread</span> <span class="nl">sleepForTimeInterval:</span><span class="mf">0.5</span><span class="p">];</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを Instruments でプロファイルするとこうなる。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/arc_memory_release_timing_01.png" alt="img" /></p>

<p>じゃんじゃんメモリ確保してしまう（汗
ARC で <code>data</code> は <code>nil</code> にしてるからスコープ外れた時にメモリ解放されると思っていたのだが。</p>

<p>ちなみにこの関数の処理が終了すると、メモリが解放される。</p>

<h2>非ARC でやってみた</h2>

<p>メモリ管理をマニュアルでやったらどうなるかを確認した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonDownNoArc:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span><span class="o">*</span> <span class="n">path</span> <span class="o">=</span> <span class="s">@&quot;.../bigdata.img&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSData</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="n">path</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">NSThread</span> <span class="nl">sleepForTimeInterval:</span><span class="mf">0.5</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">data</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>この時のメモリ確保状況は、期待した通りになった。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/arc_memory_release_timing_02.png" alt="img" /></p>

<p>メモリ使用量が線形に<strong>増えない</strong>ことが分かる。ARC 利用時にもこうなるようにしたい。</p>

<p>状況は、スコープ内変数の破棄が、関数を抜ける時に遅延されている。
ARC 周りの情報をいろいろ漁っていて、AutoReleasePool との関わりが怪しいと予想した。</p>

<ul>
<li><a href="http://blog.natsuapps.com/2011/11/ios5-arc-overview.html">[iOS5] ARC (Automatic Reference Counting) : Overview - iOS 開発ブログ Natsu&#8217;s note </a></li>
</ul>


<p>より引用：</p>

<blockquote><h3>retain, release, autorelease, deallocはコンパイラのお仕事</h3>

<p>ARCを利用する場合、コンパイラが</p>

<ul>
<li>retain, release, autoreleaseを挿入してくれる（自分で呼んではいけない。コンパイラエラーになる）。</li>
<li>deallocを適切な位置に挿入してくれる（deallocのオーバーライドは可能。ただし[super dealloc]は不可能）。</li>
</ul>


<p>ことになります。</p></blockquote>

<p>コンパイラにより関数単位で <code>@autoreleasepool {  }</code> が挿入されているとしたら、最初の図のような動きになるはず。ということは、for ループの中に @autorelease を持ってったらどうか？</p>

<h2>ARC + @autoreleasepool 版</h2>

<p>for の中の処理を <code>@autoreleasepool { }</code> で括ってみた。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonDownWithArcAndAutoRelease:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="err">@</span><span class="n">autoreleasepool</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSData</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="n">_path</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">NSThread</span> <span class="nl">sleepForTimeInterval:</span><span class="mf">0.5</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると、</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/arc_memory_release_timing_03.png" alt="img" /></p>

<p>やたー、期待する動きになったぞ。</p>

<h2>まとめ</h2>

<p>とここまで調べて、しばらく Obj-C さわってなかったので埃をかぶっていた</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4844331094?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4844331094&amp;linkCode=shr&amp;tag=oku2008-22">エキスパートObjective-Cプログラミング -iOS/OS Xのメモリ管理とマルチスレッド-</a></li>
</ul>


<p>を引っ張り出してきて読んだら、P.25 にまさにその事が書かれていて泣いた。</p>

<blockquote><p>とはいえ、autorelease されたオブジェクトが大量に発生した場合、NSAutoReleasePool のオブジェクトが破棄されない限り、それらのオブジェクトは release されないので、メモリ不足に陥る場合があります。典型的な例は、大量の画像をリサイズしながら読み込む場合でしょう。…</p>

<pre><code>   for (int i = 0; i &lt; 画像数; i++) {
       /*
        * 画像読み込み処理
        * autoreleaseされたオブジェクトが大量発生。
        * NSAutoReleasePoolのオブジェクトが破棄されないため
        * いずれメモリ不足発生！
        */           
   }
</code></pre></blockquote>

<p>勉強しなおします。。。</p>
]]></content>
  </entry>
  
</feed>
