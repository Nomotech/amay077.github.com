<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Experiments Never Fail]]></title>
  <link href="http://blog.amay077.net/atom.xml" rel="self"/>
  <link href="http://blog.amay077.net/"/>
  <updated>2016-10-25T02:59:43+09:00</updated>
  <id>http://blog.amay077.net/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DroidKaigi2017 に Xamarin ネタでトーク応募したよ]]></title>
    <link href="http://blog.amay077.net/blog/2016/10/25/submit-cfp-for-droidkaigi2017/"/>
    <updated>2016-10-25T02:42:51+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/10/25/submit-cfp-for-droidkaigi2017</id>
    <content type="html"><![CDATA[<p>神からの啓示がありまして、 <a href="https://droidkaigi.github.io/2017/">DroidKaigi2017</a> のトークに応募しました。</p>

<!--more-->


<p>昨年 DroidKaigi2016 を聞きにいきました。 Kotlin、Go Mobile のセッションがありました。</p>

<p>当時 Xamarin はまだプロプライエタリな有償の製品でした。今はほとんどオープンソースのプロダクトです。</p>

<p>これはワンチャンあるで！</p>

<p>応募内容は以下です。「○○界隈」いうのがあまり好きではないので、そういうのにこだわらない話をしたいと思っています。</p>

<hr />

<h2>Title</h2>

<p>Xamarin.Android で始めるクロスプラットフォームモバイルアプリ開発</p>

<h2>Abstract</h2>

<h3>対象者</h3>

<ul>
<li>Android中級者〜</li>
<li>C# 初心者〜</li>
</ul>


<h3>概要</h3>

<p>Xamarin（ざまりん）は C# によるクロスプラットフォームモバイルアプリ開発ツールです。
Microsoft が2016年4月に買収して、一気に知名度が上がりました。</p>

<p>このセッションでは、 Xamarin とは、Xamarin.Android とは何か、C# や .NET Framework(Mono) の強力な言語・ライブラリ機能について触れ、通常の Android アプリ開発と Xamarin を使ったアプリ開発はどこが違って、どこが同じなのかを説明します。</p>

<p>また、今日のモバイルアプリ開発では、DataBinding、MVVM、Reactive Extensions(Rx) といった、Microsoft が源流となっている手法が広まって来ています。
Xamarin を使うと、MVVMパターンと Rx を使用し、大部分のコードを共有できる Android/iOS 両対応アプリケーションを開発できます。如何にしてコードを共有するか、できない場合にどのような解決策が用意されているかについてお話します。</p>

<h3>目次（仮）</h3>

<h4>1. Xamarin とは？</h4>

<ul>
<li>Xamarin とは何か</li>
<li>Xamarin.Android とは何か</li>
<li>C# の利点(Java, Swift との比較)</li>
</ul>


<h4>2. クロスプラットフォームアプリ開発とコードの共有</h4>

<ul>
<li>MVVMパターン</li>
<li>Reactive Extensions / ReactiveProperty</li>
<li>Portable Class Library(PCL)によるコード共有</li>
<li>プラットフォーム固有の処理を行う方法</li>
</ul>


<h4>3. Open Xamarin、Open Microsoft</h4>

<ul>
<li>Xamarin で使えるライブラリ(C#, Java)</li>
<li>All Xamarin SDKs are open source</li>
<li>.NET Standard</li>
</ul>


<h4>4. Xamarin の使いどころ</h4>

<ul>
<li>採用すべきケースとしなくてよいケース</li>
</ul>


<h2>Topic</h2>

<p>開発環境・ツール (Productivity and Tooling)</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin を使わなくてもいい人たち]]></title>
    <link href="http://blog.amay077.net/blog/2016/10/18/who-dont-need-xamarin/"/>
    <updated>2016-10-18T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/10/18/who-dont-need-xamarin</id>
    <content type="html"><![CDATA[<p>「Xamarin はいいぞ」ばかり言ってる私ですが、Xamarin がハマらないケースも当然あるわけで。</p>

<!--more-->


<p>　いくつかピックアップしてみたいと思います。</p>

<h2>Android / iOS のスペシャリスト</h2>

<p>　Android または iOS、Java や Swift が大好きで最先端を突っ走ってる人。
あるいは、最新のOSの機能をガンガンアプリに取り入れていくプロダクト。</p>

<p>　彼(または彼女)達に「Xamarin 使えよ、C# 使えよ」って言っても彼らの楽しみを奪ってしまうのでしない方がいいし、SDK が新しくなったら即使いたいという欲求はネイティブでないと満たせないですよね。
　</p>

<h2>配布サイズを気にするプロダクト</h2>

<p>　Xamarin でアプリを作ると、Monoランタイムを同梱するため配布パッケージの容量がびっくりするくらい増えます。（Android の場合、HelloWorld でも 10MByte は切れないんじゃなかったかな？）
　プロダクトが、世界をターゲットにしていて、それに回線の細い新興国も含まれている場合、注意した方がよいと思います。
　</p>

<h2>ガワネイティブでいいやつ</h2>

<p>　Cordova, Monaca とかそういうの。例えばショッピングサイトのネイティブアプリだと、コンテンツの差し替えが激しいので HTML5 でモバイルWebサイトと共通化できたほうが運用の効率がよいです。
　</p>

<h2>宗教上の理由</h2>

<p>　マイクロソフトに親を殺された人は使わないでしょう。ただ、過去に何があったかは知らないですけど、今のマイクロソフトはあなたを殺しませんよ？</p>

<h2>　</h2>

<p>こんなもんかなあ。逆を言えば、上に当てはまらなければ Xamarin を選択しない理由はないわけで。</p>

<p>やっぱり、「Xamarin はいいぞ」</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JXUGC #17 お前の Xamarin アプリを見せてみろ！ で発表してきました]]></title>
    <link href="http://blog.amay077.net/blog/2016/10/16/gave-presentation-in-xamarin-jxugc-17/"/>
    <updated>2016-10-16T19:29:05+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/10/16/gave-presentation-in-xamarin-jxugc-17</id>
    <content type="html"><![CDATA[<p><a href="http://jxug.connpass.com/event/39470/">JXUGC #17 お前の Xamarin アプリを見せてみろ！ &ndash; connpass</a> に参加、登壇してきました。</p>

<!--more-->


<p><a href="https://developer.xamarin.com/guides/xamarin-forms/datapages/">Xamarin DataPages</a> をネタにしましたが、今回は本当に準備が不足してすいませんでした。何かをでっちあげることしかできませんでした。</p>

<p>他のみなさんのアプリや発表、完成度が高くて脱帽です。</p>

<p>一応、資料はこちら。</p>

<script async class="speakerdeck-embed" data-id="f7a39d6e6d5742a185231e1e4e1d8953" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>


<p>ソースもあります。(Xamarinのリポジトリから切り取ってきた DataPages 関連のプロジェクト付き)</p>

<ul>
<li><a href="https://github.com/amay077/MikawaMorningApp">amay077/MikawaMorningApp</a></li>
</ul>


<p>今回の参加は、たまには東京の人たちにも会いたいなーという動機、それから Xamarin.Forms.GoogleMaps の PR が目的でして。。。</p>

<p>DataPages にそこまで期待しているわけじゃないけど、標準機能でできることが少ないなら Xamarin.Forms.GoogleMaps みたく、Fork して機能拡張しちゃえばいいやと軽い気持ちでソースを除いてみたのですが、うーむ分からん。</p>

<p><code>Xamarin.Forms.Pages.DataPage</code> を継承したクラスに <code>ListDataPage</code> というものがあって、これは与えられたデータソースを元に一覧画面を生成してくれます。更に、行を選択すると詳細画面も表示してくれます。</p>

<p>ならば同じく <code>DataPage</code> を継承して <code>MapDataPage</code> を作ったら、一覧の代わりに地図にピン群が立つ画面を用意できるのでは？そんでピンをタップしたら詳細画面を表示できるのでは？と思ったのですが・・・。</p>

<p><code>MapDataPage</code> を用意することはできました。データソースを元に地図にピン群を立たせることはできました。</p>

<p>しかし、詳細ページを表示する方法が分かりませんでした。</p>

<p>もうちょっと詳しく言うと、<code>ListDataPage</code> で行を選択したときに <a href="https://github.com/amay077/MikawaMorningApp/blob/master/Xamarin.Forms.Pages/ListDataPage.cs#L46"><code>DataTemplate.CreateContent()</code></a> を呼び出していて、その返値が詳細画面となる <code>Page</code> なのですが、 この <code>DataTemplate</code> がよく分からない。</p>

<p><code>ListDataPage.DetailTemplateProperty</code> への設定はいつだれが行っている？ DataTemplate は Xamarin.Forms.Core のソースなので、ちゃんとデバッグ環境作ればトレースできたかもしれません（だから Xamarin.Forms.Themes は関係ないかも知れない）が、ちょっと時間なく。。。</p>

<p>この辺りの仕組みが分かれば、詳細画面で、</p>

<ul>
<li><a href="http:">http:</a> で始まる文字列には、ハイパーリンクを設定する</li>
<li>緯度経度だったら「地図」ボタンを表示する</li>
</ul>


<p>などのカスタマイズもできると思うので、引き続きソースおっかけてみたいと思います。</p>

<p>JXUG イベント多すぎだろ！と思いつつ、数回に１回は行きたいなーと思っているので、またよろしくおねがいします。</p>

<p>最後に、「喫茶店で朝￥500円以上払ったらそれはモーニングサービスとは言わない」これはガチ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVP アワードキットが届きました]]></title>
    <link href="http://blog.amay077.net/blog/2016/10/12/received-mvp-award-kit/"/>
    <updated>2016-10-12T02:08:57+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/10/12/received-mvp-award-kit</id>
    <content type="html"><![CDATA[<p>海の向こうから、「MVPアワードキット」が届きましたよっと。</p>

<!--more-->


<h3>箱！</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/received_mvp_award_kit_01.jpg" alt="" /></p>

<h3>中身！！</h3>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/received_mvp_award_kit_02.jpg" alt="" /></p>

<ul>
<li>盾</li>
<li>置物</li>
<li>メンバーカードみたいなやつ</li>
<li>ピンバッジ</li>
<li>説明書みたいなやつ</li>
</ul>


<p>です。</p>

<p>この他には書類とか MVP のステッカーとか。さっそく（会社の）MacBook Pro に貼ってやったぜぇー。</p>

<p>MVPのセンパイ方も、初めて受賞したときはこういう事したんだろうなーと思いながら自分もやってしまったｗ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めて Microsoft MVP になりました！]]></title>
    <link href="http://blog.amay077.net/blog/2016/10/02/become-microsoft-mvp-for-the-first-timme/"/>
    <updated>2016-10-02T17:40:18+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/10/02/become-microsoft-mvp-for-the-first-timme</id>
    <content type="html"><![CDATA[<h4>Microsoft から離れてモバイルアプリ開発者になったつもりが、いつの間にか <a href="https://mvp.microsoft.com/ja-jp/overview">Microsoft MVP</a> になっていた</h4>

<!--more-->


<p>何を言ってるのかわからねーと思うが、そういうことですｗ</p>

<p>元々 VB や VC で Windows のアプリケーション開発をしていましたが、転職を機に Android/iOS アプリ開発にクラスチェンジしたのは2011年頃の話です。</p>

<p>が、やっぱり C# が好きで、 <a href="http://qiita.com/search?q=+user%3Aamay077+tag%3Axamarin&amp;sort=stock">2013年から「Xamarin はいいぞ！」と言い続けていた</a> ら、Xamarin が Microsoft に買収され、Xamarin も Microsoft MVP の対象に！</p>

<p>Xamarin 関係で、<a href="https://twitter.com/iseebi">@iseebi</a> さんや <a href="https://twitter.com/ytabuchi">@ytabuchi</a> さんが受賞されるなか、「こりゃワタシもワンチャンある？」と思い申請しましたらありがたく MVP になることができました。</p>

<p>カテゴリは Visual Studio and Development Technologies ですが、Xamarin のことしか詳しくないので、これからも <strong>「Xamarin はいいぞ！」</strong> と言い続けていきます。</p>

<p>まだ Microsoft 系の開発者には浸透していないであろう Android/iOS アプリの開発ノウハウについて、あるいは両者の技術コミュニティが繋がるような活動ができれば、と思っています。</p>

<p>（あ、 <a href="http://aile.hatenablog.com/entry/2016/10/02/005811">Xamarin.Macの人</a> とは同期受賞になるのかな、 <strong>Windowsを使わないMVP</strong> 同士、がんばりましょうｗ）</p>

<p>年末にかけて、 Xamarin関連の勉強会には(地方からだけど)ちょいちょい顔を出しますし、12月には Xamarin Advent Calendar を今年もやります！</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">4年目となる Xamarin Advent Calendar 2016 もやるから皆さんよろ〜<br>2015 - <a href="https://t.co/EbFffM48no">https://t.co/EbFffM48no</a><br>2014 - <a href="https://t.co/siRSDoDhJ8">https://t.co/siRSDoDhJ8</a><br>2013 - <a href="https://t.co/JkdGFRt8i7">https://t.co/JkdGFRt8i7</a></p>&mdash; これがあめいの選択だよ (@amay077) <a href="https://twitter.com/amay077/status/777844707669909504">2016年9月19日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>よろしくおねがいします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JetBrains の Open Source License をいただきました]]></title>
    <link href="http://blog.amay077.net/blog/2016/09/29/got-jetbrains-opensource-lisence/"/>
    <updated>2016-09-29T21:28:17+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/09/29/got-jetbrains-opensource-lisence</id>
    <content type="html"><![CDATA[<p>　JetBrains は、 Androidアプリ開発者には Android Studio の元となっているIDE「IntelliJ IDEA」、C# 開発者には、Visual Studio拡張機能「ReSharper」を販売している企業としておなじみですよね。</p>

<!--more-->


<h2>JetBrains 製品群とオープンソースライセンス</h2>

<p>　そんな JetBrains 製品群、便利と聞きつつも個人では購入するのをためらっていました（Xamarin は有償でも買ってたのにな！）。</p>

<p>その JetBrains に非商用のオープンソースプロジェクト開発者にライセンスを提供してくれる「Free Open Source License」があるのを知ったのは数ヶ月前のことです。</p>

<ul>
<li><a href="https://www.jetbrains.com/buy/opensource/">JetBrains :: Opensource license</a></li>
</ul>


<p>　「今の僕なら、 <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Xamarin.Forms.GoogleMaps</a> 開発してるし、(少ないけど)コントリビューションしてくれる人も居るし、 nuget のダウンロード数も 1,800超えてるしワンチャンあるのでは？」 と思い申請してみました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Xamarin.Forms.GoogleMaps 作り始めて３ヶ月経ったので JetBrains OSS License ワンチャン</p>&mdash; これがあめいの選択だよ (@amay077) <a href="https://twitter.com/amay077/status/781369150635507712">2016年9月29日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>　すると驚き、ものの数時間で「おｋ、ライセンスやるお」ってメールが!はやっ！！</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">やったー！ JetBrains OSS License もらえた！！ってかレビューはやっ！ <a href="https://t.co/i9yGYXCOsP">pic.twitter.com/i9yGYXCOsP</a></p>&mdash; これがあめいの選択だよ (@amay077) <a href="https://twitter.com/amay077/status/781428124399448064">2016年9月29日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>　ありがとう JetBrains、そしてありがとう Xamarin と Microsoft。 Xamarin がオープンソースにしてくれたから、それをフォークして、自分のプロジェクトにできて、ライセンスもらえました。</p>

<p>　これで超便利と噂の Resharper 先生が使えます（普段Macだけどな！）</p>

<p>　Eclipse の代わりに IntelliJ IDEA 使うぞ！</p>

<p>　今まで Early Access Program で何とか使ってた <a href="https://www.jetbrains.com/datagrip/">DataGrip</a> もガッツリ使うぞ。</p>

<p>　<strong><a href="https://www.jetbrains.com/rider/">Rider</a> のリリース心待ちにしてます。</strong></p>

<p>　ほかのプロダクトは…あまり知らなかったけどいろいろ使ってみるぞ！</p>

<h2>みんなもワンチャンあるで</h2>

<p>　申請時、 Number of commiters 的な項目があったので、 <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/graphs/contributors">Xamarin.Forms.GoogleMaps にコミットしてくれていた人の数</a> で「3」と入力したら、ライセンスも3つくれました（残りの２つはコミッターの方々に提供するつもりです）。</p>

<p>　これが意味するのは、</p>

<p><strong>自分でオープンソースプロジェクトを立ち上げなくても、どこからのプロジェクトに「積極的に」参加して、そのオーナーさんに「申請して」って言えばいいのでは</strong></p>

<p>　そのプロジェクトに大きめな関わりができて、良好な関係が築ければオーナーさんも引き受けてくれるのではないでしょうか（また、オーナーでなければ申請できないというルールでもないです）。JetBrains Open Source License について知らなければ、みんなにメリットのある事ですし。（コミッターが多い場合、いくつまで License を発行してくれるのかはさじ加減が必要かも知れませんが）</p>

<p>　もちろん、自分でOSSを始めるのも全然アリです。Xamarin.Forms.GoogleMaps もほぼ一人プロジェクトで、歴史も浅く、規模もとても小さいです。あ、頑張って README などを英語で書いている、というのは効いているのかも知れません。</p>

<p>　最後に宣伝ですが、 Xamarin.Forms.GoogleMaps にコントリビュートしていただければ、来年のライセンス更新時に「Number of commiters」を増やせて、参加して頂いた方にもライセンス供給できるかもしれませんので、プルリクなどよろしくおねがいします。<a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues">ISSUES</a> が溜まってきているのですｗ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[東京出張で AirBnB を初めて使ってみた]]></title>
    <link href="http://blog.amay077.net/blog/2016/09/16/airbnb_first_impression/"/>
    <updated>2016-09-16T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/09/16/airbnb_first_impression</id>
    <content type="html"><![CDATA[<p>　仕事で東京に１週間滞在する機会があったので、初めて AirBnB を使ってみました。</p>

<!--more-->


<p>　説明する必要があるかわからないけど、 <a href="https://www.airbnb.jp/">AirBnB</a> は、一般のお宅の一部（一部屋とか）を宿泊先として借りる（使う人）サービスのことで、日本では「民泊」と呼ばれています。当然、貸す側の人もいるわけで、それらの仲介をしているのが AirBnB などのサービスです。</p>

<p>　AirBnB の用語？で、部屋を貸す人を「ホスト」、借りる人を「ゲスト」と呼びます。</p>

<p>　前から興味あったし、予算に見合うビジネスホテルがなかったので、代わりになる宿泊先を AirBnB で探して使ってみました。</p>

<h2>宿泊してみて</h2>

<h3>料金</h3>

<p>　今回の物件は、部屋の広さが6畳くらい。料金は、清掃料約2000円＋1泊約5,000円です。4泊したので合計約25,000円でした。付近のビジネスホテルと比べると1泊あたりで2000〜3000円ほど安いです。</p>

<h3>チェックイン、チェックアウト</h3>

<p>　ホストさんとのやりとりは Facebook メッセンジャーで行い、チェックインの際には実際にお会いして、部屋の説明などをしていただきましたが、それ以来、チェックアウトの時も、会うことはありませんでした。</p>

<h3>マンションへの出入り</h3>

<p>　滞在中は家のカギを貸していただけるので、マンションへの出入りは自由でした。住人と思しき人から「こんばんわー」などと挨拶されることもありましたが、これって絶対 <strong>ご近所さんと間違われてる</strong> よね？</p>

<h3>生活音</h3>

<p>　今回の物件は、ホストさん達の居住空間の空いている部屋を貸し出しているタイプ。しかしその部屋は居住空間とは扉で分断されていました。生活音はわずかに聞こえますが、声などは聞こえませんでした。誰が何人住んでいるのかを伺い知ることもできませんでした。たまに掃除とか、移動の音が聞こえるくらい。</p>

<h3>洗面など</h3>

<p>　バブラシなどのアメニティは用意されていない物件だったので、自分で用意したものを使いました。タオルは、ホストさんのご好意で使い放題になっており、大変助かりました。
　</p>

<h3>お風呂</h3>

<p>　浴槽はゲストに使わせる想定では無かったようだったのでシャワーでした。海外の方だとシャワーで十分なんですかね。</p>

<h3>緊張感</h3>

<p>　ビジネスホテルと違う緊張感はあります。全裸でトイレやお風呂に行くことはさすがにできません。</p>

<h3>通信環境</h3>

<p>　Free WiFiが２つ(内１つはモバイルWiFi)されており、自由に使うことができました。速度的にも問題なかったです。
　</p>

<h3>家の鍵を渡す／受け取るということ</h3>

<p>　利用者は本人確認をしているとはいえ、自宅の鍵を他人に渡して自由に使わせるってどんな気分だろうなーと思いました。自分ならとてもムリ。それを超えるメリット（異文化コミュニケーションとか？）があるということでしょうか。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/airbnb_first_impression_01.jpg" alt="" /></p>

<p>　お借りした部屋のホワイトボードには、ここに泊まったゲストの人たちの、ホストへの感謝のことばがたくさん書かれていました。from アメリカ、オーストラリア、フランス、中国、台湾、シンガポール、デンマーク、フィリピンなどなど。僕も足させてもらいましたよ、日本語でｗ</p>

<h2>AirBnB をまた利用したいか</h2>

<p>　うん、また利用してみたいですね。</p>

<p>　ひとりで、東京に遊びに行く時など、なるべく宿泊費は浮かせたい、けどカプセルホテルじゃイヤだ、というときの選択肢になるでしょう。</p>

<p>　今回は、ホストさんがほとんど干渉して来ないタイプでワタシ的にはとてもありがたかったです。AirBnB の物件には、いろいろな種類の物件があるので、その違いをもっと見てみたいという気もします。</p>

<p>　日頃スタートアップのWebサービスのニュースは見るけど、使う機会はなかなか無いので、もっといろいろ使っていかないとなあとも思ってます。<a href="https://www.uber.com/ja/">Uber</a> も使ってみたいぞ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarinハンズオン浜松(再び) で講師をしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/09/10/joined-xamarin-hads-on-ad-hamamatsu-revenge/"/>
    <updated>2016-09-10T20:43:45+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/09/10/joined-xamarin-hads-on-ad-hamamatsu-revenge</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://jaghama.connpass.com/event/37686/">Xamarinハンズオン浜松(再び) #JXUG #jaghama &ndash; connpass</a></li>
</ul>


<!--more-->


<p><a href="http://blog.amay077.net/blog/2016/07/10/joined_xamarin_hads_on_ad_hamamatsu/">前回</a> から２ヶ月、「もう一度浜松で開催して欲しい」と要望があったとのことで、前回の田淵さんに代わり、講師役として協力させていただきました。</p>

<h2>プレイベント「さわやかを食べる会」</h2>

<p>今回もウォーミングアップは さわやか です（前回とは違う店だよ）。
前回は げんこつハンバーグ でしたが、今回は <em>普通の</em> ハンバーグ、こいつもウマイ！！</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_2_01.JPG" alt="" /></p>

<h2>ハンズオン振り返り</h2>

<p>一応、概要説明の資料はこちらにおいておきますね(前回の講師である田淵さんの資料をほぼ丸パクリですがｗ)。</p>

<ul>
<li><a href="http://www.slideshare.net/amay077/xamarin-xamarin201609-jxug-jaghama">Xamarin基礎講座 Xamarinハンズオン(2016.09 浜松) #JXUG #jaghama</a></li>
</ul>


<p>今回は約２０名の方に参加していただけました。</p>

<p>会場がとてもキレイでした、ご協力ありがとうございます、○○鉄道さま！（どこまで公開してよいか分からないから一応伏せといた）</p>

<p>Windows + Visual Studio の方が多かったのに、私自身が普段 Mac + Xamarin Studio 使いなので、ちょっと不安だなー、と思っていましたが、その通りでした💧</p>

<p>何名かの人で、 Visual Studio ならでは(?) な問題が発生して、環境が作れなかったりしました。
本当はその場で解決してあげたかったんですが、Visual Studio のトラブルシューティングの引き出しが少なく…。</p>

<p>とはいえ、今後も Mac から Windows に乗り換えることは無さそうなので、どうしたもんかなぁ、という感じです。</p>

<h2>打ち上げ</h2>

<p>駅前の浜松餃子屋さんで軽く打ち上げ。混んでたためか、餃子の追加注文お断りとのことで、余裕を持って頼んだ結果こうなりました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_2_02.JPG" alt="" /></p>

<p>大人５人だったからなんとか食べきれましたね、浜松餃子も旨かった！</p>

<h2>ちょまどさん</h2>

<p>Microsoft のエバンジェリストであるちょまど(<a href="https://twitter.com/chomado">@chomado</a>)さんも来ていただき、サポートスタッフをお願いしました、ありがとうございました！</p>

<p>新たな伝説のネタとなって、浜松<strong>市</strong> も大変うれしく思います（^^）</p>

<ul>
<li><a href="http://togetter.com/li/1020144">浜松町と浜松 &ndash; Togetterまとめ</a></li>
</ul>


<blockquote class="twitter-tweet" data-conversation="none" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/chomado">@chomado</a> <br><br>だいたいさ！<br><br>浜松<br>と<br>浜松町<br><br>が全然違うところなんて本当に知らなかったよ！<br><br>会社(日本マイクロソフト品川本社)の隣駅と浜松町だと思ってたら、<br><br>まさかの新幹線ですよ！<br><br>もちろん自費です！</p>&mdash; ちょまど@MS入社してから5ヶ月 (@chomado) <a href="https://twitter.com/chomado/status/771907617555828740">2016年9月3日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">以前も浜松市の勉強会に、浜松町と間違えて登録された方がいましたが、間違いに気づいてキャンセルされました。実際に来られたのは <a href="https://twitter.com/chomado">@chomado</a> さんが初めてです。</p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/771913137792491520">2016年9月3日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>また次回も <del>浜松町と間違えて</del> 来てください！</p>

<h2>地方も Xamarin がんばろう</h2>

<p>東京・関東あたりは、Xamarin の勉強会を毎月数回やっている感じですが、地方はまだまだ少なめ。</p>

<p>直近だと、長野県でもくもく会があるそうです。</p>

<ul>
<li><a href="http://glnagano.connpass.com/event/39782/">ギークラボ長野 Xamarinもくもく会 &ndash; connpass</a></li>
</ul>


<p>地方の観光スポットor特産品を釣り餌にしていただけると、ワタシも喰いつきやすいです。
よろしくおねがいします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.iOS でインターネット通信が可能かを取得する]]></title>
    <link href="http://blog.amay077.net/blog/2016/08/26/ger_is_network_available_on_xamarin_ios/"/>
    <updated>2016-08-26T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/08/26/ger_is_network_available_on_xamarin_ios</id>
    <content type="html"><![CDATA[<p>Xamarin.iOS で、「端末からインターネット通信が可能か？」を調べたい。</p>

<!--more-->


<p>Objective-C だと <a href="https://github.com/tonymillion/Reachability">Reachability</a>、swift だと <a href="https://github.com/ashleymills/Reachability.swift">Reachability.swift</a> を使うようだけど、 Xamarin.iOS ではどうするか？</p>

<ul>
<li><a href="http://d.hatena.ne.jp/scientre/20150527/get_network_status_in_swift">Swift でネットワーク状況を調べる &ndash; メモ用紙</a></li>
</ul>


<p>Bindingライブラリがあるのかな？と思ったら、サンプルで C# のソースコードが提供されていた。</p>

<ul>
<li><a href="https://developer.xamarin.com/recipes/ios/network/reachability/detect_if_network_is_available/">Detect if Network is Available &ndash; Xamarin</a></li>
</ul>


<p>の <a href="https://github.com/xamarin/monotouch-samples/blob/master/ReachabilitySample/reachability.cs"><code>reachability.cs</code></a> がそれ。
（名前から察して Reachability.swift を C# で書きなおしたもの？詳しくは見てないけど。）</p>

<p>で、このサンプルの <code>Reachability</code> を使うと、以下のような感じで、「インターネット通信が可能か？」を調べられる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="kt">bool</span> <span class="n">IsNetworkAvailable</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Reachability</span><span class="p">.</span><span class="n">InternetConnectionStatus</span><span class="p">()</span> <span class="p">!=</span> <span class="n">NetworkStatus</span><span class="p">.</span><span class="n">NotReachable</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>WiFi とかセルラーとか細かいステータスもあるので、あとはコードを見てください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NavigationPage + MasterDetailPage の時に iOS の NavigationBar の左ボタンをカスタマイズする]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/22/customizing_left_button_on_%20NavigationBar_in_using_navigationpage_with_masterdetailpage/"/>
    <updated>2016-07-22T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/22/customizing_left_button_on_ NavigationBar_in_using_navigationpage_with_masterdetailpage</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms では、左からスライドして出てくるメニューを持つ画面を <code>MasterDetailPage</code> で作成します。</p>

<!--more-->


<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/user-interface/navigation/master-detail-page/">Master-Detail Page &ndash; Xamarin</a></li>
</ul>


<p>一方、普通に画面遷移していく場合は ContentPage などを <code>NavigationPage</code> でラップしてあげます。</p>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/user-interface/navigation/hierarchical/">Hierarchical Navigation &ndash; Xamarin</a></li>
</ul>


<h2>やりたいこと</h2>

<p>何がしたいかというと、両者を組み合わせたいんです。こういうことってよくありませんかね？</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/customizing_left_navvigationbar_button_in_masterdetail_with_navigation_pages_01.png" alt="" /></p>

<p>起動画面で「新規ユーザー登録」があって、「ユーザー登録画面」を経て、メインの画面に遷移する、メイン画面にはスライドメニューがある、というパターン。これを Xamarin.Forms でやりたいのです。</p>

<h2>問題</h2>

<p>ところが、 <code>NavigationPage</code> で遷移していく画面の中に <code>MasterDetailPage</code> があると、 <code>NavigationPage</code> の方が勝ってしまい、ナビゲーションバーには「BACK」ボタンが表示されてしまいます。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/customizing_left_navvigationbar_button_in_masterdetail_with_navigation_pages_02.png" alt="" /></p>

<p>これを消そうと、<code>MasterDetailPage</code> のコンストラクタで <code>NavigationPage.SetHasBackButton(this, false)</code> してみます。</p>

<p>その結果がこれ。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/customizing_left_navvigationbar_button_in_masterdetail_with_navigation_pages_03.png" alt="" /></p>

<p>Android の方は望む結果になったけど、iOSの方はうーん…、BACKボタンは消えたけど、メニューを表示させるボタンが出ません。</p>

<p>しょうがないので、iOS の場合だけ、ナビゲーションバーの左ボタンをどうにかして追加してみます。</p>

<h2>私が求めていたソリューション（CustomRenderer編）</h2>

<p>Xamarin.Forms のお供、CustomRenderer です。</p>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/custom-renderer/">Customizing Controls on Each Platform &ndash; Xamarin</a></li>
<li><a href="http://ticktack.hatenablog.jp/entry/2016/06/11/124751">【Xamarin.Forms】ViewRendererと仲良くなるための簡易チュートリアル &ndash; ぴーさんログ</a></li>
</ul>


<p><code>MasterDetailPage</code> の iOS向けCustomRenderer を作って、ネイティブ側でナビゲーションバーをカスタマイズしてみます。</p>

<figure class='code'><figcaption><span>CustomMasterDetailRenderer.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">MasterDetail.iOS</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">MonoTouch.UIKit</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Xamarin.Forms</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Xamarin.Forms.Platform.iOS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">[assembly: ExportRenderer(typeof(MasterDetailPage), typeof(CustomMasterDetailRenderer))]</span>
</span><span class='line'><span class="k">namespace</span> <span class="nn">MasterDetail.iOS</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">class</span> <span class="nc">CustomMasterDetailRenderer</span> <span class="p">:</span> <span class="n">PhoneMasterDetailRenderer</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">ViewWillAppear</span><span class="p">(</span><span class="kt">bool</span> <span class="n">animated</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">base</span><span class="p">.</span><span class="n">ViewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Element</span> <span class="k">as</span> <span class="n">MasterDetailPage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">var</span> <span class="n">navigationItem</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">NavigationController</span><span class="p">.</span><span class="n">TopViewController</span><span class="p">.</span><span class="n">NavigationItem</span><span class="p">;</span>
</span><span class='line'>            <span class="n">navigationItem</span><span class="p">.</span><span class="n">LeftBarButtonItems</span> <span class="p">=</span> <span class="k">new</span> <span class="n">UIBarButtonItem</span><span class="p">[]</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">UIBarButtonItem</span><span class="p">(</span><span class="s">&quot;MENU&quot;</span><span class="p">,</span> <span class="n">UIBarButtonItemStyle</span><span class="p">.</span><span class="n">Plain</span><span class="p">,</span> <span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">__</span><span class="p">)</span> <span class="p">=&gt;</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">page</span><span class="p">.</span><span class="n">IsPresented</span> <span class="p">=</span> <span class="p">!</span><span class="n">page</span><span class="p">.</span><span class="n">IsPresented</span><span class="p">;</span>
</span><span class='line'>                <span class="p">})</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>「MENU」ってボタンを、ナビゲーションバーの左側に追加しています。
こんな CustomRenderer を iOS 側のプロジェクトに追加して実行してみます。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/customizing_left_navvigationbar_button_in_masterdetail_with_navigation_pages_04.png" alt="" /></p>

<p>オーケーオーケー、これが私が求めていたソリューションです。</p>

<h2>私が求めていたソリューション（Effects編）</h2>

<p>が、CustomRenderer にはいくつか考えなければならないことがあります。</p>

<ul>
<li>上で作った <code>CustomMasterDetailRenderer.cs</code> は <code>PhoneMasterDetailRenderer</code> というクラスを継承しています。が、実はこれは iPhone 用で、実はタブレット（iPad）用に <code>TabletMasterDetailRenderer</code> というクラスもあります。これの CustomRenderer も用意しなければなりませんか？</li>
<li>CustomRenderer はベースとなる ViewRenderer を「継承」して作ります。そして C# は多重継承を許していません、この意味が分かるな？別の機能を拡張したいと思ったら<code>CustomMasterDetailRenderer</code>から派生させるしかなくなります。</li>
</ul>


<p>で、 Xamarin.Forms には、v2.1 から既存機能の拡張に Effects という選択肢が加わりました。</p>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/effects/">Customizing Controls with Effects &ndash; Xamarin</a></li>
<li><a href="http://ticktack.hatenablog.jp/entry/2016/01/26/020248">【Xamarin.Forms 2.1.0(プレビュー)】Effects &ndash; ぴーさんログ</a></li>
</ul>


<p>では、<code>CustomMasterDetailRenderer.cs</code> を Effects に変えてみましょう。</p>

<figure class='code'><figcaption><span>CustomMasterDetailEffect.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">MasterDetail.iOS</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">MonoTouch.UIKit</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Xamarin.Forms</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Xamarin.Forms.Platform.iOS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">[assembly: ResolutionGroupName(&quot;mycompany&quot;)]</span>
</span><span class='line'><span class="na">[assembly: ExportEffect(typeof(CustomMasterDetailEffect), &quot;CustomMasterDetailEffect&quot;)]</span>
</span><span class='line'><span class="k">namespace</span> <span class="nn">MasterDetail.iOS</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">class</span> <span class="nc">CustomMasterDetailEffect</span> <span class="p">:</span> <span class="n">PlatformEffect</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnAttached</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Element</span> <span class="k">as</span> <span class="n">MasterDetailPage</span><span class="p">;</span>
</span><span class='line'>            <span class="n">page</span><span class="p">.</span><span class="n">Appearing</span> <span class="p">+=</span> <span class="n">Page_Appearing</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnDetached</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Element</span> <span class="k">as</span> <span class="n">MasterDetailPage</span><span class="p">;</span>
</span><span class='line'>            <span class="n">page</span><span class="p">.</span><span class="n">Appearing</span> <span class="p">-=</span> <span class="n">Page_Appearing</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">void</span> <span class="nf">Page_Appearing</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">vc</span> <span class="p">=</span> <span class="n">GetParentViewController</span><span class="p">();</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Element</span> <span class="k">as</span> <span class="n">MasterDetailPage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">var</span> <span class="n">navigationItem</span> <span class="p">=</span> <span class="n">vc</span><span class="p">.</span><span class="n">NavigationController</span><span class="p">.</span><span class="n">TopViewController</span><span class="p">.</span><span class="n">NavigationItem</span><span class="p">;</span>
</span><span class='line'>            <span class="n">navigationItem</span><span class="p">.</span><span class="n">LeftBarButtonItems</span> <span class="p">=</span> <span class="k">new</span> <span class="n">UIBarButtonItem</span><span class="p">[]</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">UIBarButtonItem</span><span class="p">(</span><span class="s">&quot;MENU&quot;</span><span class="p">,</span> <span class="n">UIBarButtonItemStyle</span><span class="p">.</span><span class="n">Plain</span><span class="p">,</span> <span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">__</span><span class="p">)</span> <span class="p">=&gt;</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">page</span><span class="p">.</span><span class="n">IsPresented</span> <span class="p">=</span> <span class="p">!</span><span class="n">page</span><span class="p">.</span><span class="n">IsPresented</span><span class="p">;</span>
</span><span class='line'>                <span class="p">})</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">UIViewController</span> <span class="nf">GetParentViewController</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">UIResponder</span> <span class="n">responder</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Container</span><span class="p">;</span>
</span><span class='line'>            <span class="k">while</span> <span class="p">((</span><span class="n">responder</span> <span class="p">=</span> <span class="n">responder</span><span class="p">.</span><span class="n">NextResponder</span><span class="p">)</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">responder</span> <span class="k">is</span> <span class="n">UIViewController</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="p">(</span><span class="n">UIViewController</span><span class="p">)</span><span class="n">responder</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Effect は、 <code>ResolutionGroupName</code> と <code>ExportEffect</code> で定義した名称を使って、PCL側プロジェクトで Page に追加します。</p>

<figure class='code'><figcaption><span>RootPage.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">RootPage</span> <span class="p">:</span> <span class="n">MasterDetailPage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">RootPage</span> <span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">NavigationPage</span><span class="p">.</span><span class="n">SetHasBackButton</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// Effect を追加する</span>
</span><span class='line'>        <span class="n">Effects</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">Effect</span><span class="p">.</span><span class="n">Resolve</span><span class="p">(</span><span class="s">&quot;mycompany.CustomMasterDetailEffect&quot;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 以下省略</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/customizing_left_navvigationbar_button_in_masterdetail_with_navigation_pages_05.png" alt="" /></p>

<p>こちらも、CustomRenderer と同じことができました。</p>

<p>が、ちょっと黒魔術っぽいの使ってます。</p>

<ul>
<li><code>Effects.Container</code> から取得できるのは <code>UIView</code> です。親の <code>UIViewController</code> を得るには、 <code>GetParentViewController()</code> でやってるような事をしなければなりません</li>
<li>CustomRenderer はそれ自体は <code>ViewController</code> だったので <code>ViewWillAppear()</code> など画面のライフサイクルコールバックを override することができました。が、Effects から ViewController のライフサイクルイベントをハンドリングできません。代わりに Xamarin.Forms 側の <code>Page</code> のライフサイクルから <code>Appearing</code> イベントで処理するようにしています。そのため、「MENU」ボタンが表示されるタイミングが若干遅れます。</li>
</ul>


<h2>CustomRenderer と Effects 、どちらを使えばいいの？</h2>

<ul>
<li>CustomRenderer はできる事は多いが、複数の CustomRenderer を適用することはできない</li>
<li>Effects はできる事は少ないが、複数の機能拡張を同時に適用できる</li>
</ul>


<p>以上を考えると、</p>

<ol>
<li>まずあなたの行いたいことが Effects で実現できないか、試してみる</li>
<li>Effects でできないレベルなら CustomRenderer を選択する</li>
</ol>


<p>となるでしょう。</p>

<p>本件のネタは、 Effects ではかなりムリをして実現しているので、CustomRenderer の方が相応しいと思われます。
が、CustomRenderer はここぞという時にとっておきたい気もします。
このさじ加減は、作るアプリの規模・深度、汎用性、再利用性などによって変わってくるでしょう。Effects の方が汎用性・再利用性は高いですが、ネイティブのUIパーツをごっそり入れ替えるような深い事は、CustomRenderer でなければできません。</p>

<p>今回のプログラムは Github に上げてあります。（<code>CustomMasterDetailRenderer.cs</code> はコメントアウトしてあって、Effects の方を活かしてます。）</p>

<ul>
<li><a href="https://github.com/amay077/XFNavigationWithMasterDetailSample/blob/master/README.md">XFNavigationWithMasterDetailSample/README.md at master · amay077/XFNavigationWithMasterDetailSample</a></li>
</ul>


<p>私は「Effects で頑張りたい派」かな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[非同期処理の書き方を Java と Swift と Xamarin で比較する]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/19/comparison_async_logic_with_java_swift_xamarin/"/>
    <updated>2016-07-19T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/19/comparison_async_logic_with_java_swift_xamarin</id>
    <content type="html"><![CDATA[<p>「重たい処理を非同期で実行して、結果をメインスレッドで画面に表示」を、</p>

<!--more-->


<ul>
<li>Android-Java</li>
<li>iOS-Swift</li>
<li>Xamarin(Android も iOS も同じ)</li>
</ul>


<p>で比較。</p>

<hr />

<h2>Android</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">protected</span> <span class="n">Long</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">[]</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// ワーカースレッド</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">ret</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">long</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1000000000</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>                <span class="n">ret</span> <span class="o">+=</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Long</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// UIスレッド</span>
</span><span class='line'>            <span class="n">text1</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">result</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}.</span><span class="na">execute</span><span class="o">((</span><span class="n">Void</span><span class="o">)</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Swift</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@IBAction</span> <span class="n">func</span> <span class="n">onTouchUpInside</span><span class="o">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="o">(</span><span class="n">dispatch_get_global_queue</span><span class="o">(</span>
</span><span class='line'>        <span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// ワーカースレッド</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">ret:</span><span class="n">Int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="n">in</span> <span class="mi">0</span><span class="o">...</span><span class="mi">1000000000</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ret</span> <span class="o">+=</span> <span class="n">i</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">dispatch_async</span><span class="o">(</span><span class="n">dispatch_get_main_queue</span><span class="o">(),</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// UIスレッド</span>
</span><span class='line'>            <span class="n">weakSelf</span><span class="o">?.</span><span class="na">label1</span><span class="o">.</span><span class="na">text</span> <span class="o">=</span> <span class="n">String</span><span class="o">(</span><span class="n">ret</span><span class="o">)</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Xamarin(Android も iOS も)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">Task</span><span class="p">&lt;</span><span class="kt">long</span><span class="p">&gt;</span> <span class="n">FatProc</span><span class="p">()</span> <span class="p">=&gt;</span> <span class="n">Task</span><span class="p">.</span><span class="n">Run</span><span class="p">&lt;</span><span class="kt">long</span><span class="p">&gt;(()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">ret</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">long</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">1000000000</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>        <span class="n">ret</span> <span class="p">+=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="n">button1</span><span class="p">.</span><span class="n">TouchUpInside</span> <span class="p">+=</span> <span class="k">async</span> <span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">ret</span> <span class="p">=</span> <span class="k">await</span> <span class="n">FatProc</span><span class="p">();</span> <span class="c1">// ワーカースレッド</span>
</span><span class='line'>    <span class="n">label1</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">ret</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span> <span class="c1">// UIスレッド</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Xamarin はいいぞ！</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[カスタムマーカーに対応した Xamarin.Forms.GoogleMaps v1.4.0 をリリースしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/18/xamarin_forms_googlemaps_v1_4_0_released/"/>
    <updated>2016-07-18T17:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/18/xamarin_forms_googlemaps_v1_4_0_released</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms.GoogleMaps v1.4.0 をリリースしました。</p>

<!--more-->


<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.GoogleMaps/1.4.0">NuGet Gallery | Xamarin.Forms.GoogleMaps 1.4.0</a></li>
</ul>


<p>待望？のカスタムマーカーに対応しました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_001.png" alt="image001" /></p>

<h2>カスタムマーカーの使い方</h2>

<p><code>Pin.Icon</code> に <code>BitmapDescriptorFactory</code> により生成される <code>BitmapDescriptor</code> を設定します。</p>

<p><code>BitmapDescriptorFactory</code> の３つのファクトリメソッドにより、
「デフォルトマーカーの色を変える」「プラットフォーム毎の画像リソースを使用する」「共通の画像リソースを使用する」
の３つが使用できます。</p>

<h3>デフォルトマーカーの色を変える</h3>

<p><a href="https://developers.google.com/maps/documentation/ios-sdk/reference/interface_g_m_s_marker.html?hl=ja#ae320cb082a68c22eb1f37955f8e56228"><code>iOS:GMSMarker.markerImageWithColor</code></a>, <a href="https://developers.google.com/android/reference/com/google/android/gms/maps/model/BitmapDescriptorFactory.html?hl=ja#defaultMarker(float"><code>Android:BitmapDescriptorFactory.defaultMarker</code></a>) に対応する、既定のマーカー形状の色のみを変える機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.DefaultMarker(Color)</code> メソッドを使用します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">pin</span><span class="p">.</span><span class="n">Icon</span> <span class="p">=</span> <span class="n">BitmapDescriptorFactory</span><span class="p">.</span><span class="n">DefaultMarker</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Pink</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>プラットフォーム毎の画像リソースを使用する</h3>

<p><a href="https://developers.google.com/maps/documentation/ios-sdk/marker?hl=ja#_7"><code>iOS:UIImage.imageNamed</code></a>, <a href="https://developers.google.com/android/reference/com/google/android/gms/maps/model/BitmapDescriptorFactory.html?hl=ja#defaultMarker(float"><code>Android:BitmapDescriptorFactory.fromAsset</code></a>) に対応する、プラットフォーム固有の画像リソースを、マーカー画像として使用する機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.FromBundle(string)</code> メソッドを使用します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">pin</span><span class="p">.</span><span class="n">Icon</span> <span class="p">=</span> <span class="n">BitmapDescriptorFactory</span><span class="p">.</span><span class="n">FromBundle</span><span class="p">(</span><span class="s">&quot;image01.png&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>引数の bundleName は、 <strong>同じ名称で</strong> 、プラットフォーム毎に次のように用意されている必要があります。</p>

<h4>Android の場合</h4>

<p>Android側のプロジェクトの <code>Assets</code> ディレクトリ内に <code>image01.png</code> を追加し、 Build Action を ”Android Asset” に設定します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_002.png" alt="image001" /></p>

<h4>iOS の場合</h4>

<p>iOS側のプロジェクト <code>image01.png</code> を追加し、 Build Action を ”BundleResource” に設定します。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_003.png" alt="image001" /></p>

<h3>共通の画像リソースを使用する</h3>

<p>画像を <code>Stream</code> を直接指定できる、機能です。</p>

<p>以下のように、 <code>BitmapDescriptorFactory.DefaultMarker(Color)</code> メソッドを使用します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// PCLプロジェクトに EmbeddedResouece として追加した &quot;marker01.png&quot; を読み込んで Stream 化</span>
</span><span class='line'><span class="kt">var</span> <span class="n">assembly</span> <span class="p">=</span> <span class="k">typeof</span><span class="p">(</span><span class="n">CustomPinsPage</span><span class="p">).</span><span class="n">GetTypeInfo</span><span class="p">().</span><span class="n">Assembly</span><span class="p">;</span>
</span><span class='line'><span class="kt">var</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">assembly</span><span class="p">.</span><span class="n">GetManifestResourceStream</span><span class="p">(</span><span class="err">$</span><span class="s">&quot;XFGoogleMapSample.marker01.png&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Stream をマーカーに設定</span>
</span><span class='line'><span class="n">pin</span><span class="p">.</span><span class="n">Icon</span> <span class="p">=</span> <span class="n">BitmapDescriptorFactory</span><span class="p">.</span><span class="n">FromStream</span><span class="p">(</span><span class="n">stream</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>【注意】プラットフォーム毎のマーカーサイズの違い</h2>

<p>「プラットフォーム毎の画像リソースを使用する」「共通の画像リソースを使用する」で見られる現象なのですが、iOS と Android では <strong>同じサイズの画像を指定しているのに iOS の方が大きく描画されます</strong></p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_v1_4_0_released_004.png" alt="image001" /></p>

<p>なぜこうなるのか分かりませんが、 <a href="https://developers.google.com/maps/documentation/ios-sdk/intro?hl=ja">Google Maps SDK for iOS</a> と <a href="https://developers.google.com/maps/documentation/android-api/intro?hl=ja">Google Maps Android API</a> を直接使用した時もこうなるので、両者の仕様というかプラットフォーム自体の仕様なのかも知れません。</p>

<p>特に <code>BitmapDescriptorFactory.FromStream</code> を使用した時には使い勝手が悪いのですが、「ネイティブの Google Maps SDK の機能を共通APIでラップする」のが第一目標なので、とりあえず画像を何も加工しない実装でリリースしました。</p>

<p>何か原因などについてヒントがある方は</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues/40">Why custom pin icon in iOS bigger than Android? · Issue #40 · amay077/Xamarin.Forms.GoogleMaps</a></li>
</ul>


<p>に書いてもらえると助かります（日本語で大丈夫です）。</p>

<h2>サンプルプログラム</h2>

<p><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/tree/master/XFGoogleMapSample">XFGoogleMapSample</a> の <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/blob/master/XFGoogleMapSample/XFGoogleMapSample/CustomPinsPage.xaml.cs"><code>CustomPinsPage.xaml.cs</code></a> でこれらの機能を使用しています。</p>

<p>是非使ってみてください。よければ <a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Github リポジトリ</a> に Star ください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ボタンをタップした時に○○する、を Java と Swift と Xamarin で比較する]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/15/comparison_on_click_with_java_swift_xamarin/"/>
    <updated>2016-07-15T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/15/comparison_on_click_with_java_swift_xamarin</id>
    <content type="html"><![CDATA[<p>たぶん一番書くやつを</p>

<!--more-->


<ul>
<li>Android-Java</li>
<li>Android-Xamarin</li>
<li>iOS-Swift</li>
<li>iOS-Xamarin</li>
</ul>


<p>で比較。</p>

<hr />

<h2>Android-Java</h2>

<figure class='code'><figcaption><span>MainActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">button1</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">label1</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;pushed!!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Xamarin.Android(C#)</h2>

<figure class='code'><figcaption><span>MainActivity.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">buttonOk</span><span class="p">.</span><span class="n">Click</span> <span class="p">+=</span> <span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">=&gt;</span> <span class="n">label1</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">&quot;pushed!!&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>iOS-Swift</h2>

<figure class='code'><figcaption><span>ViewController.swift</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">buttonOK</span><span class="o">.</span><span class="na">addTarget</span><span class="o">(</span><span class="n">self</span><span class="o">,</span> <span class="nl">action:</span>
</span><span class='line'>    <span class="err">#</span><span class="n">selector</span><span class="o">(</span><span class="n">ViewController</span><span class="o">.</span><span class="na">onTouch</span><span class="o">(</span><span class="nl">_:</span><span class="o">)),</span>
</span><span class='line'>    <span class="nl">forControlEvents:</span> <span class="o">.</span><span class="na">TouchUpInside</span><span class="o">)</span>
</span><span class='line'><span class="err">・・・</span>
</span><span class='line'><span class="n">func</span> <span class="nf">onTouch</span><span class="o">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">label1</span><span class="o">.</span><span class="na">text</span> <span class="o">=</span> <span class="s">&quot;pushed!!&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Xamarin.iOS(C#)</h2>

<figure class='code'><figcaption><span>ViewColtroller.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">buttonOk</span><span class="p">.</span><span class="n">TouchUpInside</span> <span class="p">+=</span> <span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">=&gt;</span> <span class="n">label1</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">&quot;pushed!!&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>まとめ</h2>

<p><strong>Xamarin はいいぞ！</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin ハンズオン浜松に参加しました #JXUG #jaghama]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/10/joined_xamarin_hads_on_ad_hamamatsu/"/>
    <updated>2016-07-10T18:32:39+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/10/joined_xamarin_hads_on_ad_hamamatsu</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://jaghama.connpass.com/event/33735/">Xamarinハンズオン浜松 #JXUG #jaghama &ndash; connpass</a></li>
</ul>


<!--more-->


<p>　日本Androidの会 浜松支部の市川(<a href="https://twitter.com/macha1972">@macha1972</a>)さんからのご相談を受けて、JXUG の田淵さんに講師を依頼、 <a href="https://groups.google.com/forum/#!forum/android-hamamatsu">日本Android浜松支部(#jaghama)</a>と <a href="http://jxug.org/">Japan Xamarin Users Group (#jxug)</a> の共催という形で、 Xamarin 勉強会（ハンズオン）を浜松市で開催しました。</p>

<h2>プレイベント「さわやかを食べる会」</h2>

<p>　兼ねてより「さわやかに行きたい！」という声が聞かれていた（僕も食べたかった！）ので、プレイベントとして「さわやかを食べる会」も行いました。</p>

<p>　言い出しっぺだったので、浜松駅からさわやかまでの送迎の為の車を出しました。</p>

<p>久しぶりのさわやかだったので、定番のげんこつを外せず今回は断念した さわやかバーガー のメニュー</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_01.jpg" alt="" /></p>

<p>げんこつハンバーグ第一形態</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_02.jpg" alt="" /></p>

<p>げんこつハンバーグ第二形態</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/joined_xamarin_hands_on_ad_hamamatsu_03.jpg" alt="" /></p>

<p>久しぶりだった、やっぱり旨かった、肉を喰ってるッ！って感じがした。</p>

<h2>Xamarin ハンズオン</h2>

<p><a href="http://jxug.connpass.com/event/30152/">JXUGC #14 Xamarin ハンズオン 名古屋大会</a> でもサポートスタッフをさせていただいてたので、だいたいの要領は同じ。</p>

<p>当時にくらべて、Xamarin も Visual Studio もバージョンアップしていて、導入時のエラーはだいぶ減ってきたかなあという印象。</p>

<p>それでも、「Android SDK で Android N を入れているとビルドエラーになる」とか、新しいハマりポイントも出てきたので、やっぱり要注意。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">これ、5/30名の確率でハマってる。Frequently Asked Questions にしてよいでしょう？レベル <a href="https://t.co/DXklIE2FBq">https://t.co/DXklIE2FBq</a> <a href="https://twitter.com/hashtag/JXUG?src=hash">#JXUG</a> <a href="https://twitter.com/hashtag/xamarin?src=hash">#xamarin</a> <a href="https://twitter.com/hashtag/jaghama?src=hash">#jaghama</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751653596861566976">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>このへんは、</p>

<ul>
<li><a href="https://github.com/ytabuchi/XamarinHOL/issues">Issues · ytabuchi/XamarinHOL</a></li>
</ul>


<p>に上げておいて、継続的に改良していけるとよいな。</p>

<p><a href="https://github.com/ytabuchi/XamarinHOL">ハンズオン資料</a>が素晴らしいので、躓くのはほとんど最初だけだよねー、ということで、時間の最後らへんは、</p>

<p>田淵さんからT(enpura)ポイントをもらったり、</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/amay077">@amay077</a> さんに public Command(Action execute, Func&lt;bool&gt; canExecute); を教えていただいた！！！！！Tポイント!!! <a href="https://twitter.com/hashtag/JXUG?src=hash">#JXUG</a></p>&mdash; 田淵 義人＠エクセルソフト (@ytabuchi) <a href="https://twitter.com/ytabuchi/status/751682059186216960">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>「そこで Rx ですよ！」とか言っていた。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">田淵さんが「2つのデータのいずれかが変わった時に、画面のとある項目を更新する必要がある」と言われたので、<br>「そこで Rx ですよ」とだけ言っておいた。 <a href="https://twitter.com/hashtag/jxug?src=hash">#jxug</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751691630172712960">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>スパルタだったけど、時間的にも少し余裕があったかな。皆さん完走できていたと思います。</p>

<h2>LT</h2>

<p>先日より開発中の Xamarin.Forms.GoogleMaps を Qiita のスライドモードを使って LT しました。</p>

<ul>
<li><a href="http://qiita.com/amay077/items/feb5353bf8fb8b8c866d">Xamarin.Forms 用の地図ライブラリつくった &ndash; Qiita</a></li>
</ul>


<h2>懇親会、アフターイベント</h2>

<p>終わったら懇親会、やっぱ地方はいいな！なんとなく落ち着くのです（車出したのでお酒は飲んでいません）。</p>

<p>会の途中、流れでアプリ紹介タイムになり、 <a href="https://twitter.com/fxxk_authority">しんす</a> さんの Multi Function Display というアプリがおもしろそうだった（他の方紹介できずごめんなさい）。</p>

<ul>
<li><a href="https://www.microsoft.com/ja-jp/store/apps/multi-function-display/9nblggh6268l">Multi Function Display – Microsoft ストアの Windows アプリ</a></li>
</ul>


<p>夜、車のダッシュボードにおいて、速度とかをフロンドガラスに写り込ませて見られるのだそうで、カッコいい！MADOSMA の使いみちに困っていたので使ってみます！</p>

<p>　懇親会の後、数名の方でラーメンを食べに行くとのこと。お腹もいい感じだったので帰ろうかなと思っていたのですが、 <strong>「三太」</strong> に行くと聞いて手のひら返し、ご一緒させていただきました。浜松来たらほぼ必ず行くんですよ、三太。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">俺の中の浜松のソウルフード「三太のラーメン」の誘惑に負けた <a href="https://twitter.com/hashtag/jxug?src=hash">#jxug</a> <a href="https://twitter.com/hashtag/jaghama?src=hash">#jaghama</a> (@ 三太 モール街店 in 浜松市, 静岡県) <a href="https://t.co/rhxGxhqfyZ">https://t.co/rhxGxhqfyZ</a></p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751746459469541376">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>約30名も集まっていただいて感謝！</p>

<p>学生さん多かった印象、休憩時間に「もしかしてみなさんは昭和生まれなんですか？」とぶっ込まれた時は、場が軽く凍りましたねｗ</p>

<p>東京のどでかい勉強会もいいけど、地方の十数名くらいの勉強会の方がどっちかというと落ち着きます（^ ^）</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">さわやかうまかった。次は 生しらす か 桜エビ を食べたいです。</p>&mdash; 4度目S+のあめいスピナーリミックス (@amay077) <a href="https://twitter.com/amay077/status/751617505202843648">2016年7月9日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Android で音楽の音量を下げてから効果音を再生する]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/09/gain_transient_in_xamarin_android/"/>
    <updated>2016-07-09T23:59:59+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/09/gain_transient_in_xamarin_android</id>
    <content type="html"><![CDATA[<p>カーナビでよくある、音楽流しながらナビしてると、ガイダンス中は音楽のボリュームを一時的に下げて、案内の音声を再生するってやつ。</p>

<!--more-->


<ul>
<li><a href="http://ja.stackoverflow.com/questions/27452/%e3%82%b9%e3%83%9e%e3%83%9b%e3%82%a2%e3%83%97%e3%83%aa%e8%b5%b7%e5%8b%95%e6%99%82ios-android%e3%81%ab%e5%86%8d%e7%94%9f%e4%b8%ad%e3%81%ae%e9%9f%b3%e6%a5%bd%e3%82%92%e5%81%9c%e6%ad%a2%e3%81%95%e3%81%9b%e3%82%8b%e6%96%b9%e6%b3%95/27459#27459">スマホアプリ起動時(iOS/Android)に再生中の音楽を停止させる方法 &ndash; スタック・オーバーフロー</a></li>
</ul>


<p>に回答したので、その関連でやってみた。</p>

<figure class='code'><figcaption><span>MainActivity.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[Activity(Label = &quot;AudioFocusSample&quot;, MainLauncher = true, Icon = &quot;@mipmap/icon&quot;)]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">MainActivity</span> <span class="p">:</span> <span class="n">Activity</span><span class="p">,</span> <span class="n">AudioManager</span><span class="p">.</span><span class="n">IOnAudioFocusChangeListener</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnCreate</span><span class="p">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnCreate</span><span class="p">(</span><span class="n">savedInstanceState</span><span class="p">);</span>
</span><span class='line'>        <span class="n">SetContentView</span><span class="p">(</span><span class="n">Resource</span><span class="p">.</span><span class="n">Layout</span><span class="p">.</span><span class="n">Main</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">var</span> <span class="n">audioManager</span> <span class="p">=</span> <span class="p">(</span><span class="n">AudioManager</span><span class="p">)</span><span class="n">GetSystemService</span><span class="p">(</span><span class="n">Context</span><span class="p">.</span><span class="n">AudioService</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 先に効果音を読み込んでおく</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">soundPool</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SoundPool</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">Stream</span><span class="p">.</span><span class="n">Music</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">soundId</span> <span class="p">=</span> <span class="n">soundPool</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">ApplicationContext</span><span class="p">,</span> <span class="n">Resource</span><span class="p">.</span><span class="n">Raw</span><span class="p">.</span><span class="n">cat</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// SoundPool は再生完了のコールバックがないので、事前に長さを得ておく</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">duration</span> <span class="p">=</span> <span class="n">GetSoundDuration</span><span class="p">(</span><span class="n">Resource</span><span class="p">.</span><span class="n">Raw</span><span class="p">.</span><span class="n">cat</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">FindViewById</span><span class="p">&lt;</span><span class="n">Button</span><span class="p">&gt;(</span><span class="n">Resource</span><span class="p">.</span><span class="n">Id</span><span class="p">.</span><span class="n">buttonRequestFocus</span><span class="p">).</span><span class="n">Click</span> <span class="p">+=</span> <span class="k">async</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// ダッキングを許可する AudioFocus を要求</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="n">audioManager</span><span class="p">.</span><span class="n">RequestAudioFocus</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">Stream</span><span class="p">.</span><span class="n">Music</span><span class="p">,</span> <span class="n">AudioFocus</span><span class="p">.</span><span class="n">GainTransientMayDuck</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="p">==</span> <span class="n">AudioFocusRequest</span><span class="p">.</span><span class="n">Granted</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// 効果音を再生する</span>
</span><span class='line'>                <span class="n">soundPool</span><span class="p">.</span><span class="n">Play</span><span class="p">(</span><span class="n">soundId</span><span class="p">,</span> <span class="m">1.0f</span><span class="p">,</span> <span class="m">1.0f</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1.0f</span><span class="p">);</span>
</span><span class='line'>                <span class="c1">// 再生完了まで待つ</span>
</span><span class='line'>                <span class="k">await</span> <span class="n">Task</span><span class="p">.</span><span class="n">Delay</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span><span class="n">duration</span><span class="p">);</span>
</span><span class='line'>                <span class="c1">// AudioFocus を開放</span>
</span><span class='line'>                <span class="n">audioManager</span><span class="p">.</span><span class="n">AbandonAudioFocus</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 音声の再生長さを得る</span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">long</span> <span class="nf">GetSoundDuration</span><span class="p">(</span><span class="kt">int</span> <span class="n">rawId</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">player</span> <span class="p">=</span> <span class="n">MediaPlayer</span><span class="p">.</span><span class="n">Create</span><span class="p">(</span><span class="n">ApplicationContext</span><span class="p">,</span> <span class="n">rawId</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">player</span><span class="p">.</span><span class="n">Duration</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// IOnAudioFocusChangeListener の実装（RequestAudioFocus のために必要）</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">OnAudioFocusChange</span><span class="p">([</span><span class="n">GeneratedEnum</span><span class="p">]</span> <span class="n">AudioFocus</span> <span class="n">focusChange</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>       <span class="c1">// 今回は使用しない</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>効果音 <code>Resource.Raw.cat</code> は、 <a href="http://on-jin.com/sound/index.php">On-Jin ～音人～</a> さんのを使わせてもらいました。</p>

<p>音量を小さくする＝絞る＝ダッキング、というのがなかなか連想しづらいので辿りつけない。
Android の音声再生は、他に <code>MediaPlayer</code> とか <code>AudioTrack</code> もあるし、リモコンなど外部からの操作のため？に BroadcastReceiver を使わないといけないし。</p>

<p>サンプルアプリはこちら。</p>

<ul>
<li><a href="https://github.com/amay077/AudioFocusSample">amay077/AudioFocusSample</a></li>
</ul>


<p>次は Xamarin.iOS でやってみる。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.android.com/training/managing-audio/audio-focus.html">Managing Audio Focus | Android Developers</a></li>
<li><a href="http://dev.classmethod.jp/smartphone/android/android-tips-48-soundpool-mediaplayer/">Android Tips #48 BGM や効果音を再生する ｜ Developers.IO</a></li>
<li><a href="http://ameblo.jp/negiiiimo/entry-11488832997.html">Managing Audio Playback part2｜Android開発記録雑記</a></li>
<li><a href="http://qiita.com/KeithYokoma/items/3896f5934478fa560a50">音を制御する &ndash; AudioManager &ndash; Qiita</a></li>
<li><a href="https://developer.amazon.com/public/ja/solutions/devices/fire-tv/docs/managing-audio-focus">Fire TV でのオーディオフォーカスの管理 &ndash; アマゾン アプリ 開発者ポータル</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[転職してました]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/08/changed-jobs/"/>
    <updated>2016-07-08T02:42:39+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/08/changed-jobs</id>
    <content type="html"><![CDATA[<p>気がついたら</p>

<!--more-->


<p>転職していました、 7/1 から？</p>

<p>転職しましたが、何も変わっていません、仕事内容も環境も待遇も。</p>

<p>全社員フルリモートの会社になったので、相変わらず家でゴロゴロしています。</p>

<p>今後ともどうぞよろしくお願いします。</p>

<ul>
<li><a href="https://nepula.net/pc/">Nepula ネプラ｜基幹システムをクラウド化、収益化</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms のバージョンを 1.2 から 2.3 に上げた時のエラー対処法]]></title>
    <link href="http://blog.amay077.net/blog/2016/07/06/version-up-xamarin-forms-project-from-1-2-to-2-3/"/>
    <updated>2016-07-06T23:59:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/07/06/version-up-xamarin-forms-project-from-1-2-to-2-3</id>
    <content type="html"><![CDATA[<p>プロジェクトで使ってる Xamarin.Forms のバージョンを「1.2.3.6257」から「2.3.0.107」に上げたら、ビルドでエラーが発生するようになった。</p>

<!--more-->


<p>ググッてみると、「Xamarin Studio を再起動」とか「ソリューションを開き直せ」とか書いてある。
ホンマかいな？と思いながら実施すると、確かになんか変化が。</p>

<p>エラーメッセージが変わっただけだけど。</p>

<blockquote><p>Error initializing task XamlG: Not registered task XamlG.</p></blockquote>

<p>とか、</p>

<blockquote><p>Error initializing task FixedCreateCSharpManifestResourceName: Not registered task FixedCreateCSharpManifestResourceName.</p></blockquote>

<p>調べたときに見た情報の中には .csproj ファイルがどーのこーの書いてあったので、開いてみると、何やら以前のバージョンが残ってた。</p>

<p>ので、その行を削除してソリューションを開き直し、ビルドしたらエラーはなくなった。</p>

<figure class='code'><figcaption><span>xxx.csproj</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>   <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">&quot;$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>これ削除→  <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">&quot;..\packages\Xamarin.Forms.1.2.3.6257\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets&quot;</span> <span class="na">Condition=</span><span class="s">&quot;Exists(&#39;..\packages\Xamarin.Forms.1.2.3.6257\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets&#39;)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">&quot;..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets&quot;</span> <span class="na">Condition=</span><span class="s">&quot;Exists(&#39;..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets&#39;)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">&quot;..\packages\Xamarin.Forms.2.3.0.107\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets&quot;</span> <span class="na">Condition=</span><span class="s">&quot;Exists(&#39;..\packages\Xamarin.Forms.2.3.0.107\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets&#39;)&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>エラーは、ね。</p>

<h2>参考</h2>

<ul>
<li><a href="https://rksoftware.wordpress.com/2016/04/24/001-16/">Xamarin Studio がビルドエラーでビルドできなくなった話 | rksoftware</a></li>
<li><a href="http://stackoverflow.com/questions/27873185/error-error-initializing-task-xamlg-not-registered-task-xamlg">xamarin &ndash; error : Error initializing task XamlG: Not registered task XamlG &ndash; Stack Overflow</a></li>
<li><a href="http://stackoverflow.com/questions/34501301/error-compiling-xamarin-forms-new-project">Error compiling Xamarin Forms new project &ndash; Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms 向けの地図ライブラリ「Xamarin.Forms.GoogleMaps」をリリースしました]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps/"/>
    <updated>2016-06-27T23:59:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/27/release-xamarin-forms-googlemaps</id>
    <content type="html"><![CDATA[<p>Xamarin.Forms で使える地図ライブラリは、公式が出している</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/">Xamarin.Forms.Maps</a> &ndash; Maps models and renderers for Xamarin.Forms</li>
</ul>


<p>があるのですが、非常に機能が少ないです（ピンがおけるだけで、図形の描画すらできません）。</p>

<!--more-->


<p>なので、別な選択肢としての「Xamarin.Forms向け地図ライブラリ」を開発し始めました。</p>

<p>それがこちら</p>

<ul>
<li><a href="https://www.nuget.org/packages/Xamarin.Forms.GoogleMaps/">Xamarin.Forms.GoogleMaps</a> &ndash; Yet another Maps library for Xamarin.Forms that optimized for Google maps.</li>
</ul>


<p>です。</p>

<p>iOS では MapKit に代わり <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS</a> を使用し、 Android/iOS 共に Google Maps に特化することで、API の共通化を容易にし、恐らくAPI共通化の足枷になっているであろう UWP(Bing maps) のサポートは最小限に留めています。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_01.png" alt="screenshot1" /></p>

<h2>現在の機能</h2>

<p>現在のバージョンは 1.1.0 。
公式の Xamarin.Forms.Maps に比べて、ライン・ポリゴン・円を追加できるようになりました。</p>

<p><img src="https://dl.dropboxusercontent.com/u/264530/qiita/xamarin_forms_googlemaps_intro_02.png" alt="screenshot2" /></p>

<p>詳しい比較は</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/wiki/Xamarin.Forms.Maps-%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83">Xamarin.Forms.Maps との比較 &ndash; Xamarin.Forms.GoogleMaps Wiki</a></li>
</ul>


<p>にあります。</p>

<h2>サンプルプログラム</h2>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/tree/master/XFGoogleMapSample">Xamarin.Forms.GoogleMaps/XFGoogleMapSample &ndash; github</a></li>
</ul>


<p>にあります。</p>

<p>Google Maps の APIキーを Android / iOS それぞれで取得する必要があります。</p>

<ul>
<li>Android &ndash;  <a href="http://www.buildinsider.net/mobile/xamarintips/0020">Xamarin.Androidで地図を表示するには？（Google Maps使用） &ndash; Build Insider</a></li>
<li>iOS &ndash; <a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS  |  Google Developers</a> の「クイック スタート ステップ」
をそれぞれ参照してください。</li>
</ul>


<h2>オープンソース</h2>

<p><a href="http://open.xamarin.com/">Xamarin Open Source SDK</a> により、 Xamarin.Forms のソースコードもオープンソースになったので、 <a href="https://github.com/xamarin/Xamarin.Forms/tree/master/Xamarin.Forms.Maps">Xamarin.Forms/Xamarin.Forms.Maps &ndash; github</a> などを Fork して作りました。</p>

<p>このライブラリ自体もオープンソースであり、</p>

<ul>
<li><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps">Xamarin.Forms.GoogleMaps: Map library for Xamarin.Forms using Google maps API</a></li>
</ul>


<p>で開発しています。（スターを付けてもらえると作者がよろこびます）</p>

<p><a href="https://github.com/amay077/Xamarin.Forms.GoogleMaps/issues">要望、コメントなど</a>もらえると嬉しいです。よろしくおねがいします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin.Forms の画面(Page)のライフサイクルイベントについて]]></title>
    <link href="http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles/"/>
    <updated>2016-06-08T00:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/06/08/xamarin-forms-page-lifecycles</id>
    <content type="html"><![CDATA[<p>ちょっと誤解してた＆情報がなかったのでまとめてみました。</p>

<!--more-->


<h2>モバイルアプリでの「画面」の基本的なライフサイクルイベント</h2>

<p>まあ Android と iOS についてですが。</p>

<p>画面が表示される時のイベント（コールバック）は、簡潔には以下のようになります。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume|</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause|</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy|</td>
</tr>
</tbody>
</table>


<p>厳密にはもっと細かく、〜される前と後が iOS と Android で微妙に異なるのでだいたいこんな感じという程度と思って下さい。</p>

<p>もう少し細かいイベントは以前調べた以下を参考にしてみてください。</p>

<ul>
<li><a href="http://qiita.com/amay077/items/52a0b0da97fe455abc08">iOS と Android で画面表示時のコールバックを比較する &ndash; Qiita</a></li>
</ul>


<h2>Xamarin.Forms での画面のライフサイクルイベント</h2>

<p>Xamarin.Forms では、上表のライフサイクルイベントは、アプリケーション
(Application) と、画面(Page) のイベントに分かれています。</p>

<p>表に、Xamarin.Forms を追加してみました。</p>

<table>
<thead>
<tr>
<th></th>
<th>順番</th>
<th>イベント</th>
<th>iOS(UIViewController)</th>
<th>Android(Activity)</th>
<th>Xamarin.Forms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1</td>
<td>画面がロードされる(た)時</td>
<td>viewDidLoad</td>
<td>onCreate</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnAppearing(">Page.OnAppearing</a>/)|</td>
</tr>
<tr>
<td></td>
<td>2</td>
<td>画面が表示される(た)時</td>
<td>viewDidAppear</td>
<td>onResume</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnResume(">Application.OnResume</a>/) <strong>※要注意</strong> |</td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>画面が非表示になる(った)時</td>
<td>viewDidDisappear</td>
<td>onPause</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Application.OnSleep(">Application.OnSleep</a>/)</td>
</tr>
<tr>
<td></td>
<td>4</td>
<td>画面がアンロードされる(た)時</td>
<td>viewDidUnload</td>
<td>onDestroy</td>
<td><a href="https://developer.xamarin.com/api/member/Xamarin.Forms.Page.OnDisappearing(">Page.OnDisappearing</a>/)|</td>
</tr>
</tbody>
</table>


<p>画面のロード時（<code>viewDidLoad/onCreate</code>）に相当するのは、Xamarin.Forms では <code>OnAppearing</code>、逆にアンロード時は <code>OnDisAppearing</code> です（名称が <code>viewDidAppear</code> に似てるので、画面の表示時かと勘違いしてました）。</p>

<p>画面の表示／非表示時のイベントは、画面でなく Application クラスの <code>OnResume</code>, <code>OnSleep</code> で提供されます。</p>

<p>要注意なのは <code>OnResume</code> です。これ、画面が表示される <strong>初回はイベントが発生しません</strong>。
一度、アプリを背面に退避し、再度前面に持ってきたときに初めて <code>OnResume</code> が呼び出されます。iOS や Android の <code>viewDidAppear / OnResume</code> と同じだと思ってつかうとハマります。</p>

<p>基本的には、 <code>OnAppearing</code> でリソースの確保を、 <code>OnDisAppearing</code> で解放をすればよさそうです。</p>

<p>GPS など、電池消費の激しいリソースを使う場合は、アプリが背面へ隠れたら直ちにそのリソースを解放した方がよいです。その場合は <code>OnResume-OnSleep</code> を使いますが、前述の通り、画面初回表示時は <code>OnResume</code> が走らないので、少し工夫が必要です。</p>

<h2>画面が回転された時</h2>

<p>端末を横向きに回転すると、Android では Activity が破棄されて再度生成される事が知られています。</p>

<p>Xamarin.Forms では Android でもそのような事はなく、 <code>Page.OnSizeAllocated</code> が呼び出されるだけです(iOS も当然同じ)。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/working-with/app-lifecycle/">Working with the App Lifecycle &ndash; Xamarin</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[de:code 2016 に参加した感想]]></title>
    <link href="http://blog.amay077.net/blog/2016/05/27/impression-of-decode16/"/>
    <updated>2016-05-27T00:00:00+09:00</updated>
    <id>http://blog.amay077.net/blog/2016/05/27/impression-of-decode16</id>
    <content type="html"><![CDATA[<p>Microsoft の開発者向けイベント <a href="https://www.microsoft.com/ja-jp/events/decode/2016/">de:code 2016</a> に参加させてもらいましたので感想を書きます。</p>

<!--more-->


<p>Microsoft のカンファレンスに参加するのは何年ぶりでしょう、パシフィコ横浜でやってた Tech・ED とか Tech・Days 以来です。</p>

<p>ここ数年 Android や iOS もモバイルアプリ開発ばかりやってきて、 Xamarin で C# に戻ってきて〜って感じだったので、 「Xamarin 以外の Microsoft テクノロジーを広く浅く知る」 という目的で参加しました。</p>

<h1>セッションの感想</h1>

<h2>Day1</h2>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/keynote.aspx">Keynote</a></h3>

<p>なんかこういう全体像まとめるの苦手、というか何番煎じなので、他の人のまとめをみてくれい（爆</p>

<p>とりあえず、
<strong>「りんな が想像以上に自然すぎて、LINE で会話してるのをカミさんに見られたら、完全に誤解されそう」</strong>
です。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-013">DEV-013 まだまだ進化が止まらない！開発者のための Microsoft Azure 最新機能</a></h3>

<p>Azure の現在の提供機能を知りたくて。</p>

<p>Scale Sets、Batch Service、Container Service、Service Fabric、Azure Function など、だいたい AWS を後追いして遜色ない感じになってるのかなー、と。</p>

<p>Region は AWS や Google より多い（日本にも２つある）のは初めて知った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#CLT-006">CLT-006 HoloLens 概要 〜未来を見る新しい方法〜</a></h3>

<p>期待値の高い HoloLens の概要を知った。
AR や VR との対比で MR(複合現実：Mixed Reality)という。
Google Glass(AR)、 Oculus Rift(VR) は体験したことがあるので、HoloLens も体験すると、ものすごくオドロキがあるんだろうな。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">HoloLens でスプラトゥーンやりたい <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/734998372906471424">2016年5月24日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とツイートしたが、その時は VR(仮想現実) の文脈で言ってたことにあとで気づいた。
MR:複合現実で考えると、目の前にある現実のもの（机とか家の壁とか）にインクで色が塗れる、「でもそれどうやって多人数対戦型ゲームになるんだ？」とかまだまだ発想力が乏しい。</p>

<p>（例のおさわり会、２周目やってほしいです。。。）</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-020">DEV-020 Bot Framework &amp; Cognitive Services 〜自動応答ソリューション開発に挑戦〜</a></h3>

<p>Bot Framework と Cognitive Services を使ってBOTを作る様子を見た。
まだ理解できていない感じ、どこまでプログラムしないといけないのか、とか。</p>

<h2>Day2</h2>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#ARC-003">ARC-003 モダン Web：たった今と、ほんの少し未来のはなし</a></h3>

<p>あんまりWeb界隈に詳しくないけど、Twitterで流れてくる情報はウォッチしてたので、だいたい知ってはいた感じ。
セッション時間足りないよなあと思いつつも、react.js や仮想DOM についての話も聞きたかった。</p>

<p>今後の要素として Web Components, Progressive Web Apps, Native Assembly があったが Safari が軒並み「動作：×」になってて、以前見かけた「将来 Safari が IE のようになる」ってツイート思い出した、そうなんでしょうか？</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-011">DEV-011 TypeScript 〜Any browser, Any host, Any OS. Open Source〜</a></h3>

<p>TypeScript も存在は知りつつ放置してたので最新情報を収集。
Visual Studio Code で C# ライクにコードが書けて、ちょうど今仕事で Javascript を書いてるので、すぐにでも使ってみようと思った。
tsc が出力する Javascript コードを参考にして Javascript を書いてもいいかな、とも思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#SNR-018">SNR-018 Azure と NEST で始める Elastic Stack</a></h3>

<p>全文検索の Elasticsearch 周りのセッション。
仕事で Apache Solr を知って、その後 <a href="http://qiita.com/amay077/items/9fb99ab9e6801033977d">Elasticsearch を知ってためして</a>、<a href="http://qiita.com/amay077/items/ca1ce05ac0d295e7c323">Auto-Rebalancing に感動して</a> 仕事でも採用されて現在に至る。</p>

<p>Azure との関連はこじつけｗに近かったが、 .NET のクライアントライブラリがあるのは知らなかった。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#CHK-005">CHK-005 All about 機械学習！ 〜機械学習は魔法の杖か、単なる Big Data のはけ口か〜</a></h3>

<p>タイトルは釣りｗ
実際は、聴講者が登壇者へ質問を投げつけていくチョークトーク。
スピーカーお二人が R&amp;D と実務としてデータ解析を行われている方だったので、とても説得力があった。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">データマイニングについて。「陳腐化したデータのなかに宝物なんてない」 <a href="https://twitter.com/hashtag/roomH?src=hash">#roomH</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735329131051778048">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>データマイニングとの違いとは？という問いに対して。
「人が」「時間をかけて」「データを解析」し、結果が出てから実装していては遅いし、そういう時代は終わった。だからこその機械学習、解析まで機械同士でやってくれと。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Q:どのくらい勉強しなければならないのか？<br>A:時間軸次第。２～３年先には機械学習もパターン化すると予想。その後にはアルゴリズムを選択する必用もなくなると思う。 <a href="https://twitter.com/hashtag/roomH?src=hash">#roomH</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735333613085020160">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>エンジニアが機械学習についてどこまで学習する必要があるのか？という問いに対して。識者の方々が、割と短い期間の内に、機械学習がコモディティ化すると予想されていて、ちょっと驚きと安心。わかりました勉強しませんｗ いろいろな機械学習のツールやサービスを知って、使うフェーズに入っているんだなーと思った。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Q. 機械学習は人間の役割の置き換えになるのか？<br>人間の経験や感覚は、正しい確率が高いわけではない。測定可能なデータをお元に推測ができる機械学習は、多くの場で有用だろう。（筆者意訳）<a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a> <a href="https://twitter.com/hashtag/RoomH?src=hash">#RoomH</a></p>&mdash; dz づ (@dz_) <a href="https://twitter.com/dz_/status/735337240327524352">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>機械学習によって仕事を奪われる人をどうやって説得する？という問いに対して。
かしこい人ほど &ldquo;カンの妥当性の低さ&rdquo; を自認しているので、ニーズはあるよなー、と思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-002">DEV-002 .NET Core / ASP.NET Core が実現するクロスプラットフォーム .NET の今と未来</a></h3>

<p>「.NET Framework はマルチプラットフォームにできます（やらないけどな）」と言ってた時代がなつかしい、実際に Mac や Linux で「動く」 .NET の話。</p>

<p>Xamarin は Mono を使っているけれど、今後は .NET Core に寄せていく(と思われる)ので、今後も要チェック。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Mac + Xamarin Studio で普通に <a href="https://t.co/KM1FpPjJ4s">https://t.co/KM1FpPjJ4s</a> Webアプリが作れてちょっと感動した。 <a href="https://twitter.com/hashtag/roomB?src=hash">#roomB</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735344072546783232">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>実際のところ、VS より Xamarin Studio の方が機能が少なくて軽量なので、サクッと Webアプリ作るには Xamarin Studio でいいじゃん？とか思った。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DEV-023">DEV-023 Xamarin Deep Dive &ndash; Xmarin.Forms の可能性</a></h3>

<p>「Xamarin.Forms？まだ早いでしょ」派の人間だけど、「なかなかイケるらしい」という噂を聞いてたので参加した。
りんなセッションに客を取られたもののほぼ満員だった。</p>

<p>(Alpha版だから？)相変わらずイレギュラーな動作はするものの、 Behavior, Effects, Previewer など、だいぶ使えるようになってきた感じ。</p>

<p>DataPages は、カスタマイズできると強そう。Workbooks は良いぞ！</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/RoomF?src=hash">#RoomF</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a><br>Xamarin Workbooks ！<br>「実行できる仕様書」みたいなやつ！<a href="https://t.co/4gkVcVzALR">https://t.co/4gkVcVzALR</a> <a href="https://t.co/SLSfKMYHoE">pic.twitter.com/SLSfKMYHoE</a></p>&mdash; ちょまど@MS入社して2ヶ月 (@chomado) <a href="https://twitter.com/chomado/status/735377175935913984">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p><a href="https://blog.xamarin.com/browse-through-the-evolve-2016-mobile-app-source-code/">Evolve アプリ</a> も Xamarin.Forms を使ってるので、ロックイン覚悟でそろそろ本格的に使ってみますか、という気になった（ただし Mac でな）。</p>

<h3><a href="https://www.microsoft.com/ja-jp/events/decode/2016/session.aspx#DOO-012">DOO-012 FinTech だけじゃモッタイ無い！ブロックチェーンとクラウドが作る未来</a></h3>

<p>FinTech とか ブロックチェーン などのバズワードを追ってなかったので聴講。
何気に一番の発見だった。
ブロックチェーン と プログラムを動かす事 が関係あるとは思ってなかった。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">ブロックチェーンの今後として契約と履行がある。履行＝プログラムの実行、なので開発者もブロックチェーンについて知っておいた方がよい。 <a href="https://twitter.com/hashtag/roomG?src=hash">#roomG</a> <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735396922966564864">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>知らないワードのオンパレードだったが、開発者としても今後ウォッチしていかないといけない事が分かって、聞いてよかった。</p>

<p>Smart Contract, Ethereum およびこれらの要素を利用したサービス、ビジネスについてウォッチ必須。</p>

<p>とりあえず、 <strong>Smart Contract Conference</strong> というイベントが開催されるそうなので、これは是非行きたい。</p>

<h1>その他の感想</h1>

<h2>Xamarin!Xamarin!Xamarin!</h2>

<p>Xamarin のセッションが４つも！Day2は常にどこかでセッションやってる感じでしたね。
そのどれもが満員だった模様で関心の高さが伺えました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">もう Xamarin だけで 1day イベントやったら感 <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735302315146498048">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>って感じですね（スピーカーワンチャンある？）。</p>

<h2>Google や Apple の開発者向けイベントと比べて</h2>

<p>まず 米国の <a href="https://build.microsoft.com/">//build</a> というイベントの後に、国内でも公式なイベントとして de:code を開催してくれる、これは素直にありがたいです。</p>

<p>「技術者は英語を聞けて読めて米国から発信される最新情報をキャッチアップすべき」という意見には賛同しつつも、全ての人がそうはなれない訳で、そういった方々にもキチンと企業として情報発信していく、それを専門とするエヴァンジェリストが国内にたくさん居るのはマイクロソフトの良いところかなと思います。</p>

<p>エヴァンジェリストの方々の多様性にも驚きました。踊ったり、コスプレしたり、漫画描いたり、プレゼンの神だったり…。その多様な活動が話題になることも含めて、今の Google や Apple にはできない、効果の高いことだと思います。</p>

<p>ただ、開発者向けイベントには、その全てが最先端テクノロジーを利用して行われる事を期待してしまうのですが、</p>

<ol>
<li>公式なイベントアプリがない（<a href="https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched">Google I/O にはある</a>）</li>
<li>参加証を紙で用意しないといけない</li>
<li>アンケートも紙で書かないといけない</li>
</ol>


<p>あたりが残念、今後「変化」を期待したいところです。</p>

<p>特に 1. に関しては、Microsoft が買収した Xamarin の単体のイベント &ldquo;Evolve&rdquo; でも Win/Android/iOS全対応の <a href="https://blog.xamarin.com/download-the-xamarin-evolve-2016-conference-app/">公式アプリ</a> を用意している（Microsoft の技術をふんだんに使って）わけなので、 mobile first をうたうなら、このくらいやって欲しかったなあという印象です（これは build もそうですが）。</p>

<p>大抵のイベントアプリには、</p>

<ul>
<li>聞きたいセッションをお気に入り登録する機能（Azure で管理）</li>
<li>フロアマップ</li>
<li>セッションへのフィードバックを送る機能</li>
</ul>


<p>があります。アプリがあるだけでもイベント運営がいろいろ改善しそうな気がします。</p>

<p>また、技術コミュニティ/関連企業が主催する Android や iOS の国内イベントでは、有志の開発者がコミュニティ主導でイベントアプリを開発しています。</p>

<ul>
<li><a href="http://konifar.hatenablog.com/entry/2016/02/11/031257">オープンソースでDroidKaigiのカンファレンスアプリ作ってる &ndash; Konifar&rsquo;s WIP</a></li>
<li><a href="https://github.com/tryswift/trySwiftApp">tryswift/trySwiftApp: try! Swift Conference App</a></li>
</ul>


<p>こういった動きができるととても良いと思います（そのためにはイベント情報を Microsoft がオープンデータにしてくれる必要があるわけですが）。</p>

<h2>あと感じたことをだらだら書く</h2>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">「○年後は○○だ！」とか明確なビジョンが見えなくても、数年後にはなんとなく思ってたような事やってるし、その為の情報を仕入れにこういうイベントに参加するんだよな。そしてそれは会社ではなく個人の問題。だから来年も来ます。 <a href="https://twitter.com/hashtag/decode16?src=hash">#decode16</a></p>&mdash; 3度目S+のあめいスピナーデコ (@amay077) <a href="https://twitter.com/amay077/status/735414344226242561">2016年5月25日</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>参加者はスーツの人が多かったですね。
高額なイベントだし、業務の一環で参加しているとしたら当然会社へ戻って報告の義務があるのでしょう、スライドをカメラでパシャパシャ撮って、一生懸命メモ取ってる人も居ました（かくいう自分も、会社のカネで参加した Tech・ED はそうでしたね）。
会社のカネで参加した人は感想をブログに書くのは抵抗があるのでしょうね。明確にそれを禁止する会社だとしたら残念な会社だと思います。</p>

<p>幸い私の勤め先はじゃんじゃん情報発信してけ的なスタンスだったので良かったですが、それでもこういうイベントは個人(の目的)として参加しています、好きでエンジニアやってるんで。</p>

<p>あと、明確な目標を持つ・決めるのって苦手で、それより
「目を閉じてなんとなく”匂い”のする方に手探りで歩いていたら、なんとなく望んでいた事になってた気がする」
って感じですかね。”匂いを嗅ぐ”のがこういうイベントで、ストリーミングとかではなかなかできないですね。</p>

<p>最後に、こういうイベントではぼっちな事が多かったんですが、Xamarin について数年前からブログに書いてた関連で、 JXUG というコミュニティの皆さんと仲良くさせてもらい、現地でもあいさつ、お話できました。</p>

<p>これについては KeyNote で伊藤執行役が、</p>

<blockquote><p>「エンジニアがコミュニティに参加することを制限したり、就業時間以外や休日に限定したり、会社名を伏せて参加するといった体質を持っていることにも問題がある。日本のエンジニアが、もっと自由に情報交換をしたり、スキルを磨ける環境を作ることに、日本マイクロソフトとしても支援をしたい」</p></blockquote>

<p>− from   <a href="http://cloud.watch.impress.co.jp/docs/news/20160525_758975.html">「日本のデベロッパーには国境を越えてほしい」～Microsoft・グッゲンハイマーCVP &ndash; クラウド Watch</a></p>

<p>と言われているので、会社のカネかどうかに関係なく、じゃんじゃんアウトプットしていきましょう。</p>

<p>ではまた来年！</p>
]]></content>
  </entry>
  
</feed>
