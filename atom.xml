<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Experiments Never Fail]]></title>
  <link href="http://amay077.github.com/atom.xml" rel="self"/>
  <link href="http://amay077.github.com/"/>
  <updated>2013-02-19T18:19:59+09:00</updated>
  <id>http://amay077.github.com/</id>
  <author>
    <name><![CDATA[amay077]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTC J で NETWORK_PROVIDER で位置測位した時の機種依存バグ？]]></title>
    <link href="http://amay077.github.com/blog/2013/02/19/htc-j-networkprovider-bug/"/>
    <updated>2013-02-19T00:41:00+09:00</updated>
    <id>http://amay077.github.com/blog/2013/02/19/htc-j-networkprovider-bug</id>
    <content type="html"><![CDATA[<p><a href="mixi%20Engineers'%20Blog%20http://alpha.mixi.co.jp/2013/11572/">Androidの機種依存問題を吸収するプロジェクトAndroid-Device-Compatibilityを公開したお話</a> を見て、あーそう言えばこんなんあったなーと思い出したのでメモ。</p>

<h2>症状</h2>

<p>下記条件を満たす時に、LocationManager.requestLocationUpdates すると、最新の位置が取得されず、<strong>前回測位した位置</strong> が返される。</p>

<p>時刻は更新されてたか、、、あーどうだったかな。</p>

<!-- more -->


<h2>条件</h2>

<ul>
<li>NETWORK_PROVIDER で位置を取得した場合（GPS じゃない）</li>
<li>WiFi が無効の場合（つまり携帯電話の基地局のみを使った測位の場合）</li>
<li>スリープ中な場合</li>
<li>HTC J である(IS03, Nexus S では発生してない。 HTC J Butterfly はわからない)</li>
</ul>


<h2>こんな事してたら見つけた</h2>

<p>早い話が HexRinger なんですが、このアプリは、AlarmManager で一定時間毎に WiFi/基地局から位置を取得しています。デバッグで移動中のログを取ってたら、「この時間帯、電車で寝てたのになんか位置変わってないんだけどｗ」となりました。</p>

<h2>対策</h2>

<p>WakeLock する。ただし PARTIAL_WAKE_LOCK だとダメで、画面も起こしてやらないとダメだった。
SCREEN あるいは FULL_WAKELOCK が必要な常駐アプリって、最悪やん。</p>

<h2>いろいろ試した事とか推測</h2>

<ul>
<li>測位前に通信させればいけるか？と思ったけどダメだった。</li>
<li>そもそも「最寄りの基地局情報」がスリープ状態だと更新されないんじゃないか説。</li>
</ul>


<p>設置場所が山奥過ぎてこの地雷を踏む人はそうはいないと思いますが、「HTC J だけど問題ないよ？」「Butterfly でもダメだったわー」とかの情報あったらコメントください。 m(<em> </em>)m</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android の jUnit テストで Context が欲しい時]]></title>
    <link href="http://amay077.github.com/blog/2013/01/19/gets-context-on-android-junit/"/>
    <updated>2013-01-19T00:44:00+09:00</updated>
    <id>http://amay077.github.com/blog/2013/01/19/gets-context-on-android-junit</id>
    <content type="html"><![CDATA[<p>Activity のテストなら <code>ActivityInstrumentationTestCase2</code> 、 Service なら <code>ServiceTestCase</code> を使うべきなんでしょうけど、Android って事あるごとに Context が必要なので、ただのクラスライブラリのテストでも必要なことがシバシバ。</p>

<!-- more -->




<figure class='code'><figcaption><span>HogeTest.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HogeTest</span> <span class="kd">extends</span> <span class="n">InstrumentationTestCase</span> <span class="o">{</span>
</span><span class='line'>  <span class="cm">/** ApplicationContext を取得します */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="nf">getApplicationContext</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getInstrumentation</span><span class="o">().</span><span class="na">getTargetContext</span><span class="o">().</span><span class="na">getApplicationContext</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li>[androidの単体テスト(AndroidTestCase) - Androidのド肝] (http://blog.haw.co.jp/android/?p=471) - クラス図がとても役に立ちました</li>
<li><a href="http://stackoverflow.com/questions/5544205/accessing-application-context-from-testsuite-in-setup-before-calling-getactivi">android - Accessing application context from TestSuite in Setup() before calling getActivity() - Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps Android API v2 で OpenStreetMap を表示する]]></title>
    <link href="http://amay077.github.com/blog/2012/12/26/osm-on-googlemapv2/"/>
    <updated>2012-12-26T00:18:00+09:00</updated>
    <id>http://amay077.github.com/blog/2012/12/26/osm-on-googlemapv2</id>
    <content type="html"><![CDATA[<p>この記事は <a href="http://atnd.org/events/34052">FOSS4G Advent Calendar 2012</a> の 12/26 の記事です。</p>

<p>ベクトル地図が扱える新しい Google Maps Android API v2 については、<a href="http://qiita.com/items/7ad0244c0fb4b431e090">Google Map Android API v2 の v1 からの変更点メモ</a> で書きました。</p>

<p>ここでは、v2 で新しく追加された <code>TileOverlay</code> を使って、OpenStreetMap を重ねてみます。</p>

<h2>UrlTileProvider を使って OpenStreetMap を表示する</h2>

<p>SDK に同梱されるサンプル /extras/google/google_play_services/samples/maps の TileOverlayDemoActivity.java を見れば一目瞭然なので、それをベースにします。</p>

<!-- more -->


<h3>サンプルのコード</h3>

<figure class='code'><figcaption><span>TileOverlayDemoActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** This returns moon tiles. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">MOON_MAP_URL_FORMAT</span> <span class="o">=</span>
</span><span class='line'>        <span class="s">&quot;http://mw1.google.com/mw-planetary/lunar/lunarmaps_v1/clem_bw/%d/%d/%d.jpg&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">GoogleMap</span> <span class="n">mMap</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">setUpMap</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mMap</span><span class="o">.</span><span class="na">setMapType</span><span class="o">(</span><span class="n">GoogleMap</span><span class="o">.</span><span class="na">MAP_TYPE_NONE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">TileProvider</span> <span class="n">tileProvider</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UrlTileProvider</span><span class="o">(</span><span class="mi">256</span><span class="o">,</span> <span class="mi">256</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">synchronized</span> <span class="n">URL</span> <span class="nf">getTileUrl</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// The moon tile coordinate system is reversed.  This is not normal.</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">reversedY</span> <span class="o">=</span> <span class="o">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">-</span> <span class="n">y</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>           <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">,</span> <span class="n">MOON_MAP_URL_FORMAT</span><span class="o">,</span> <span class="n">zoom</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">reversedY</span><span class="o">);</span>
</span><span class='line'>            <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MalformedURLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">AssertionError</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">url</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">mMap</span><span class="o">.</span><span class="na">addTileOverlay</span><span class="o">(</span><span class="k">new</span> <span class="n">TileOverlayOptions</span><span class="o">().</span><span class="na">tileProvider</span><span class="o">(</span><span class="n">tileProvider</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>修正前のコードは、Google Moon のタイル画像を使用しています。</p>

<p>これを OpenStreetMap を使用するように改造します。</p>

<figure class='code'><figcaption><span>OsmTileOverlayDemoActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** This returns moon tiles. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">OSM_MAP_URL_FORMAT</span> <span class="o">=</span>
</span><span class='line'>        <span class="s">&quot;http://tile.openstreetmap.org/%d/%d/%d.png&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">GoogleMap</span> <span class="n">mMap</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">setUpMap</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mMap</span><span class="o">.</span><span class="na">setMapType</span><span class="o">(</span><span class="n">GoogleMap</span><span class="o">.</span><span class="na">MAP_TYPE_NONE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">TileProvider</span> <span class="n">tileProvider</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UrlTileProvider</span><span class="o">(</span><span class="mi">256</span><span class="o">,</span> <span class="mi">256</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">synchronized</span> <span class="n">URL</span> <span class="nf">getTileUrl</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">,</span> <span class="n">OSM_MAP_URL_FORMAT</span><span class="o">,</span> <span class="n">zoom</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
</span><span class='line'>            <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MalformedURLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">AssertionError</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">url</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">mMap</span><span class="o">.</span><span class="na">addTileOverlay</span><span class="o">(</span><span class="k">new</span> <span class="n">TileOverlayOptions</span><span class="o">().</span><span class="na">tileProvider</span><span class="o">(</span><span class="n">tileProvider</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>できました。うーん、簡単すぎる。
URL は OpenStreetMap のものを使います。y軸の値は、Google Moon では逆順となっていたのを正順のまま使用するだけです。</p>

<p>こんな感じで表示できます。</p>

<p><img src="https://dl.dropbox.com/u/264530/qiita/advent2012_osm.png" alt="OpenStreetMap on Google Map API" /></p>

<p>移動、拡大・縮小だけでなく、API v2 の恩恵で、回転やチルトもできるのが嬉しいですね。</p>

<h2>TileOverlay を透過させる</h2>

<p>さて、ベース地図を Google から他のものに差し替えてしまうならこれまでの使い方で十分でしょう。しかし Google のベクトル3Dグリグリ地図をベース地図として使いたいとは誰しもが思うことでしょう。</p>

<p>ここでは、Google地図の上に TileOverlay を透過で表示することにチャレンジしてみます。
ケースとしては、雨雲レーダーのメッシュや、統計メッシュなどを重ね合わせる事が考えられます。</p>

<p>さて、API v2 のもう一つの新機能 GroundOverlay には <a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/GroundOverlay#setTransparency(float">setTransparentcy</a> というズバリなメソッドがあり、それを使えば一発です。</p>

<p>しかし、TileOverlay とその関連クラスには、透過に関するメソッドは見当たりません。
そこで TileProvider でダウンロードされた画像データを直接弄って、透過にします。</p>

<p>TileProvider は文字通り <a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/Tile">Tile</a> を Provide します。そしてこの Tile はタイル画像データそのものです。</p>

<p><a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/Tile#data">Tile.data</a> の説明には次のように記述があります。</p>

<blockquote><p>A byte array containing the image data. The image will be created from this data by calling <a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/null#decodeByteArray(byte[],%20int,%20int">decodeByteArray(byte[], int, int)</a>).</p></blockquote>

<p>つまりこのプロパティの中身を透過させてあげれば良さげ、という事になります。</p>

<p>上記のコードで使用した UrlTileProvider の <a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/UrlTileProvider#getTile(int,%20int,%20int">getTile</a> を override して…と思ったら、
＿人人人人人人人人人＿
＞　突然の final！　＜
￣<sup>Y<sup>Y<sup>Y<sup>Y<sup>Y<sup>Y<sup>Y<sup>￣</sup></sup></sup></sup></sup></sup></sup></sup>
という事で override できません。</p>

<p>仕方ががないので、独自の TileProvider を別途用意して、UrlTileProvider を内包する形で <code>TransparencyUrlTileProvider</code> というクラスを実装します。</p>

<figure class='code'><figcaption><span>TransparencyUrlTileProvider.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TransparencyUrlTileProvider</span> <span class="kd">implements</span> <span class="n">TileProvider</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">OSM_MAP_URL_FORMAT</span> <span class="o">=</span> <span class="s">&quot;http://tile.openstreetmap.org/%d/%d/%d.png&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">_transparency</span><span class="o">;</span> <span class="c1">// 透過率(0〜255)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">UrlTileProvider</span> <span class="n">_osmTileProv</span><span class="o">;</span> <span class="c1">// 内包する TileProvider</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">TransparencyUrlTileProvider</span><span class="o">(</span><span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transparency</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">_transparency</span> <span class="o">=</span> <span class="n">transparency</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">_osmTileProv</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UrlTileProvider</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="n">URL</span> <span class="nf">getTileUrl</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">,</span> <span class="n">OSM_MAP_URL_FORMAT</span><span class="o">,</span> <span class="n">zoom</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
</span><span class='line'>              <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>              <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MalformedURLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">AssertionError</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">url</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Tile</span> <span class="nf">getTile</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Tile</span> <span class="n">tile</span> <span class="o">=</span> <span class="n">_osmTileProv</span><span class="o">.</span><span class="na">getTile</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">zoom</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// TODO ここで Tile の透過処理を行う</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">tile</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使う側は、こんな感じになります。</p>

<figure class='code'><figcaption><span>OsmTileOverlayDemoActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">GoogleMap</span> <span class="n">mMap</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">setUpMap</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// mMap.setMapType(GoogleMap.MAP_TYPE_NONE); ベース地図は消さない</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mMap</span><span class="o">.</span><span class="na">addTileOverlay</span><span class="o">(</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">TileOverlayOptions</span><span class="o">()</span>
</span><span class='line'>        <span class="o">.</span><span class="na">tileProvider</span><span class="o">(</span>
</span><span class='line'>            <span class="k">new</span> <span class="nf">TransparencyUrlTileProvider</span><span class="o">(</span><span class="mi">256</span><span class="o">,</span> <span class="mi">256</span><span class="o">,</span> <span class="mi">100</span><span class="o">)));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまでで改造前と同じく OpenStreetMap が「非透過で」表示されるのは確認できます。</p>

<p>次にいよいよ Bitmap の透過処理です。
まず、Tile から Bitmap を抜き出します。API リファレンスによると、<a href="https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/model/Tile#data">Tile.data</a> というメンバがあるハズが…見つかりません。代わりに <code>Tile.bM</code> という byte[] なメンバがあります。こいつで間違いないでしょう。</p>

<p>Tile.bM の byte[] から Bitmap インスタンスを生成します。</p>

<pre><code>Bitmap bitmap = BitmapFactory.decodeByteArray(tile.bM, 0, tile.bM.length);
</code></pre>

<p>次に透過処理ですが、Android ではちょっと面倒なようです。
以下のサイトを参考にさせて頂いて、関数を作成しました。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/hypercrab/20110730/1312038162">Android: Bitmap の背景を透明にする - 入隠者通信 ～病を嗜む～</a></li>
</ul>


<figure class='code'><figcaption><span>makeTransparentBmp.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">Bitmap</span> <span class="nf">makeTransparentBmp</span><span class="o">(</span><span class="kd">final</span> <span class="n">Bitmap</span> <span class="n">bmp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transparency</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>     <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="n">bmp</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
</span><span class='line'>     <span class="kt">int</span> <span class="n">height</span> <span class="o">=</span> <span class="n">bmp</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
</span><span class='line'>     <span class="kt">int</span><span class="o">[]</span> <span class="n">pixels</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">width</span> <span class="o">*</span> <span class="n">height</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">createBitmap</span><span class="o">(</span><span class="n">width</span><span class="o">,</span><span class="n">height</span><span class="o">,</span><span class="n">Bitmap</span><span class="o">.</span><span class="na">Config</span><span class="o">.</span><span class="na">ARGB_8888</span> <span class="o">);</span>
</span><span class='line'>     <span class="n">bmp</span><span class="o">.</span><span class="na">getPixels</span><span class="o">(</span><span class="n">pixels</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">);</span>
</span><span class='line'>     <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">height</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>       <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">width</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>           <span class="kt">int</span> <span class="n">pixel</span> <span class="o">=</span> <span class="n">pixels</span><span class="o">[</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">*</span> <span class="n">width</span><span class="o">];</span>
</span><span class='line'>           <span class="n">pixels</span><span class="o">[</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">*</span> <span class="n">width</span><span class="o">]</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">argb</span><span class="o">(</span><span class="n">transparency</span><span class="o">,</span>
</span><span class='line'>                   <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">(</span><span class="n">pixel</span><span class="o">),</span> <span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">(</span><span class="n">pixel</span><span class="o">),</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">(</span><span class="n">pixel</span><span class="o">));</span>
</span><span class='line'>       <span class="o">}</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'>     <span class="n">bitmap</span><span class="o">.</span><span class="na">eraseColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">argb</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
</span><span class='line'>     <span class="n">bitmap</span><span class="o">.</span><span class="na">setPixels</span><span class="o">(</span><span class="n">pixels</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>     <span class="k">return</span> <span class="n">bitmap</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>では TODO の所に組み込みます。</p>

<figure class='code'><figcaption><span>TransparencyUrlTileProvider.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TransparencyUrlTileProvider</span> <span class="kd">implements</span> <span class="n">TileProvider</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">前略</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Tile</span> <span class="nf">getTile</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">zoom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Tile</span> <span class="n">tile</span> <span class="o">=</span> <span class="n">_osmTileProv</span><span class="o">.</span><span class="na">getTile</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">zoom</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// Tile の透過処理を行う</span>
</span><span class='line'>       <span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeByteArray</span><span class="o">(</span><span class="n">tile</span><span class="o">.</span><span class="na">bM</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">tile</span><span class="o">.</span><span class="na">bM</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>       <span class="n">Bitmap</span> <span class="n">transparentBmp</span> <span class="o">=</span> <span class="n">makeTransparentBmp</span><span class="o">(</span><span class="n">bmp</span><span class="o">,</span> <span class="n">_transparency</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="c1">// Tile を作り直す</span>
</span><span class='line'>      <span class="n">ByteArrayOutputStream</span> <span class="n">bos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteArrayOutputStream</span><span class="o">();</span>
</span><span class='line'>      <span class="n">transparentBmp</span><span class="o">.</span><span class="na">compress</span><span class="o">(</span><span class="n">CompressFormat</span><span class="o">.</span><span class="na">PNG</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">bos</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Tile</span> <span class="n">tranparentTile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Tile</span><span class="o">(</span><span class="n">tile</span><span class="o">.</span><span class="na">width</span><span class="o">,</span> <span class="n">tile</span><span class="o">.</span><span class="na">height</span><span class="o">,</span> <span class="n">bos</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">tranparentTile</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">以下略</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>動かしてみます。</p>

<p><img src="https://dl.dropbox.com/u/264530/qiita/advent2012_osmwithg.png" alt="OpenStreetMap with Google Map API" /></p>

<p>これは、GoogleMap の衛星写真の上に OpenStreetMap を透過して重ねた例です（分かりづらい</p>

<h2>まとめ</h2>

<p>このように Google Maps Android API v2 では、TileProvider を使って、タイル地図画像を簡単に表示させることができます。</p>

<p>Google Maps Javascript API や、MapKit でも他のタイル地図画像を利用することはできましたが、それらよりもより簡単に使えます。ハックというよりも API が公式にサポートしている、という感じです。</p>

<p>これまで Android には、Javascript の OpenLayers や、 iOS の route-me のような、地図タイルデータソースを扱える地図SDKはありませんでした（いや OsmDroid くらいか）</p>

<p>それを Google Maps Android API v2 がサポートしたのですから使わない手はありません。地図SDK としては一番高性能で事実上標準なのですから。</p>

<p>これに、OpenStreetMap や電子国土地図、衛星画像などの背景地図や、統計データメッシュや、アメダスなどの主題図的なタイル地図が重ねられるといろいろできそうだなあ、という感じです。
(Yahoo! さんの<a href="http://weather.yahoo.co.jp/weather/zoomradar/">雨雲レーダー</a> のタイル画像もこっそり試してみて「こりゃ面白い」と思ったので公式に提供して欲しいですｗ)</p>

<p>私にはタイル地図データを作る知識は無いので、タイル地図のポータルみたいなものがあるといいなあと思います。 <a href="https://www.facebook.com/chitaikyo">地図タイル工法協会</a> さんよろしくおねがいします。</p>

<p>というわけで、Android で地図使いたいなら(今のところ) Google Maps API v2 一択！ 他社さんもガンバレ！</p>

<p>※あれ？このネタどこが FOSS4G だ？ま、いっか。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android/EditTextでIMEの未確定文字列が確定された瞬間(のフォーク)]]></title>
    <link href="http://amay077.github.com/blog/2012/12/26/edittext-ontextchanged/"/>
    <updated>2012-12-26T00:00:00+09:00</updated>
    <id>http://amay077.github.com/blog/2012/12/26/edittext-ontextchanged</id>
    <content type="html"><![CDATA[<p>Android の EditText の文字列と、String 変数値を同期させたいケースって結構あると思うんですけど、<a href="http://developer.android.com/reference/android/view/View.OnFocusChangeListener.html">LostFocus</a> みたいなのでやると、オンフォーカスな状態で Activity が閉じられた時に LostFocus が呼ばれなくてあぼんとなるのは VB6あがりのプログラマ(=私)なら誰もが経験するんじゃないでしょうか？</p>

<!-- more -->


<p>じゃあ <a href="http://developer.android.com/reference/android/text/TextWatcher.html#onTextChanged(java.lang.CharSequence,%20int,%20int,%20int">onTextChanged</a> だぜ、って仕込んでみると、Android のこれは IME で変換中の文字列もバンバン飛んで来まして大変使い勝手が悪い。(サジェストなんかする際には必要なんでしょうけども)</p>

<p>例えば、以下で紹介されている方法</p>

<ul>
<li><a href="http://blog.global-eng.co.jp/android/2011/04/08/textwatcher%e3%81%a7edittext%e3%81%ae%e5%85%a5%e5%8a%9b%e5%86%85%e5%ae%b9%e3%82%92%e3%83%aa%e3%82%a2%e3%83%ab%e3%82%bf%e3%82%a4%e3%83%a0%e3%81%ab%e5%8f%8d%e6%98%a0%e3%81%99%e3%82%8b/">TextWatcherでEditTextの入力内容をリアルタイムに反映する | GE Android Blog</a></li>
</ul>


<p>を実装しますと、IME確定前の文字列もじゃんじゃん同期してくれちゃいます。</p>

<p>これに起因したであろう Android アプリもありまして(Instagram とか。今は治ってる。)、なんとかならんかなーと思っていました。</p>

<p>そんな時、こちら↓</p>

<ul>
<li><a href="http://www.spiritek.co.jp/spkblog/2012/10/25/androidedittext%e3%81%a7ime%e3%81%ae%e6%9c%aa%e7%a2%ba%e5%ae%9a%e6%96%87%e5%ad%97%e5%88%97%e3%81%8c%e7%a2%ba%e5%ae%9a%e3%81%95%e3%82%8c%e3%81%9f%e7%9e%ac%e9%96%93/">Android/EditTextでIMEの未確定文字列が確定された瞬間 | SpiriteK Blog</a></li>
</ul>


<p>の記事にめぐり逢いまして、まさに私が求めていたそのもの。</p>

<p>ですが、未確定文字＝下線付き(<code>UnderlineSpan</code>)である、という前提がどうにもしっくり来ませんで(未確定文字に下線を付けない IME もそりゃあるだろうなーという意味で)。</p>

<p>もちろん、その前で言及されている内部クラス <code>android.view.inputmethod.ComposingText</code> を文字列比較するのもうーん…。</p>

<p>で、自分でも試行錯誤してみたところ、<a href="http://developer.android.com/reference/android/text/Spanned.html#getSpanFlags(java.lang.Object">Spanned.getSpanFlags</a> というメソッドがあるのに気づきました。あと、<a href="http://developer.android.com/reference/android/text/Spanned.html#SPAN_COMPOSING">SPAN_COMPOSING</a> というフラグも。</p>

<p>これらを使って、文字列が確定されているかどうか？を識別することができるのではないかと考え、前出の記事のコードを以下のように修正してみました。</p>

<figure class='code'><figcaption><span>DetermineComposingText.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">edit1</span><span class="o">.</span><span class="na">addTextChangedListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TextWatcher</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">currentLength</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTextChanged</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">s</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">before</span><span class="o">,</span> <span class="kt">int</span> <span class="n">count</span><span class="o">)</span> <span class="o">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">beforeTextChanged</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">s</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">count</span><span class="o">,</span> <span class="kt">int</span> <span class="n">after</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">currentLength</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">length</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterTextChanged</span><span class="o">(</span><span class="n">Editable</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">,</span> <span class="s">&quot;after:&quot;</span> <span class="o">+</span> <span class="n">s</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">currentLength</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">unfixed</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Object</span><span class="o">[]</span> <span class="n">spanned</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">getSpans</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">Object</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">spanned</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">obj</span> <span class="o">:</span> <span class="n">spanned</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// UnderlineSpan での判定から getSpanFlags への判定に変更。</span>
</span><span class='line'>                <span class="c1">// if (obj instanceof android.text.style.UnderlineSpan) {</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">((</span><span class="n">s</span><span class="o">.</span><span class="na">getSpanFlags</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span> <span class="o">&amp;</span> <span class="n">Spanned</span><span class="o">.</span><span class="na">SPAN_COMPOSING</span><span class="o">)</span> <span class="o">==</span> <span class="n">Spanned</span><span class="o">.</span><span class="na">SPAN_COMPOSING</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">unfixed</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">unfixed</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Toast</span> <span class="n">toast</span> <span class="o">=</span> <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="s">&quot;確定&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">);</span>
</span><span class='line'>            <span class="n">toast</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>s.getSpanFlags(obj) &amp; Spanned.SPAN_COMPOSING) == Spanned.SPAN_COMPOSING)</code> で SPAN_COMPOSING(未確定文字)のフラグが立っているかを判定しています。</p>

<p>とりあえず手持ちの ATOK では修正前と同じように動作しているようです。</p>

<p>IME 側で「未確定文字は SPAN_COMPOSING を必ず設定する」ものかどうかは分かりませんが、個人的には UnderlineSpan を使った手法よりもすっきりしました、というお話でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps Android API v2 の図形の描画順(zIndex)を探る]]></title>
    <link href="http://amay077.github.com/blog/2012/12/25/googlemap-v2-zindex/"/>
    <updated>2012-12-25T17:48:00+09:00</updated>
    <id>http://amay077.github.com/blog/2012/12/25/googlemap-v2-zindex</id>
    <content type="html"><![CDATA[<p>Google Maps Android API v1 では Overlay をレイヤのように使うことで図形群の前後関係をコントロールできましたが、v2 では <code>Polyline</code> や <code>Polygon</code> クラスに <code>zIndex</code> が導入されました。</p>

<p>いくつかの図形を重ねて描画し、zIndex が与える影響を調べてみました。</p>

<!-- more -->


<h2>zIndex なし の場合</h2>

<p>まず zIndex を指定しない場合。</p>

<ol>
<li>マーカー</li>
<li>線(太)</li>
<li>線(細)</li>
<li>ポリゴン(青)</li>
<li>ポリゴン(緑)</li>
</ol>


<p>の順で <code>GoogleMap</code> に追加しています。</p>

<figure class='code'><figcaption><span>NoZindex.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">TOKYO</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.691</span><span class="o">,</span> <span class="mf">139.693</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">NAGOYA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.1805</span><span class="o">,</span> <span class="mf">136.9073</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">TOYOHASHI</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">34.770</span><span class="o">,</span> <span class="mf">137.391</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">MATSUMOTO</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">36.239</span><span class="o">,</span> <span class="mf">137.969</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">SHIZUOKA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">34.99</span><span class="o">,</span> <span class="mf">138.39</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">MAEBASHI</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">36.38</span><span class="o">,</span> <span class="mf">139.04</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// マーカー</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addMarker</span><span class="o">(</span><span class="k">new</span> <span class="n">MarkerOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">position</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.47</span><span class="o">,</span> <span class="mf">138.71</span><span class="o">))</span>
</span><span class='line'>  <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="s">&quot;富士山&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ライン</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">NAGOYA</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">40</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">));</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">NAGOYA</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ポリゴン</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolygon</span><span class="o">(</span><span class="k">new</span> <span class="n">PolygonOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">MATSUMOTO</span><span class="o">,</span> <span class="n">TOYOHASHI</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">fillColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">CYAN</span><span class="o">));</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolygon</span><span class="o">(</span><span class="k">new</span> <span class="n">PolygonOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">MAEBASHI</span><span class="o">,</span> <span class="n">SHIZUOKA</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">fillColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果、こうなりました。</p>

<p><img src="https://dl.dropbox.com/u/264530/qiita/zindex_off.png" alt="noZindex" /></p>

<p>前後関係を見ると、奥から</p>

<ol>
<li>ポリゴン(青)</li>
<li>ポリゴン(緑)</li>
<li>線(太)</li>
<li>線(細)</li>
<li>マーカー</li>
</ol>


<p>となりました。描画順＝追加した順、であれば、マーカーや線は、ポリゴンによって覆い隠されてしまうのですが、そうなりませんでした。
図形によって前後関係が決められていて、
奥から ポリゴン → ライン → マーカー となるようです。
ちなみに、zindex を指定しない時の既定値は <code>0</code> です。</p>

<h2>zIndex を設定してみる</h2>

<p>次に zIndex を次のように設定してみます。</p>

<figure class='code'><figcaption><span>WithZindex.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// マーカー</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addMarker</span><span class="o">(</span><span class="k">new</span> <span class="n">MarkerOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">position</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.47</span><span class="o">,</span> <span class="mf">138.71</span><span class="o">))</span>
</span><span class='line'>  <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="s">&quot;富士山&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ライン</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">NAGOYA</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">40</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">zIndex</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">NAGOYA</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">zIndex</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ポリゴン</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolygon</span><span class="o">(</span><span class="k">new</span> <span class="n">PolygonOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">MATSUMOTO</span><span class="o">,</span> <span class="n">TOYOHASHI</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">fillColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">CYAN</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">zIndex</span><span class="o">(</span><span class="mi">3</span><span class="o">));</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolygon</span><span class="o">(</span><span class="k">new</span> <span class="n">PolygonOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">MAEBASHI</span><span class="o">,</span> <span class="n">SHIZUOKA</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">fillColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">zIndex</span><span class="o">(</span><span class="mi">4</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下のとおり。</p>

<p><img src="https://dl.dropbox.com/u/264530/qiita/zindex_on.png" alt="noZindex" /></p>

<ol>
<li>線(太)</li>
<li>線(細)</li>
<li>ポリゴン(青)</li>
<li>ポリゴン(緑)</li>
<li>マーカー</li>
</ol>


<p>む、ライン、ポリゴンに関係なく、zIndex で指定した順に奥から描画されているようです。</p>

<h2>Developer Guide の説明</h2>

<p>いつも試してから見る公式ガイドｗ</p>

<ul>
<li><a href="https://developers.google.com/maps/documentation/android/lines#customize_a_polyline">Customize a Polyline - Google Maps Android API v2</a></li>
</ul>


<blockquote><p>Z-index
The stack order of this Polyline, relative to other overlays (polylines, polygons, ground overlays and tile overlays) in the map. A Polyline with a high z-index is drawn above overlays with lower z-indexes. Two overlays with the same z-index are drawn in an arbitrary order. Set this property with PolylineOptions.zIndex(). You can change this after the Polyline has been added to the map with the Polyline.setZIndex() method.</p></blockquote>

<p>まあ、それっぽいことが書いてあるわｗ
どうやら <code>GroundOverlay</code> や <code>TileOverlay</code> にも zIndex があり、前後関係をコントロールできるようですね。</p>

<h2>まとめ</h2>

<p>Google Maps Android API v2 の Polyline と Polygon の zIndex はまとめると次のようになります。</p>

<ul>
<li>指定しない(<code>0</code>)と、追加の順番に関わらず <strong><em>Polyline の方が Polygon よりも手前</em></strong> に描画される。Polyline 同士、Polygon 同士は、追加順に奥から描画される。</li>
<li>指定した場合、Polyline、Polygon の区別なく、<strong><em>zIndex の順で</em></strong> 奥から描画される。</li>
<li>マーカーは常に一番手前に描画される。</li>
</ul>


<p>ということで、zIndex をうまく設定すれば、図形群の前後関係を調整・変更することができます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps Android API v2 で大圏コースを表示する]]></title>
    <link href="http://amay077.github.com/blog/2012/12/24/googlemap-v2-geodesic-line/"/>
    <updated>2012-12-24T17:51:00+09:00</updated>
    <id>http://amay077.github.com/blog/2012/12/24/googlemap-v2-geodesic-line</id>
    <content type="html"><![CDATA[<p>GoogleMap は<a href="http://ja.wikipedia.org/wiki/%E3%83%A1%E3%83%AB%E3%82%AB%E3%83%88%E3%83%AB%E5%9B%B3%E6%B3%95">メルカトル図法</a>なので、地図上の２点間を結んだ直線は最短距離になりません。(メルカトル図法で正しいのは角度だけ、でしたよね。)</p>

<p>地球上の２点間の最短距離は「<a href="http://ja.wikipedia.org/wiki/%E5%A4%A7%E5%9C%8F%E3%82%B3%E3%83%BC%E3%82%B9">大圏コース</a>」と呼ばれます。</p>

<p>で、Android 版の新しい API を使うと、この大圏コースを簡単に表示することができます。</p>

<!-- more -->


<p>こんな感じ、赤がただの直線、青が大圏コースです。</p>

<p><img src="https://dl.dropbox.com/u/264530/qiita/greatcircle.png" alt="greatcircle" /></p>

<p>やり方は以下のとおりで、<code>geodesic</code> を <code>true</code> にすれば大圏コースになります。</p>

<figure class='code'><figcaption><span>GeodesicPolyline.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">GoogleMap</span> <span class="n">mMap</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">TOKYO</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">35.691</span><span class="o">,</span> <span class="mf">139.693</span><span class="o">);</span>
</span><span class='line'><span class="kd">final</span> <span class="n">LatLng</span> <span class="n">HAWAII</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">19.87</span><span class="o">,</span> <span class="o">-</span><span class="mf">155.56</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ただの直線</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">HAWAII</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">geodesic</span><span class="o">(</span><span class="kc">false</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 大圏コース</span>
</span><span class='line'><span class="n">mMap</span><span class="o">.</span><span class="na">addPolyline</span><span class="o">(</span><span class="k">new</span> <span class="n">PolylineOptions</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">TOKYO</span><span class="o">,</span> <span class="n">HAWAII</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">width</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">color</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">)</span>
</span><span class='line'>    <span class="o">.</span><span class="na">geodesic</span><span class="o">(</span><span class="kc">true</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Developper Guide に説明があります。</p>

<ul>
<li><a href="https://developers.google.com/maps/documentation/android/lines#geodesic_and_non-geodesic_lines">Polylines and Polygons - Google Maps Android API v2</a></li>
</ul>


<blockquote><p>A Geodesic line is a line that follows the curvature of the earth. In contrast, a non-geodesic line will be drawn using the coordinate system of your screen. By Default, Polyline and Polygon objects will draw non-geodesic lines. You can change any Polyline or Polygon to use geodesic lines by setting the geodesic property to true.</p>

<p>適当訳
Geodesic なラインとは地球上の曲がった線のことです。non-geodesic ってやつは画面座標系で描いた線で、これがデフォルトです。Polyline や Polygon を geodesic にしたければ geodesic プロパティを true にするとよろし。</p></blockquote>

<p>ちなみにこの「２点間の最短距離」は <a href="http://developer.android.com/reference/android/location/Location.html#distanceBetween(double,%20double,%20double,%20double,%20float[]">Location.distanceBetween</a> メソッドで求められます。</p>

<p>どうやら、Javascript 版にはもともとこの機能があったようで、以下のサイトに例があります。</p>

<ul>
<li><a href="http://user.numazu-ct.ac.jp/~tsato/tsato/geoweb/googlemaps/great-circle/">Googleマップで大圏コースを表示する</a></li>
</ul>


<p>あと、iOS 版の Google Maps API にもあるみた…あれ、ないや。
(余談ですが iOS 版の API には Polygon を描く機能もないんですね)</p>

<ul>
<li><a href="https://developers.google.com/maps/documentation/ios/lines">Polylines - Google Maps SDK for iOS</a></li>
</ul>


<h2>その他</h2>

<p>つか、Android の GoogleMap さん、思いっきり縮小しても世界が画面内に収まらないので、大圏コースの例が見せにくいわ。</p>
]]></content>
  </entry>
  
</feed>
